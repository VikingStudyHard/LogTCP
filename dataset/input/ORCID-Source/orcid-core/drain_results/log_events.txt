cli.LoadRinggoldData (LoadRinggoldData.java:364) - Couldn't find entity to be deleted with ringgold_id: '9'
database.DatabaseConfig <:*:> - <:*:> <:*:> - start
database.DatabaseConnection (DatabaseConnection.java:156) - Database connection info:
database.DatabaseConnection <:*:> - <:*:> - start
database.DatabaseConnection (DatabaseConnection.java:178) - Schema is null. Nothing to validate.
database.DatabaseConfig <:*:> - <:*:> - start
database.QueryDataSet <:*:> - <:*:> - start
database.QueryDataSet <:*:> - <:*:> <:*:> - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> - start
dataset.OrderedTableNameMap <:*:> - <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:264) - <:*:> - end - <:*:>
operation.AbstractBatchOperation (AbstractBatchOperation.java:123) - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
operation.DeleteOperation (DeleteOperation.java:65) - iterator(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
dataset.AbstractDataSet <:*:> - <:*:> - start
database.QueryTableIterator <:*:> - <:*:> - start
database.AbstractDatabaseConnection <:*:> - <:*:> - start
database.AbstractDatabaseConnection (AbstractDatabaseConnection.java:87) - <:*:> sql=select * from <:*:> - start
database.CachedResultSetTableFactory (CachedResultSetTableFactory.java:49) - <:*:> selectStatement=select * from <:*:> connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> - start
database.AbstractResultSetTable <:*:> - <:*:> - start
database.DatabaseConfig$Configurator (DatabaseConfig.java:573) - <:*:> - start
database.DatabaseConfig$Configurator (DatabaseConfig.java:576) - Statement fetch size set to 100
database.ResultSetTableMetaData (ResultSetTableMetaData.java:125) - <:*:> <:*:> connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> - start
dataset.AbstractTableMetaData (AbstractTableMetaData.java:197) - The current database 'HSQL Database Engine' fits to the configured data type factory <:*:> Validation successful.
database.ResultSetTableMetaData (ResultSetTableMetaData.java:139) - <:*:> <:*:> <:*:> <:*:> - start
database.ResultSetTableMetaData (ResultSetTableMetaData.java:219) - <:*:>
database.ResultSetTableMetaData (ResultSetTableMetaData.java:257) - All attributes from the ResultSetMetaData are valid, trying to lookup values in DatabaseMetaData. catalog=PUBLIC, schema=PUBLIC, <:*:> <:*:>
database.DefaultMetadataHandler <:*:> - <:*:> <:*:> <:*:> - start
database.DefaultMetadataHandler (DefaultMetadataHandler.java:69) - <:*:> catalog=PUBLIC, schema=PUBLIC, <:*:> <:*:> caseSensitive=false) - start
database.DefaultMetadataHandler (DefaultMetadataHandler.java:80) - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: PUBLIC<=>PUBLIC schema: PUBLIC<=>PUBLIC table: <:*:> column: <:*:>
datatype.DefaultDataTypeFactory (DefaultDataTypeFactory.java:97) - <:*:> , <:*:> <:*:> <:*:> - start
hsqldb.HsqldbDataTypeFactory (HsqldbDataTypeFactory.java:63) - <:*:> <:*:> - start
datatype.DefaultDataTypeFactory (DefaultDataTypeFactory.java:66) - <:*:> <:*:> - start
datatype.DataType <:*:> - <:*:> - start
datatype.AbstractDataType (AbstractDataType.java:154) - getSqlType() - start
dataset.Column (Column.java:205) - <:*:> - start
dataset.Column$AutoIncrement (Column.java:359) - <:*:> - start
util.SQLHelper (SQLHelper.java:117) - <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.DefaultTable <:*:> - <:*:> - start
database.ForwardOnlyResultSetTable (ForwardOnlyResultSetTable.java:79) - <:*:> <:*:> - start
database.AbstractDatabaseConnection (AbstractDatabaseConnection.java:91) - createQueryTable: <:*:>
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> keys=[]], <:*:> - start
dataset.DefaultTable (DefaultTable.java:192) - <:*:> <:*:> - start
dataset.AbstractTable <:*:> - <:*:> - start
dataset.AbstractTable (AbstractTable.java:51) - <:*:> <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> keys=[]], _rowList.size()=0]) - start
database.QueryDataSet (QueryDataSet.java:92) - addTable(tableName=profile, query=SELECT p1.* FROM profile p1 LEFT JOIN client_details c ON c.group_orcid = p1.orcid LEFT JOIN profile p2 ON p1.source_id = p2.source_id WHERE p2.source_id IS NULL AND (c.client_details_id IS NULL OR p1.client_source_id IS NOT NULL)) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> keys=[]], _rowList.size()=0]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, <:*:> noNulls), (ORCID, VARCHAR, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> columns=[(ID, <:*:> noNulls), (ORCID, VARCHAR, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> <:*:> noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable)], keys=[]], _rowList.size()=0]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable)], keys=[]], _rowList.size()=0]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls)], keys=[]], _rowList.size()=0]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, BIGINT, noNulls), (NOTIFICATION_ID, BIGINT, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ITEM_TYPE, VARCHAR, nullable), (ITEM_NAME, VARCHAR, nullable), (EXTERNAL_ID_TYPE, VARCHAR, nullable), (EXTERNAL_ID_VALUE, VARCHAR, nullable), (ACTION_TYPE, VARCHAR, nullable), (ADDITIONAL_INFO, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=notification_item, columns=[(ID, BIGINT, noNulls), (NOTIFICATION_ID, BIGINT, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ITEM_TYPE, VARCHAR, nullable), (ITEM_NAME, VARCHAR, nullable), (EXTERNAL_ID_TYPE, VARCHAR, nullable), (EXTERNAL_ID_VALUE, VARCHAR, nullable), (ACTION_TYPE, VARCHAR, nullable), (ADDITIONAL_INFO, VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (NOTIFICATION_TYPE, VARCHAR, noNulls), (SUBJECT, VARCHAR, nullable), (BODY_TEXT, CLOB, nullable), (BODY_HTML, CLOB, nullable), (SENT_DATE, TIMESTAMP, nullable), (READ_DATE, TIMESTAMP, nullable), (ARCHIVED_DATE, TIMESTAMP, nullable), (SENDABLE, BOOLEAN, noNulls), (SOURCE_ID, VARCHAR, nullable), (AUTHORIZATION_URL, VARCHAR, nullable), (LANG, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (AMENDED_SECTION, VARCHAR, nullable), (ACTIONED_DATE, TIMESTAMP, nullable), (NOTIFICATION_SUBJECT, CLOB, nullable), (NOTIFICATION_INTRO, VARCHAR, nullable), (AUTHENTICATION_PROVIDER_ID, VARCHAR, nullable), (RETRY_COUNT, INTEGER, nullable), (NOTIFICATION_FAMILY, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=notification, columns=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (NOTIFICATION_TYPE, VARCHAR, noNulls), (SUBJECT, VARCHAR, nullable), (BODY_TEXT, CLOB, nullable), (BODY_HTML, CLOB, nullable), (SENT_DATE, TIMESTAMP, nullable), (READ_DATE, TIMESTAMP, nullable), (ARCHIVED_DATE, TIMESTAMP, nullable), (SENDABLE, BOOLEAN, noNulls), (SOURCE_ID, VARCHAR, nullable), (AUTHORIZATION_URL, VARCHAR, nullable), (LANG, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (AMENDED_SECTION, VARCHAR, nullable), (ACTIONED_DATE, TIMESTAMP, nullable), (NOTIFICATION_SUBJECT, CLOB, nullable), (NOTIFICATION_INTRO, VARCHAR, nullable), (AUTHENTICATION_PROVIDER_ID, VARCHAR, nullable), (RETRY_COUNT, INTEGER, nullable), (NOTIFICATION_FAMILY, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(TOKEN_VALUE, VARCHAR, nullable), (TOKEN_TYPE, VARCHAR, nullable), (TOKEN_EXPIRATION, TIMESTAMP, nullable), (USER_ORCID, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (IS_APPROVED, BOOLEAN, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (SCOPE_TYPE, VARCHAR, nullable), (RESOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (AUTHENTICATION_KEY, VARCHAR, nullable), (ID, BIGINT, noNulls), (REFRESH_TOKEN_EXPIRATION, TIMESTAMP, nullable), (REFRESH_TOKEN_VALUE, VARCHAR, nullable), (TOKEN_DISABLED, BOOLEAN, nullable), (PERSISTENT, BOOLEAN, nullable), (VERSION, BIGINT, nullable), (AUTHORIZATION_CODE, VARCHAR, nullable), (REVOCATION_DATE, TIMESTAMP, nullable), (REVOKE_REASON, VARCHAR, nullable), (OBO_CLIENT_DETAILS_ID, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=oauth2_token_detail, columns=[(TOKEN_VALUE, VARCHAR, nullable), (TOKEN_TYPE, VARCHAR, nullable), (TOKEN_EXPIRATION, TIMESTAMP, nullable), (USER_ORCID, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (IS_APPROVED, BOOLEAN, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (SCOPE_TYPE, VARCHAR, nullable), (RESOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (AUTHENTICATION_KEY, VARCHAR, nullable), (ID, BIGINT, noNulls), (REFRESH_TOKEN_EXPIRATION, TIMESTAMP, nullable), (REFRESH_TOKEN_VALUE, VARCHAR, nullable), (TOKEN_DISABLED, BOOLEAN, nullable), (PERSISTENT, BOOLEAN, nullable), (VERSION, BIGINT, nullable), (AUTHORIZATION_CODE, VARCHAR, nullable), (REVOCATION_DATE, TIMESTAMP, nullable), (REVOKE_REASON, VARCHAR, nullable), (OBO_CLIENT_DETAILS_ID, VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ORCID, VARCHAR, noNulls), (CLIENT_DETAILS_ID, VARCHAR, noNulls), (URI, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (LAST_FAILED, TIMESTAMP, nullable), (FAILED_ATTEMPT_COUNT, INTEGER, noNulls), (ENABLED, BOOLEAN, noNulls), (DISABLED_DATE, TIMESTAMP, nullable), (DISABLED_COMMENTS, CLOB, nullable), (LAST_SENT, TIMESTAMP, nullable), (PROFILE_LAST_MODIFIED, TIMESTAMP, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=webhook, columns=[(ORCID, VARCHAR, noNulls), (CLIENT_DETAILS_ID, VARCHAR, noNulls), (URI, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (LAST_FAILED, TIMESTAMP, nullable), (FAILED_ATTEMPT_COUNT, INTEGER, noNulls), (ENABLED, BOOLEAN, noNulls), (DISABLED_DATE, TIMESTAMP, nullable), (DISABLED_COMMENTS, CLOB, nullable), (LAST_SENT, TIMESTAMP, nullable), (PROFILE_LAST_MODIFIED, TIMESTAMP, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), (DESCRIPTION, VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (DISPLAY_INDEX, BIGINT, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), (DESCRIPTION, VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (DISPLAY_INDEX, BIGINT, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (PEER_REVIEW_SUBJECT_ID, BIGINT, nullable), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (ORG_ID, BIGINT, noNulls), (PEER_REVIEW_ROLE, VARCHAR, noNulls), (PEER_REVIEW_TYPE, VARCHAR, noNulls), (COMPLETION_DAY, INTEGER, nullable), (COMPLETION_MONTH, INTEGER, nullable), (COMPLETION_YEAR, INTEGER, nullable), (SOURCE_ID, VARCHAR, nullable), (URL, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (DISPLAY_INDEX, BIGINT, nullable), (SUBJECT_EXTERNAL_IDENTIFIERS_JSON, CLOB, nullable), (SUBJECT_TYPE, VARCHAR, nullable), (SUBJECT_CONTAINER_NAME, VARCHAR, nullable), (SUBJECT_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, VARCHAR, nullable), (SUBJECT_URL, VARCHAR, nullable), (GROUP_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=peer_review, columns=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (PEER_REVIEW_SUBJECT_ID, BIGINT, nullable), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (ORG_ID, BIGINT, noNulls), (PEER_REVIEW_ROLE, VARCHAR, noNulls), (PEER_REVIEW_TYPE, VARCHAR, noNulls), (COMPLETION_DAY, INTEGER, nullable), (COMPLETION_MONTH, INTEGER, nullable), (COMPLETION_YEAR, INTEGER, nullable), (SOURCE_ID, VARCHAR, nullable), (URL, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (DISPLAY_INDEX, BIGINT, nullable), (SUBJECT_EXTERNAL_IDENTIFIERS_JSON, CLOB, nullable), (SUBJECT_TYPE, VARCHAR, nullable), (SUBJECT_CONTAINER_NAME, VARCHAR, nullable), (SUBJECT_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, VARCHAR, nullable), (SUBJECT_URL, VARCHAR, nullable), (GROUP_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> columns=[(DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> TIMESTAMP, <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> TIMESTAMP, <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> keys=[]], _rowList.size()=0]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(URL, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (ID, BIGINT, noNulls), (URL_NAME, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (SOURCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DISPLAY_INDEX, BIGINT, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=researcher_url, columns=[(URL, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (ID, BIGINT, noNulls), (URL_NAME, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (SOURCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DISPLAY_INDEX, BIGINT, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable)], keys=[]], _rowList.size()=0]) - start
database.CachedResultSetTableFactory (CachedResultSetTableFactory.java:49) - createTable(tableName=profile, selectStatement=SELECT p1.* FROM profile p1 LEFT JOIN client_details c ON c.group_orcid = p1.orcid LEFT JOIN profile p2 ON p1.source_id = p2.source_id WHERE p2.source_id IS NULL AND (c.client_details_id IS NULL OR p1.client_source_id IS NOT NULL), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ORCID, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ACCOUNT_EXPIRY, TIMESTAMP, nullable), (COMPLETED_DATE, TIMESTAMP, nullable), (CLAIMED, BOOLEAN, nullable), (CREATION_METHOD, VARCHAR, nullable), (ENABLED, BOOLEAN, nullable), (ENCRYPTED_PASSWORD, VARCHAR, nullable), (IS_SELECTABLE_SPONSOR, BOOLEAN, nullable), (SOURCE_ID, VARCHAR, nullable), (ORCID_TYPE, VARCHAR, nullable), (SUBMISSION_DATE, TIMESTAMP, noNulls), (INDEXING_STATUS, VARCHAR, noNulls), (PROFILE_DEACTIVATION_DATE, TIMESTAMP, nullable), (ACTIVITIES_VISIBILITY_DEFAULT, VARCHAR, noNulls), (LAST_INDEXED_DATE, TIMESTAMP, nullable), (LOCALE, VARCHAR, noNulls), (GROUP_TYPE, VARCHAR, nullable), (PRIMARY_RECORD, VARCHAR, nullable), (DEPRECATED_DATE, TIMESTAMP, nullable), (REFERRED_BY, VARCHAR, nullable), (ENABLE_DEVELOPER_TOOLS, BOOLEAN, nullable), (ENABLE_NOTIFICATIONS, BOOLEAN, noNulls), (SALESFORCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DEVELOPER_TOOLS_ENABLED_DATE, TIMESTAMP, nullable), (RECORD_LOCKED, BOOLEAN, noNulls), (USED_CAPTCHA_ON_REGISTRATION, BOOLEAN, nullable), (USER_LAST_IP, VARCHAR, nullable), (REVIEWED, BOOLEAN, noNulls), (REASON_LOCKED, VARCHAR, nullable), (REASON_LOCKED_DESCRIPTION, CLOB, nullable), (HASHED_ORCID, VARCHAR, nullable), (SECRET_FOR_2FA, VARCHAR, nullable), (USING_2FA, BOOLEAN, nullable), (LAST_LOGIN, TIMESTAMP, nullable), (DEPRECATING_ADMIN, VARCHAR, nullable), (DEPRECATED_METHOD, VARCHAR, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=profile, columns=[(ORCID, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ACCOUNT_EXPIRY, TIMESTAMP, nullable), (COMPLETED_DATE, TIMESTAMP, nullable), (CLAIMED, BOOLEAN, nullable), (CREATION_METHOD, VARCHAR, nullable), (ENABLED, BOOLEAN, nullable), (ENCRYPTED_PASSWORD, VARCHAR, nullable), (IS_SELECTABLE_SPONSOR, BOOLEAN, nullable), (SOURCE_ID, VARCHAR, nullable), (ORCID_TYPE, VARCHAR, nullable), (SUBMISSION_DATE, TIMESTAMP, noNulls), (INDEXING_STATUS, VARCHAR, noNulls), (PROFILE_DEACTIVATION_DATE, TIMESTAMP, nullable), (ACTIVITIES_VISIBILITY_DEFAULT, VARCHAR, noNulls), (LAST_INDEXED_DATE, TIMESTAMP, nullable), (LOCALE, VARCHAR, noNulls), (GROUP_TYPE, VARCHAR, nullable), (PRIMARY_RECORD, VARCHAR, nullable), (DEPRECATED_DATE, TIMESTAMP, nullable), (REFERRED_BY, VARCHAR, nullable), (ENABLE_DEVELOPER_TOOLS, BOOLEAN, nullable), (ENABLE_NOTIFICATIONS, BOOLEAN, noNulls), (SALESFORCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DEVELOPER_TOOLS_ENABLED_DATE, TIMESTAMP, nullable), (RECORD_LOCKED, BOOLEAN, noNulls), (USED_CAPTCHA_ON_REGISTRATION, BOOLEAN, nullable), (USER_LAST_IP, VARCHAR, nullable), (REVIEWED, BOOLEAN, noNulls), (REASON_LOCKED, VARCHAR, nullable), (REASON_LOCKED_DESCRIPTION, CLOB, nullable), (HASHED_ORCID, VARCHAR, nullable), (SECRET_FOR_2FA, VARCHAR, nullable), (USING_2FA, BOOLEAN, nullable), (LAST_LOGIN, TIMESTAMP, nullable), (DEPRECATING_ADMIN, VARCHAR, nullable), (DEPRECATED_METHOD, VARCHAR, nullable)], keys=[]], <:*:> - start
database.QueryDataSet (QueryDataSet.java:92) - addTable(tableName=profile, query=SELECT * FROM profile WHERE source_id IS NOT NULL AND source_id != orcid ORDER BY orcid DESC) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> <:*:> noNulls), <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], keys=[]], <:*:> - start
database.CachedResultSetTableFactory (CachedResultSetTableFactory.java:49) - createTable(tableName=profile, selectStatement=SELECT * FROM profile WHERE source_id IS NOT NULL AND source_id != orcid ORDER BY orcid DESC, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> - start
database.QueryDataSet (QueryDataSet.java:92) - addTable(tableName=research_resource_item, spam, query=null) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:264) - <:*:> <:*:> - end - result=RESEARCH_RESOURCE_ITEM, SPAM
database.AbstractDatabaseConnection (AbstractDatabaseConnection.java:110) - createTable(tableName=research_resource_item, spam) - start
database.AbstractDatabaseConnection (AbstractDatabaseConnection.java:87) - createQueryTable(resultName=research_resource_item, spam, sql=select * from research_resource_item, spam) - start
database.CachedResultSetTableFactory (CachedResultSetTableFactory.java:49) - createTable(tableName=research_resource_item, spam, selectStatement=select * from research_resource_item, spam, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> - start
database.ResultSetTableMetaData (ResultSetTableMetaData.java:125) - createMetaData(tableName=research_resource_item, spam, <:*:> connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> - start
database.ResultSetTableMetaData (ResultSetTableMetaData.java:139) - createMetaData(tableName=research_resource_item, spam, <:*:> <:*:> <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, BIGINT, noNulls), (RESEARCH_RESOURCE_ID, BIGINT, noNulls), (RESOURCE_NAME, VARCHAR, noNulls), (RESOURCE_TYPE, VARCHAR, noNulls), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (URL, VARCHAR, nullable), (ITEM_INDEX, BIGINT, noNulls), (ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (REPORTED_DATE, TIMESTAMP, nullable), (SOURCE_TYPE, VARCHAR, nullable), (SPAM_COUNTER, INTEGER, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=research_resource_item, spam, columns=[(ID, BIGINT, noNulls), (RESEARCH_RESOURCE_ID, BIGINT, noNulls), (RESOURCE_NAME, VARCHAR, noNulls), (RESOURCE_TYPE, VARCHAR, noNulls), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (URL, VARCHAR, nullable), (ITEM_INDEX, BIGINT, noNulls), (ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (REPORTED_DATE, TIMESTAMP, nullable), (SOURCE_TYPE, VARCHAR, nullable), (SPAM_COUNTER, INTEGER, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], keys=[]], _rowList.size()=0]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], keys=[]], <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> columns=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> keys=[]], _rowList.size()=0]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> keys=[]], <:*:> - start
fileloader.AbstractDataFileLoader (AbstractDataFileLoader.java:98) - load: processing <:*:>
xml.FlatXmlDataSetBuilder <:*:> - <:*:> - start
xml.FlatXmlDataSetBuilder (FlatXmlDataSetBuilder.java:262) - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
xml.FlatXmlDataSetBuilder (FlatXmlDataSetBuilder.java:283) - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
xml.FlatXmlProducer <:*:> - <:*:> - start
xml.FlatDtdProducer <:*:> - <:*:> <:*:> - start
xml.FlatXmlProducer (FlatXmlProducer.java:414) - startElement(uri=, localName=, <:*:> <:*:> - start
dataset.CachedDataSet <:*:> - <:*:> - start
xml.FlatXmlProducer (FlatXmlProducer.java:184) - <:*:> <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> columns=[], keys=[]) - start
xml.FlatXmlProducer (FlatXmlProducer.java:486) - endElement(uri=, localName=, <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> columns=[], keys=[]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[profile, record_name, biography, orcid_social, orcid_props, profile_event, work, researcher_url, given_permission_to, external_identifier, email, email_event, other_name, profile_keyword, profile_patent, org_disambiguated_external_identifier, org, org_affiliation_relation, profile_funding, funding_external_identifier, address, institution, affiliation, notification, client_details, client_secret, oauth2_token_detail, custom_email, webhook, peer_review, peer_review_subject], _tableMap={GIVEN_PERMISSION_TO=org.dbunit.dataset.DefaultTable[_metaData=tableName=given_permission_to, columns=[], keys=[], _rowList.size()=0], ORG=org.dbunit.dataset.DefaultTable[_metaData=tableName=org, columns=[], keys=[], _rowList.size()=0], EMAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=email, columns=[], keys=[], _rowList.size()=0], EMAIL_EVENT=org.dbunit.dataset.DefaultTable[_metaData=tableName=email_event, columns=[], keys=[], _rowList.size()=0], EXTERNAL_IDENTIFIER=org.dbunit.dataset.DefaultTable[_metaData=tableName=external_identifier, columns=[], keys=[], _rowList.size()=0], PROFILE=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[], keys=[], _rowList.size()=0], CUSTOM_EMAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=custom_email, columns=[], keys=[], _rowList.size()=0], WEBHOOK=org.dbunit.dataset.DefaultTable[_metaData=tableName=webhook, columns=[], keys=[], _rowList.size()=0], PROFILE_PATENT=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_patent, columns=[], keys=[], _rowList.size()=0], ORG_DISAMBIGUATED_EXTERNAL_IDENTIFIER=org.dbunit.dataset.DefaultTable[_metaData=tableName=org_disambiguated_external_identifier, columns=[], keys=[], _rowList.size()=0], FUNDING_EXTERNAL_IDENTIFIER=org.dbunit.dataset.DefaultTable[_metaData=tableName=funding_external_identifier, columns=[], keys=[], _rowList.size()=0], RESEARCHER_URL=org.dbunit.dataset.DefaultTable[_metaData=tableName=researcher_url, columns=[], keys=[], _rowList.size()=0], CLIENT_SECRET=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_secret, columns=[], keys=[], _rowList.size()=0], BIOGRAPHY=org.dbunit.dataset.DefaultTable[_metaData=tableName=biography, columns=[], keys=[], _rowList.size()=0], RECORD_NAME=org.dbunit.dataset.DefaultTable[_metaData=tableName=record_name, columns=[], keys=[], _rowList.size()=0], ORG_AFFILIATION_RELATION=org.dbunit.dataset.DefaultTable[_metaData=tableName=org_affiliation_relation, columns=[], keys=[], _rowList.size()=0], INSTITUTION=org.dbunit.dataset.DefaultTable[_metaData=tableName=institution, columns=[], keys=[], _rowList.size()=0], ORCID_PROPS=org.dbunit.dataset.DefaultTable[_metaData=tableName=orcid_props, columns=[], keys=[], _rowList.size()=0], PROFILE_FUNDING=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_funding, columns=[], keys=[], _rowList.size()=0], AFFILIATION=org.dbunit.dataset.DefaultTable[_metaData=tableName=affiliation, columns=[], keys=[], _rowList.size()=0], CLIENT_DETAILS=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_details, columns=[], keys=[], _rowList.size()=0], NOTIFICATION=org.dbunit.dataset.DefaultTable[_metaData=tableName=notification, columns=[], keys=[], _rowList.size()=0], PEER_REVIEW=org.dbunit.dataset.DefaultTable[_metaData=tableName=peer_review, columns=[], keys=[], _rowList.size()=0], PEER_REVIEW_SUBJECT=org.dbunit.dataset.DefaultTable[_metaData=tableName=peer_review_subject, columns=[], keys=[], _rowList.size()=0], OTHER_NAME=org.dbunit.dataset.DefaultTable[_metaData=tableName=other_name, columns=[], keys=[], _rowList.size()=0], PROFILE_KEYWORD=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_keyword, columns=[], keys=[], _rowList.size()=0], ADDRESS=org.dbunit.dataset.DefaultTable[_metaData=tableName=address, columns=[], keys=[], _rowList.size()=0], PROFILE_EVENT=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_event, columns=[], keys=[], _rowList.size()=0], WORK=org.dbunit.dataset.DefaultTable[_metaData=tableName=work, columns=[], keys=[], _rowList.size()=0], ORCID_SOCIAL=org.dbunit.dataset.DefaultTable[_metaData=tableName=orcid_social, columns=[], keys=[], _rowList.size()=0], OAUTH2_TOKEN_DETAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_token_detail, columns=[], keys=[], _rowList.size()=0]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:154) - createIterator(reversed=false) - start
dataset.ReplacementDataSet$ReplacementIterator <:*:> - <:*:> - start
dataset.DefaultTableIterator (DefaultTableIterator.java:76) - getTable() - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> columns=[], keys=[], _rowList.size()=0]) - start
dataset.ReplacementTable (ReplacementTable.java:82) - setStrictReplacement(strictReplacement=false) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> columns=[], keys=[], _rowList.size()=0], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.AbstractTableMetaData (AbstractTableMetaData.java:101) - <:*:> - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
xml.FlatXmlProducer (FlatXmlProducer.java:296) - Column sensing enabled. Will create a new metaData with potentially new columns if needed
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[profile, record_name, biography, email, client_details, client_authorised_grant_type, client_granted_authority, client_resource_id, client_scope, client_secret, client_redirect_uri], _tableMap={CLIENT_SECRET=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_secret, columns=[(client_details_id, UNKNOWN, nullableUnknown), (client_secret, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], BIOGRAPHY=org.dbunit.dataset.DefaultTable[_metaData=tableName=biography, columns=[(id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (biography, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], PROFILE=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], RECORD_NAME=org.dbunit.dataset.DefaultTable[_metaData=tableName=record_name, columns=[(id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (credit_name, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], CLIENT_RESOURCE_ID=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_resource_id, columns=[(client_details_id, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], CLIENT_GRANTED_AUTHORITY=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_granted_authority, columns=[(client_details_id, UNKNOWN, nullableUnknown), (granted_authority, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], CLIENT_DETAILS=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_details, columns=[(client_details_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (client_type, UNKNOWN, nullableUnknown), (client_name, UNKNOWN, nullableUnknown), (client_description, UNKNOWN, nullableUnknown), (client_website, UNKNOWN, nullableUnknown), (group_orcid, UNKNOWN, nullableUnknown), (persistent_tokens_enabled, UNKNOWN, nullableUnknown), (allow_auto_deprecate, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], CLIENT_REDIRECT_URI=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_redirect_uri, columns=[(client_details_id, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (redirect_uri_type, UNKNOWN, nullableUnknown), (predefined_client_redirect_scope, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], CLIENT_SCOPE=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_scope, columns=[(client_details_id, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=31], EMAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=email, columns=[(orcid, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (email_hash, UNKNOWN, nullableUnknown), (is_primary, UNKNOWN, nullableUnknown), (is_current, UNKNOWN, nullableUnknown), (is_verified, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], CLIENT_AUTHORISED_GRANT_TYPE=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_authorised_grant_type, columns=[(client_details_id, UNKNOWN, nullableUnknown), (grant_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=6]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
dataset.ReplacementTable (ReplacementTable.java:245) - <:*:> <:*:> - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
database.DatabaseDataSet <:*:> - <:*:> - start
database.DatabaseDataSet (DatabaseDataSet.java:182) - Initializing the data set from the database...
database.DatabaseDataSet (DatabaseDataSet.java:203) -
database.DatabaseDataSet (DatabaseDataSet.java:204) - metadata <:*:>
database.DefaultMetadataHandler (DefaultMetadataHandler.java:106) - <:*:> - start
util.QualifiedTableName (QualifiedTableName.java:142) - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> - start
util.QualifiedTableName (QualifiedTableName.java:152) - Qualified table names feature is disabled. Returning plain table name
util.QualifiedTableName (QualifiedTableName.java:190) - getQualifiedName(prefix=null, <:*:> escapePattern=null) - start
util.SQLHelper <:*:> - <:*:> <:*:> - start
util.SQLHelper (SQLHelper.java:657) - isEscaped returns 'false' for <:*:> (dbIdentifierQuoteString=")
util.SQLHelper (SQLHelper.java:637) - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: <:*:> <:*:>
database.DatabaseTableMetaData (DatabaseTableMetaData.java:139) - Validating if table <:*:> exists in schema 'null' ...
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - The current database 'HSQL Database Engine' fits to the configured data type factory <:*:> Validation successful.
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> catalog=null, schema=null, <:*:> column=null, caseSensitive=false) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - Comparing the following values using caseSensitive=false (searched<=>actual): catalog: null<=>PUBLIC schema: null<=>PUBLIC table: <:*:> column: <:*:>
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ORCID, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ACCOUNT_EXPIRY, TIMESTAMP, nullable), (COMPLETED_DATE, TIMESTAMP, nullable), (CLAIMED, BOOLEAN, nullable), (CREATION_METHOD, VARCHAR, nullable), (ENABLED, BOOLEAN, nullable), (ENCRYPTED_PASSWORD, VARCHAR, nullable), (IS_SELECTABLE_SPONSOR, BOOLEAN, nullable), (SOURCE_ID, VARCHAR, nullable), (ORCID_TYPE, VARCHAR, nullable), (SUBMISSION_DATE, TIMESTAMP, noNulls), (INDEXING_STATUS, VARCHAR, noNulls), (PROFILE_DEACTIVATION_DATE, TIMESTAMP, nullable), (ACTIVITIES_VISIBILITY_DEFAULT, VARCHAR, noNulls), (LAST_INDEXED_DATE, TIMESTAMP, nullable), (LOCALE, VARCHAR, noNulls), (GROUP_TYPE, VARCHAR, nullable), (PRIMARY_RECORD, VARCHAR, nullable), (DEPRECATED_DATE, TIMESTAMP, nullable), (REFERRED_BY, VARCHAR, nullable), (ENABLE_DEVELOPER_TOOLS, BOOLEAN, nullable), (ENABLE_NOTIFICATIONS, BOOLEAN, noNulls), (SALESFORCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DEVELOPER_TOOLS_ENABLED_DATE, TIMESTAMP, nullable), (RECORD_LOCKED, BOOLEAN, noNulls), (USED_CAPTCHA_ON_REGISTRATION, BOOLEAN, nullable), (USER_LAST_IP, VARCHAR, nullable), (REVIEWED, BOOLEAN, noNulls), (REASON_LOCKED, VARCHAR, nullable), (REASON_LOCKED_DESCRIPTION, CLOB, nullable), (HASHED_ORCID, VARCHAR, nullable), (SECRET_FOR_2FA, VARCHAR, nullable), (USING_2FA, BOOLEAN, nullable), (LAST_LOGIN, TIMESTAMP, nullable), (DEPRECATING_ADMIN, VARCHAR, nullable), (DEPRECATED_METHOD, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=profile, object=table=PROFILE, cols=[(ORCID, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ACCOUNT_EXPIRY, TIMESTAMP, nullable), (COMPLETED_DATE, TIMESTAMP, nullable), (CLAIMED, BOOLEAN, nullable), (CREATION_METHOD, VARCHAR, nullable), (ENABLED, BOOLEAN, nullable), (ENCRYPTED_PASSWORD, VARCHAR, nullable), (IS_SELECTABLE_SPONSOR, BOOLEAN, nullable), (SOURCE_ID, VARCHAR, nullable), (ORCID_TYPE, VARCHAR, nullable), (SUBMISSION_DATE, TIMESTAMP, noNulls), (INDEXING_STATUS, VARCHAR, noNulls), (PROFILE_DEACTIVATION_DATE, TIMESTAMP, nullable), (ACTIVITIES_VISIBILITY_DEFAULT, VARCHAR, noNulls), (LAST_INDEXED_DATE, TIMESTAMP, nullable), (LOCALE, VARCHAR, noNulls), (GROUP_TYPE, VARCHAR, nullable), (PRIMARY_RECORD, VARCHAR, nullable), (DEPRECATED_DATE, TIMESTAMP, nullable), (REFERRED_BY, VARCHAR, nullable), (ENABLE_DEVELOPER_TOOLS, BOOLEAN, nullable), (ENABLE_NOTIFICATIONS, BOOLEAN, noNulls), (SALESFORCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DEVELOPER_TOOLS_ENABLED_DATE, TIMESTAMP, nullable), (RECORD_LOCKED, BOOLEAN, noNulls), (USED_CAPTCHA_ON_REGISTRATION, BOOLEAN, nullable), (USER_LAST_IP, VARCHAR, nullable), (REVIEWED, BOOLEAN, noNulls), (REASON_LOCKED, VARCHAR, nullable), (REASON_LOCKED_DESCRIPTION, CLOB, nullable), (HASHED_ORCID, VARCHAR, nullable), (SECRET_FOR_2FA, VARCHAR, nullable), (USING_2FA, BOOLEAN, nullable), (LAST_LOGIN, TIMESTAMP, nullable), (DEPRECATING_ADMIN, VARCHAR, nullable), (DEPRECATED_METHOD, VARCHAR, nullable)], pk=[(ORCID, VARCHAR, noNulls)]) - start
database.DatabaseTableMetaData <:*:> - <:*:> - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable)], <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractOperation (AbstractOperation.java:55) - getQualifiedName(prefix=null, <:*:> connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
util.QualifiedTableName (QualifiedTableName.java:126) - getQualifiedName() - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.AbstractStatementFactory (AbstractStatementFactory.java:51) - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - <:*:> <:*:> - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:59) - <:*:> - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - <:*:> <:*:> <:*:> - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into PROFILE (ORCID, CREATION_METHOD, COMPLETED_DATE, DATE_CREATED, SUBMISSION_DATE, LAST_INDEXED_DATE, LAST_MODIFIED, CLAIMED, IS_SELECTABLE_SPONSOR, ENCRYPTED_PASSWORD, ACTIVITIES_VISIBILITY_DEFAULT, INDEXING_STATUS, ORCID_TYPE, GROUP_TYPE) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[5555-5555-5555-5558], [API], <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.TimestampDataType <:*:> - <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null]]]) - start
datatype.BooleanDataType (BooleanDataType.java:66) - <:*:> - start
statement.AutomaticPreparedBatchStatement <:*:> - <:*:> - start
statement.SimplePreparedStatement <:*:> - <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
statement.AbstractPreparedBatchStatement (AbstractPreparedBatchStatement.java:54) - close() - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ID, <:*:> noNulls), (ORCID, VARCHAR, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> cols=[(ID, <:*:> noNulls), (ORCID, VARCHAR, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> pk=[(ID, <:*:> noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:62) - <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - <:*:> <:*:> <:*:> <:*:> <:*:> - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> column=5, <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.DataType (DataType.java:177) - <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:59) - <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=PUBLIC, column=6, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?)], parameters=[[100], [org.hsqldb.types.TimestampData@57200100], [org.hsqldb.types.TimestampData@57200100], [5555-5555-5555-5558], [Source Client Group 1], [null]]]) - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> cols=[(ID, BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable)], pk=[(ID, BIGINT, noNulls)]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=This is just a group of clients., column=5, <:*:> into BIOGRAPHY (ID, DATE_CREATED, LAST_MODIFIED, ORCID, BIOGRAPHY, VISIBILITY) values (?, ?, ?, ?, ?, ?)], parameters=[[100], [org.hsqldb.types.TimestampData@57200100], [org.hsqldb.types.TimestampData@57200100], [5555-5555-5555-5558], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:59) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> cols=[(DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], <:*:> <:*:> noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable)], <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:143) - setSqlValue(value=true, <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable)], <:*:> <:*:> noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable)], <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2012-04-25, <:*:> <:*:> into CLIENT_DETAILS <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:62) - <:*:> - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - <:*:> <:*:> <:*:> <:*:> - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> 1, <:*:> <:*:> into CLIENT_DETAILS <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null]]]) - start
datatype.DataType (DataType.java:177) - <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:59) - <:*:> <:*:> <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=A test source client, <:*:> <:*:> into CLIENT_DETAILS <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into CLIENT_DETAILS <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> <:*:> into CLIENT_DETAILS <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> into CLIENT_DETAILS <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [true]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> into CLIENT_DETAILS <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [true]]]) - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> <:*:> TIMESTAMP, <:*:> <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> VARCHAR, noNulls), <:*:> VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], <:*:> VARCHAR, noNulls), <:*:> VARCHAR, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> VARCHAR, noNulls), <:*:> VARCHAR, noNulls)], <:*:> VARCHAR, noNulls), <:*:> VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> values (?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> values (?, ?)], <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> (DATE_CREATED, TIMESTAMP, <:*:> (LAST_MODIFIED, TIMESTAMP, <:*:> <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (CLIENT_SECRET, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, noNulls), (LAST_MODIFIED, TIMESTAMP, noNulls), (IS_PRIMARY, BOOLEAN, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> VARCHAR, noNulls), <:*:> VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, <:*:> (LAST_MODIFIED, TIMESTAMP, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> (LAST_MODIFIED, TIMESTAMP, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2012-04-25, <:*:> <:*:> into CLIENT_SECRET (CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?)], <:*:> [DhkFj5EI0qp6GsUKi55Vja+h+bsaKpBx], <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - getColumns(columnNames=[CLIENT_DETAILS_ID, REDIRECT_URI, REDIRECT_URI_TYPE], columns=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (REDIRECT_URI, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (PREDEFINED_CLIENT_REDIRECT_SCOPE, VARCHAR, nullable), (REDIRECT_URI_TYPE, VARCHAR, noNulls), (URI_ACT_TYPE, CLOB, nullable), (URI_GEO_AREA, CLOB, nullable), (STATUS, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (REDIRECT_URI, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (PREDEFINED_CLIENT_REDIRECT_SCOPE, VARCHAR, nullable), (REDIRECT_URI_TYPE, VARCHAR, noNulls), (URI_ACT_TYPE, CLOB, nullable), (URI_GEO_AREA, CLOB, nullable), (STATUS, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> VARCHAR, noNulls), <:*:> VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> noNulls)]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=backup_code, object=tableName=backup_code, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - startTable(metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (reviewed, UNKNOWN, nullableUnknown), (record_locked, UNKNOWN, nullableUnknown), (using_2fa, UNKNOWN, nullableUnknown), (secret_for_2fa, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (primary_record, UNKNOWN, nullableUnknown), (deprecated_date, UNKNOWN, nullableUnknown), (profile_deactivation_date, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=profile, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (reviewed, UNKNOWN, nullableUnknown), (record_locked, UNKNOWN, nullableUnknown), (using_2fa, UNKNOWN, nullableUnknown), (secret_for_2fa, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (primary_record, UNKNOWN, nullableUnknown), (deprecated_date, UNKNOWN, nullableUnknown), (profile_deactivation_date, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=21]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - startTable(metaData=tableName=backup_code, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=backup_code, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=backup_code, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[profile, granted_authority, external_identifier, researcher_url, other_name, address, given_permission_to, email, profile_keyword, email_frequency, backup_code, profile_history_event], _tableMap={EXTERNAL_IDENTIFIER=org.dbunit.dataset.DefaultTable[_metaData=tableName=external_identifier, columns=[(id, UNKNOWN, nullableUnknown), (external_id_reference, UNKNOWN, nullableUnknown), (external_id_type, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_id_url, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], PROFILE=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (reviewed, UNKNOWN, nullableUnknown), (record_locked, UNKNOWN, nullableUnknown), (using_2fa, UNKNOWN, nullableUnknown), (secret_for_2fa, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (primary_record, UNKNOWN, nullableUnknown), (deprecated_date, UNKNOWN, nullableUnknown), (profile_deactivation_date, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=21], GIVEN_PERMISSION_TO=org.dbunit.dataset.DefaultTable[_metaData=tableName=given_permission_to, columns=[(given_permission_to_id, UNKNOWN, nullableUnknown), (giver_orcid, UNKNOWN, nullableUnknown), (receiver_orcid, UNKNOWN, nullableUnknown), (approval_date, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], GRANTED_AUTHORITY=org.dbunit.dataset.DefaultTable[_metaData=tableName=granted_authority, columns=[(authority, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=13], BACKUP_CODE=org.dbunit.dataset.DefaultTable[_metaData=tableName=backup_code, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], OTHER_NAME=org.dbunit.dataset.DefaultTable[_metaData=tableName=other_name, columns=[(other_name_id, UNKNOWN, nullableUnknown), (display_name, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], ADDRESS=org.dbunit.dataset.DefaultTable[_metaData=tableName=address, columns=[(id, UNKNOWN, nullableUnknown), (iso2_country, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (is_primary, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=16], PROFILE_KEYWORD=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_keyword, columns=[(id, UNKNOWN, nullableUnknown), (profile_orcid, UNKNOWN, nullableUnknown), (keywords_name, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=16], EMAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=email, columns=[(orcid, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (email_hash, UNKNOWN, nullableUnknown), (is_primary, UNKNOWN, nullableUnknown), (is_current, UNKNOWN, nullableUnknown), (is_verified, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=39], EMAIL_FREQUENCY=org.dbunit.dataset.DefaultTable[_metaData=tableName=email_frequency, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (send_administrative_change_notifications, UNKNOWN, nullableUnknown), (send_change_notifications, UNKNOWN, nullableUnknown), (send_member_update_requests, UNKNOWN, nullableUnknown), (send_quarterly_tips, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], RESEARCHER_URL=org.dbunit.dataset.DefaultTable[_metaData=tableName=researcher_url, columns=[(id, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (url_name, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], PROFILE_HISTORY_EVENT=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_history_event, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (event_type, UNKNOWN, nullableUnknown), (comment, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - createReplacementTable(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (reviewed, UNKNOWN, nullableUnknown), (record_locked, UNKNOWN, nullableUnknown), (using_2fa, UNKNOWN, nullableUnknown), (secret_for_2fa, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (primary_record, UNKNOWN, nullableUnknown), (deprecated_date, UNKNOWN, nullableUnknown), (profile_deactivation_date, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=21]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (reviewed, UNKNOWN, nullableUnknown), (record_locked, UNKNOWN, nullableUnknown), (using_2fa, UNKNOWN, nullableUnknown), (secret_for_2fa, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (primary_record, UNKNOWN, nullableUnknown), (deprecated_date, UNKNOWN, nullableUnknown), (profile_deactivation_date, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=21], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (reviewed, UNKNOWN, nullableUnknown), (record_locked, UNKNOWN, nullableUnknown), (using_2fa, UNKNOWN, nullableUnknown), (secret_for_2fa, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (primary_record, UNKNOWN, nullableUnknown), (deprecated_date, UNKNOWN, nullableUnknown), (profile_deactivation_date, UNKNOWN, nullableUnknown)], keys=[]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (reviewed, UNKNOWN, nullableUnknown), (record_locked, UNKNOWN, nullableUnknown), (using_2fa, UNKNOWN, nullableUnknown), (secret_for_2fa, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (primary_record, UNKNOWN, nullableUnknown), (deprecated_date, UNKNOWN, nullableUnknown), (profile_deactivation_date, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=21], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - getOperationData(metaData=tableName=PROFILE, columns=[(ORCID, VARCHAR, noNulls), (CREATION_METHOD, VARCHAR, nullable), (COMPLETED_DATE, TIMESTAMP, nullable), (DATE_CREATED, TIMESTAMP, nullable), (SUBMISSION_DATE, TIMESTAMP, noNulls), (LAST_INDEXED_DATE, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (CLAIMED, BOOLEAN, nullable), (SOURCE_ID, VARCHAR, nullable), (IS_SELECTABLE_SPONSOR, BOOLEAN, nullable), (ENCRYPTED_PASSWORD, VARCHAR, nullable), (ACTIVITIES_VISIBILITY_DEFAULT, VARCHAR, noNulls), (INDEXING_STATUS, VARCHAR, noNulls), (ORCID_TYPE, VARCHAR, nullable), (REVIEWED, BOOLEAN, noNulls), (RECORD_LOCKED, BOOLEAN, noNulls), (USING_2FA, BOOLEAN, nullable), (SECRET_FOR_2FA, VARCHAR, nullable), (GROUP_TYPE, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (PRIMARY_RECORD, VARCHAR, nullable), (DEPRECATED_DATE, TIMESTAMP, nullable), (PROFILE_DEACTIVATION_DATE, TIMESTAMP, nullable)], keys=[(ORCID, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into PROFILE (ORCID, CREATION_METHOD, COMPLETED_DATE, DATE_CREATED, SUBMISSION_DATE, LAST_INDEXED_DATE, LAST_MODIFIED, CLAIMED, SOURCE_ID, IS_SELECTABLE_SPONSOR, ENCRYPTED_PASSWORD, ACTIVITIES_VISIBILITY_DEFAULT, INDEXING_STATUS, ORCID_TYPE, REVIEWED, RECORD_LOCKED, USING_2FA, SECRET_FOR_2FA, GROUP_TYPE, CLIENT_SOURCE_ID, PRIMARY_RECORD, DEPRECATED_DATE, PROFILE_DEACTIVATION_DATE) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PROFILE (ORCID, CREATION_METHOD, COMPLETED_DATE, DATE_CREATED, SUBMISSION_DATE, LAST_INDEXED_DATE, LAST_MODIFIED, CLAIMED, SOURCE_ID, IS_SELECTABLE_SPONSOR, ENCRYPTED_PASSWORD, ACTIVITIES_VISIBILITY_DEFAULT, INDEXING_STATUS, ORCID_TYPE, REVIEWED, RECORD_LOCKED, USING_2FA, SECRET_FOR_2FA, GROUP_TYPE, CLIENT_SOURCE_ID, PRIMARY_RECORD, DEPRECATED_DATE, PROFILE_DEACTIVATION_DATE) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into PROFILE (ORCID, CREATION_METHOD, COMPLETED_DATE, DATE_CREATED, SUBMISSION_DATE, LAST_INDEXED_DATE, LAST_MODIFIED, CLAIMED, SOURCE_ID, IS_SELECTABLE_SPONSOR, ENCRYPTED_PASSWORD, ACTIVITIES_VISIBILITY_DEFAULT, INDEXING_STATUS, ORCID_TYPE, REVIEWED, RECORD_LOCKED, USING_2FA, SECRET_FOR_2FA, GROUP_TYPE, CLIENT_SOURCE_ID, PRIMARY_RECORD, DEPRECATED_DATE, PROFILE_DEACTIVATION_DATE) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> <:*:> into PROFILE (ORCID, CREATION_METHOD, COMPLETED_DATE, DATE_CREATED, SUBMISSION_DATE, LAST_INDEXED_DATE, LAST_MODIFIED, CLAIMED, SOURCE_ID, IS_SELECTABLE_SPONSOR, ENCRYPTED_PASSWORD, ACTIVITIES_VISIBILITY_DEFAULT, INDEXING_STATUS, ORCID_TYPE, REVIEWED, RECORD_LOCKED, USING_2FA, SECRET_FOR_2FA, GROUP_TYPE, CLIENT_SOURCE_ID, PRIMARY_RECORD, DEPRECATED_DATE, PROFILE_DEACTIVATION_DATE) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (encrypted_password, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (reviewed, UNKNOWN, nullableUnknown), (record_locked, UNKNOWN, nullableUnknown), (using_2fa, UNKNOWN, nullableUnknown), (secret_for_2fa, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (primary_record, UNKNOWN, nullableUnknown), (deprecated_date, UNKNOWN, nullableUnknown), (profile_deactivation_date, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=21], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> (VISIBILITY, VARCHAR, <:*:> <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable)], <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into EXTERNAL_IDENTIFIER (ID, EXTERNAL_ID_REFERENCE, EXTERNAL_ID_TYPE, ORCID, EXTERNAL_ID_URL, SOURCE_ID, VISIBILITY, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(URL, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (ID, BIGINT, noNulls), (URL_NAME, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (SOURCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DISPLAY_INDEX, BIGINT, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=researcher_url, object=table=RESEARCHER_URL, cols=[(URL, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (ID, BIGINT, noNulls), (URL_NAME, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (SOURCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DISPLAY_INDEX, BIGINT, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable)], <:*:> BIGINT, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> BIGINT, noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, noNulls), (VISIBILITY, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (DATE_CREATED, TIMESTAMP, nullable), (DISPLAY_INDEX, BIGINT, nullable), (SOURCE_ID, VARCHAR, nullable)], <:*:> BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null]]]) - start
datatype.DataType (DataType.java:177) - <:*:> <:*:> - start
datatype.StringDataType <:*:> - <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Other Name # 1, column=2, <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[5], [other-name-2], [4444-4444-4444-4441], [PUBLIC], [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0b4534], [0], [4444-4444-4444-4441]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [Other Name <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [Other Name <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [Other Name <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Other Name <:*:> <:*:> column=2, <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [Other Name <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Other Name PUBLIC, column=2, <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[13], [Other Name # 3], [4444-4444-4444-4442], [PRIVATE], [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0b4534], [0], [4444-4444-4444-4442]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [Other Name <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2016-04-01 15:31:00.00, <:*:> <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [Other Name <:*:> [0000-0000-0000-0003], <:*:> [APP-5555555555555555], <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [Other Name <:*:> [0000-0000-0000-0003], <:*:> [APP-5555555555555555], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Other Name <:*:> column=2, <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [Other Name <:*:> [0000-0000-0000-0003], <:*:> [APP-5555555555555555], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Other Name SELF LIMITED, column=2, <:*:> into OTHER_NAME (OTHER_NAME_ID, DISPLAY_NAME, ORCID, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[16], [Other Name PRIVATE], [0000-0000-0000-0003], [PRIVATE], [APP-5555555555555555], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [2], [null]]]) - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> column=5, <:*:> into ADDRESS (ID, ISO2_COUNTRY, ORCID, VISIBILITY, IS_PRIMARY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into GIVEN_PERMISSION_TO (GIVEN_PERMISSION_TO_ID, GIVER_ORCID, RECEIVER_ORCID, APPROVAL_DATE) values (?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> column=4, <:*:> into GIVEN_PERMISSION_TO (GIVEN_PERMISSION_TO_ID, GIVER_ORCID, RECEIVER_ORCID, APPROVAL_DATE) values (?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> <:*:> into <:*:> (ORCID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=what else can we make?, column=3, <:*:> into PROFILE_KEYWORD (ID, PROFILE_ORCID, KEYWORDS_NAME, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [4444-4444-4444-4443], [chocolat making], [PRIVATE], [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0b4534], [0], [4444-4444-4444-4443]]]) - start
datatype.DataType (DataType.java:177) - <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:59) - <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PROFILE_KEYWORD (ID, PROFILE_ORCID, KEYWORDS_NAME, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [what else can we make?], [PRIVATE], <:*:> [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0b4534], [0], <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into PROFILE_KEYWORD (ID, PROFILE_ORCID, KEYWORDS_NAME, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [4444-4444-4444-4443], [what else can we make?], [PRIVATE], [APP-5555555555555555], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0b4534], [0], [4444-4444-4444-4443]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into PROFILE_KEYWORD (ID, PROFILE_ORCID, KEYWORDS_NAME, VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [4444-4444-4444-4443], [what else can we make?], [PRIVATE], [APP-5555555555555555], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0b4534], [0], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> VISIBILITY, CLIENT_SOURCE_ID, LAST_MODIFIED, DATE_CREATED, DISPLAY_INDEX, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null]]]) - start
datatype.DoubleDataType (DoubleDataType.java:96) - <:*:> <:*:> <:*:> into EMAIL_FREQUENCY (ID, ORCID, SEND_ADMINISTRATIVE_CHANGE_NOTIFICATIONS, SEND_CHANGE_NOTIFICATIONS, SEND_MEMBER_UPDATE_REQUESTS, SEND_QUARTERLY_TIPS, LAST_MODIFIED, DATE_CREATED) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.DoubleDataType (DoubleDataType.java:56) - <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - createReplacementTable(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=backup_code, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=backup_code, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=backup_code, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into BACKUP_CODE (ID, ORCID, HASHED_CODE, LAST_MODIFIED, DATE_CREATED) values (?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - setSqlValue(value=0, column=1, <:*:> into BACKUP_CODE (ID, ORCID, HASHED_CODE, LAST_MODIFIED, DATE_CREATED) values (?, ?, ?, ?, ?)], parameters=[[null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into BACKUP_CODE (ID, ORCID, HASHED_CODE, LAST_MODIFIED, DATE_CREATED) values (?, ?, ?, ?, ?)], parameters=[[0], <:*:> [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2020-01-01 15:00:00.00, <:*:> <:*:> into BACKUP_CODE (ID, ORCID, HASHED_CODE, LAST_MODIFIED, DATE_CREATED) values (?, ?, ?, ?, ?)], parameters=[[0], [0000-0000-0000-0001], [HASHED_CODE], <:*:> [null]]]) - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=backup_code, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (hashed_code, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=1) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:135) - startTable(metaData=tableName=work, columns=[(work_id, UNKNOWN, nullableUnknown), (publication_year, UNKNOWN, nullableUnknown), (publication_month, UNKNOWN, nullableUnknown), (publication_day, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (subtitle, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (work_type, UNKNOWN, nullableUnknown), (citation, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (citation_type, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (added_to_profile_date, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (journal_title, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (work_url, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=work, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=work, columns=[(work_id, UNKNOWN, nullableUnknown), (publication_year, UNKNOWN, nullableUnknown), (publication_month, UNKNOWN, nullableUnknown), (publication_day, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (subtitle, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (work_type, UNKNOWN, nullableUnknown), (citation, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (citation_type, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (added_to_profile_date, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (journal_title, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (work_url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=17]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[work], _tableMap={WORK=org.dbunit.dataset.DefaultTable[_metaData=tableName=work, columns=[(work_id, UNKNOWN, nullableUnknown), (publication_year, UNKNOWN, nullableUnknown), (publication_month, UNKNOWN, nullableUnknown), (publication_day, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (subtitle, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (work_type, UNKNOWN, nullableUnknown), (citation, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (citation_type, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (added_to_profile_date, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (journal_title, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (work_url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=17]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - createReplacementTable(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=work, columns=[(work_id, UNKNOWN, nullableUnknown), (publication_year, UNKNOWN, nullableUnknown), (publication_month, UNKNOWN, nullableUnknown), (publication_day, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (subtitle, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (work_type, UNKNOWN, nullableUnknown), (citation, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (citation_type, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (added_to_profile_date, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (journal_title, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (work_url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=17]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=work, columns=[(work_id, UNKNOWN, nullableUnknown), (publication_year, UNKNOWN, nullableUnknown), (publication_month, UNKNOWN, nullableUnknown), (publication_day, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (subtitle, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (work_type, UNKNOWN, nullableUnknown), (citation, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (citation_type, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (added_to_profile_date, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (journal_title, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (work_url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=17], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=work, columns=[(work_id, UNKNOWN, nullableUnknown), (publication_year, UNKNOWN, nullableUnknown), (publication_month, UNKNOWN, nullableUnknown), (publication_day, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (subtitle, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (work_type, UNKNOWN, nullableUnknown), (citation, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (citation_type, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (added_to_profile_date, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (journal_title, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (work_url, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), (DESCRIPTION, VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (DISPLAY_INDEX, BIGINT, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), (DESCRIPTION, VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (DISPLAY_INDEX, BIGINT, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], <:*:> BIGINT, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=work, columns=[(work_id, UNKNOWN, nullableUnknown), (publication_year, UNKNOWN, nullableUnknown), (publication_month, UNKNOWN, nullableUnknown), (publication_day, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (subtitle, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (work_type, UNKNOWN, nullableUnknown), (citation, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (citation_type, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (added_to_profile_date, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (journal_title, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (work_url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=17], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - getOperationData(metaData=tableName=WORK, columns=[(WORK_ID, BIGINT, noNulls), (PUBLICATION_YEAR, INTEGER, nullable), (PUBLICATION_MONTH, INTEGER, nullable), (PUBLICATION_DAY, INTEGER, nullable), (TITLE, VARCHAR, nullable), (SUBTITLE, VARCHAR, nullable), (DESCRIPTION, VARCHAR, nullable), (WORK_TYPE, VARCHAR, nullable), (CITATION, CLOB, nullable), (CONTRIBUTORS_JSON, CLOB, nullable), (EXTERNAL_IDS_JSON, CLOB, nullable), (CITATION_TYPE, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (ADDED_TO_PROFILE_DATE, TIMESTAMP, nullable), (VISIBILITY, VARCHAR, nullable), (SOURCE_ID, VARCHAR, nullable), (JOURNAL_TITLE, VARCHAR, nullable), (DISPLAY_INDEX, BIGINT, nullable), (WORK_URL, VARCHAR, nullable)], keys=[(WORK_ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], <:*:> [null], <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], <:*:> [null], <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.IntegerDataType (IntegerDataType.java:56) - <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=A day in the life, column=5, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [2011], [2], [1], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Life in a day, column=6, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [2011], [2], [1], [A day in the life], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dataType=VARCHAR) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dataType=VARCHAR) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Very interesting book about days and life, column=7, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [2011], [2], [1], [A day in the life], [Life in a day], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.DataType (DataType.java:177) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [2011], [2], [1], [A day in the life], [Life in a day], [Very interesting book about days and life], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [2011], [2], [1], [A day in the life], [Life in a day], [Very interesting book about days and life], [BOOK], <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"workExternalIdentifier":[{"workExternalIdentifierType":"DOI","relationship":"self","workExternalIdentifierId":{"content":"1"}}],"scope":null}, column=11, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [2011], [2], [1], [A day in the life], [Life in a day], [Very interesting book about days and life], [BOOK], <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [2011], [2], [1], [A day in the life], [Life in a day], [Very interesting book about days and life], [BOOK], <:*:> <:*:> <:*:> [FORMATTED_IEEE], <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null]]]) - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=work, columns=[(work_id, UNKNOWN, nullableUnknown), (publication_year, UNKNOWN, nullableUnknown), (publication_month, UNKNOWN, nullableUnknown), (publication_day, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (subtitle, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (work_type, UNKNOWN, nullableUnknown), (citation, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (citation_type, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (added_to_profile_date, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (journal_title, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (work_url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=17], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - setSqlValue(value=2, column=1, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [2011], [2], [1], [A day in the life], [Life in a day], [Very interesting book about days and life], [BOOK], <:*:> <:*:> <:*:> [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [APP-5555555555555555], [org.hsqldb.types.TimestampData@778ecbe8], [PUBLIC], [null], [null], [null], [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [2011], [2], [1], [A day in the life], [Life in a day], [Very interesting book about days and life], [BOOK], <:*:> <:*:> <:*:> [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [APP-5555555555555555], [org.hsqldb.types.TimestampData@778ecbe8], [PUBLIC], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Another day in the life, column=5, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [2011], [2], [1], [A day in the life], [Life in a day], [Very interesting book about days and life], [BOOK], <:*:> <:*:> <:*:> [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [APP-5555555555555555], [org.hsqldb.types.TimestampData@778ecbe8], [PUBLIC], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Sue Ellen ewing, column=9, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [2011], [2], [1], [Another day in the life], [null], [null], [BOOK], <:*:> <:*:> <:*:> [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [APP-5555555555555555], [org.hsqldb.types.TimestampData@778ecbe8], [PUBLIC], [null], [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [BOOK], <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> [null], [org.hsqldb.types.TimestampData@778ecbe8], [LIMITED], <:*:> [null], [null], [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [BOOK], <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> [null], [org.hsqldb.types.TimestampData@778ecbe8], [LIMITED], <:*:> [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=A Book With Contributors JSON, column=5, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[3], [2013], [9], [2], [Another day in the life], [null], [null], [BOOK], <:*:> [null], [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [null], [org.hsqldb.types.TimestampData@778ecbe8], [LIMITED], [4444-4444-4444-4443], [null], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"contributor":[{"contributorOrcid":{"value":"0000-0003-0172-7925"},"creditName":{"content":"Jason Contributor"},"contributorEmail":null,"contributorAttributes":null}]}, column=10, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[3], [2013], [9], [2], [A Book With Contributors JSON], [null], [null], [BOOK], [null], [null], [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [null], [org.hsqldb.types.TimestampData@778ecbe8], [LIMITED], [4444-4444-4444-4443], [null], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"workExternalIdentifier":[{"workExternalIdentifierType":"DOI","relationship":"self","workExternalIdentifierId":{"content":"2"}}],"scope":null}, column=11, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[3], [2013], [9], [2], [A Book With Contributors JSON], [null], [null], [BOOK], [null], <:*:> [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [null], [org.hsqldb.types.TimestampData@778ecbe8], [LIMITED], [4444-4444-4444-4443], [null], [null], [null]]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dataType=VARCHAR) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dataType=VARCHAR) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=A book with a Journal Title, column=5, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [2011], [2], [1], [A Book With Contributors JSON], [null], [null], [BOOK], [null], <:*:> <:*:> [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4445], [null], [org.hsqldb.types.TimestampData@778ecbe8], [LIMITED], [4444-4444-4444-4445], [null], [null], [null]]]) - start
datatype.DataType (DataType.java:177) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:59) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [2011], [2], [1], [A book with a Journal Title], [null], [null], [BOOK], <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> [null], [org.hsqldb.types.TimestampData@778ecbe8], <:*:> [4444-4444-4444-4445], [null], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Sue Ellen ewing, column=9, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [2011], [2], [1], [A book with a Journal Title], [null], [null], [BOOK], [null], <:*:> <:*:> [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4445], [null], [org.hsqldb.types.TimestampData@778ecbe8], [LIMITED], [4444-4444-4444-4445], [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [2011], [2], [1], [A book with a Journal Title], [null], [null], [BOOK], <:*:> [null], [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> [null], [org.hsqldb.types.TimestampData@778ecbe8], [LIMITED], [4444-4444-4444-4445], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=My Journal Title, column=20, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [2011], [2], [1], [A book with a Journal Title], [null], [null], [BOOK], <:*:> [null], [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [null], [org.hsqldb.types.TimestampData@778ecbe8], [PRIVATE], [4444-4444-4444-4443], [null], [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - setSqlValue(value=5, column=1, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4], [2011], [2], [1], [A book with a Journal Title], [null], [null], [BOOK], <:*:> [null], [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [null], [org.hsqldb.types.TimestampData@778ecbe8], [PRIVATE], [4444-4444-4444-4443], [My Journal Title], [null], [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[5], [2011], [2], [1], [A book with a Journal Title], [null], [null], [BOOK], <:*:> [null], [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [null], [org.hsqldb.types.TimestampData@778ecbe8], [PRIVATE], [4444-4444-4444-4443], [My Journal Title], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Journal article A, column=5, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[5], [2011], [2], [1], [A book with a Journal Title], [null], [null], [BOOK], <:*:> [null], [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [null], [org.hsqldb.types.TimestampData@778ecbe8], [PRIVATE], [4444-4444-4444-4443], [My Journal Title], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"contributor":[{"contributorOrcid":{"value":"0000-0000-0000-0001"},"creditName":{"content":"Jaylen Kessler"},"contributorEmail":null,"contributorAttributes":null},{"creditName":{"content":"John Smith"},"contributorEmail":null,"contributorAttributes":null},{"contributorOrcid":{"path":"0000-0000-0000-0003"},"creditName":{"content":"Not This Name"},"contributorEmail":null,"contributorAttributes":null},{"contributorOrcid":{"path":"1000-0000-0000-0001"},"creditName":{"content":"Not This Name"},"contributorEmail":null,"contributorAttributes":null}]}, column=10, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[5], [2011], [2], [1], [Journal article A], [null], [null], [JOURNAL_ARTICLE], [null], [null], [null], [FORMATTED_IEEE], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4443], [null], [org.hsqldb.types.TimestampData@778ecbe8], [PRIVATE], [4444-4444-4444-4443], [My Journal Title], [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2011], [2], [1], [Journal article <:*:> [null], [null], [JOURNAL_ARTICLE], [null], <:*:> <:*:> [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> <:*:> [org.hsqldb.types.TimestampData@778ecbe8], <:*:> <:*:> [null], [null], [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [1], [Journal article <:*:> [null], [null], [JOURNAL_ARTICLE], [null], <:*:> <:*:> [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> <:*:> [org.hsqldb.types.TimestampData@778ecbe8], <:*:> <:*:> [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Journal article <:*:> column=5, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2011], [2], [1], [Journal article <:*:> [null], [null], [JOURNAL_ARTICLE], [null], <:*:> [null], [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> <:*:> [org.hsqldb.types.TimestampData@778ecbe8], <:*:> <:*:> [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> [1], <:*:> <:*:> <:*:> [null], [null], [JOURNAL_ARTICLE], [null], <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2011], [2], [1], [Journal article <:*:> [null], [null], [JOURNAL_ARTICLE], [null], [null], <:*:> [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> <:*:> [org.hsqldb.types.TimestampData@778ecbe8], <:*:> <:*:> [null], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"workExternalIdentifier":[{"workExternalIdentifierType":"DOI","relationship":"self","workExternalIdentifierId":{"content":"1"}}],"scope":null}, column=11, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[10], [2011], [2], [1], [Journal article F], [null], [null], [JOURNAL_ARTICLE], [null], [null], [null], [null], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], [4444-4444-4444-4447], [APP-5555555555555555], [org.hsqldb.types.TimestampData@778ecbe8], [PRIVATE], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2016], [1], [1], <:*:> [null], [null], [JOURNAL_ARTICLE], [null], <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2016], [1], [1], <:*:> [null], [null], [JOURNAL_ARTICLE], [null], <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2016-04-01 <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2016], [1], [1], <:*:> [null], [null], [JOURNAL_ARTICLE], [null], <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> [1], <:*:> <:*:> [null], [null], [JOURNAL_ARTICLE], [null], [null], <:*:> [null], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [0000-0000-0000-0003], <:*:> [org.hsqldb.types.TimestampData@7316c1e8], <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> column=11, <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2016], [1], [1], [SELF <:*:> [null], [null], [JOURNAL_ARTICLE], [null], [null], <:*:> [null], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [0000-0000-0000-0003], <:*:> [org.hsqldb.types.TimestampData@7316c1e8], <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2016-04-01 <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2016], [1], [1], [SELF <:*:> [null], [null], [JOURNAL_ARTICLE], [null], [null], <:*:> [null], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [0000-0000-0000-0003], <:*:> [org.hsqldb.types.TimestampData@7316c1e8], <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2016], [1], [1], [SELF <:*:> [null], [null], [JOURNAL_ARTICLE], [null], [null], <:*:> [null], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [0000-0000-0000-0003], [null], [org.hsqldb.types.TimestampData@7316c1e8], <:*:> [0000-0000-0000-0003], [null], <:*:> [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into WORK (WORK_ID, PUBLICATION_YEAR, PUBLICATION_MONTH, PUBLICATION_DAY, TITLE, SUBTITLE, DESCRIPTION, WORK_TYPE, CITATION, CONTRIBUTORS_JSON, EXTERNAL_IDS_JSON, CITATION_TYPE, DATE_CREATED, LAST_MODIFIED, ORCID, CLIENT_SOURCE_ID, ADDED_TO_PROFILE_DATE, VISIBILITY, SOURCE_ID, JOURNAL_TITLE, DISPLAY_INDEX, WORK_URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [2016], [1], [1], [SELF <:*:> [null], [null], [JOURNAL_ARTICLE], [null], [null], <:*:> [null], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [0000-0000-0000-0003], [null], [org.hsqldb.types.TimestampData@7316c1e8], <:*:> [0000-0000-0000-0003], [null], <:*:> [null]]]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[client_details, client_authorised_grant_type, client_granted_authority, client_redirect_uri, client_resource_id, client_scope, client_secret, custom_email], _tableMap={CLIENT_SECRET=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_secret, columns=[(client_details_id, UNKNOWN, nullableUnknown), (client_secret, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=8], CUSTOM_EMAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=custom_email, columns=[(client_details_id, UNKNOWN, nullableUnknown), (email_type, UNKNOWN, nullableUnknown), (content, UNKNOWN, nullableUnknown), (sender, UNKNOWN, nullableUnknown), (subject, UNKNOWN, nullableUnknown), (is_html, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], CLIENT_RESOURCE_ID=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_resource_id, columns=[(client_details_id, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=7], CLIENT_GRANTED_AUTHORITY=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_granted_authority, columns=[(client_details_id, UNKNOWN, nullableUnknown), (granted_authority, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=8], CLIENT_DETAILS=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_details, columns=[(client_type, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (client_secret, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (client_name, UNKNOWN, nullableUnknown), (client_description, UNKNOWN, nullableUnknown), (client_website, UNKNOWN, nullableUnknown), (group_orcid, UNKNOWN, nullableUnknown), (persistent_tokens_enabled, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=8], CLIENT_REDIRECT_URI=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_redirect_uri, columns=[(client_details_id, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (predefined_client_redirect_scope, UNKNOWN, nullableUnknown), (redirect_uri_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], CLIENT_SCOPE=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_scope, columns=[(client_details_id, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=39], CLIENT_AUTHORISED_GRANT_TYPE=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_authorised_grant_type, columns=[(client_details_id, UNKNOWN, nullableUnknown), (grant_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=19]}, _caseSensitiveTableNames=false]
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null]]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Terence Alan Patrick Se?n 'Spike' Milligan KBE (16 April 1918 ? 27 February 2002) was a comedian, writer, musician, poet, playwright, soldier and actor., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Terence Alan Patrick Se?n 'Spike' Milligan KBE (16 April 1918 ? 27 February 2002) was a comedian, writer, musician, poet, playwright, soldier and actor., dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Terence Alan Patrick Se?n 'Spike' Milligan KBE (16 April 1918 ? 27 February 2002) was a comedian, writer, musician, poet, playwright, soldier and actor., column=7, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], [4444-4444-4444-4441], [DhkFj5EI0qp6GsUKi55Vja+h+bsaKpBx], [org.hsqldb.types.TimestampData@4f973e80], [org.hsqldb.types.TimestampData@4f973e80], [S. Milligan], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Terence Alan Patrick Se?n 'Spike' Milligan KBE (16 April 1918 ? 27 February 2002) was a comedian, writer, musician, poet, playwright, soldier and actor.) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> column=10, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=6, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], <:*:> [DhkFj5EI0qp6GsUKi55Vja+h+bsaKpBx], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [4444-4444-4444-4441], <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=, column=7, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], [4444-4444-4444-4442], [DhkFj5EI0qp6GsUKi55Vja+h+bsaKpBx], [org.hsqldb.types.TimestampData@4f973e80], [org.hsqldb.types.TimestampData@4f973e80], [T. Edison], <:*:> [www.4444-4444-4444-4441.com], [4444-4444-4444-4441], [false]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> column=6, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], <:*:> <:*:> [org.hsqldb.types.TimestampData@4f973e80], [org.hsqldb.types.TimestampData@4f973e80], <:*:> <:*:> <:*:> <:*:> <:*:> [false]]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Richard Henry Sellers, CBE (8 September 1925 ? 24 July 1980), known as Peter Sellers, was a British film actor, comedian and singer., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Richard Henry Sellers, CBE (8 September 1925 ? 24 July 1980), known as Peter Sellers, was a British film actor, comedian and singer., dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Richard Henry Sellers, CBE (8 September 1925 ? 24 July 1980), known as Peter Sellers, was a British film actor, comedian and singer., column=7, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], [4444-4444-4444-4443], [DhkFj5EI0qp6GsUKi55Vja+h+bsaKpBx], [org.hsqldb.types.TimestampData@4f973e80], [org.hsqldb.types.TimestampData@4f973e80], [P. Sellers III], <:*:> [www.4444-4444-4444-4442.com], [null], [false]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Richard Henry Sellers, CBE (8 September 1925 ? 24 July 1980), known as Peter Sellers, was a British film actor, comedian and singer.) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=6, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [true]]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Sir Harry Donald Secombe, CBE (8 September 1921 ? 11 April 2001) was a Welsh entertainer with a talent for comedy and a noted fine tenor singing voice., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Sir Harry Donald Secombe, CBE (8 September 1921 ? 11 April 2001) was a Welsh entertainer with a talent for comedy and a noted fine tenor singing voice., dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Sir Harry Donald Secombe, CBE (8 September 1921 ? 11 April 2001) was a Welsh entertainer with a talent for comedy and a noted fine tenor singing voice., column=7, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], [4444-4444-4444-4444], [DhkFj5EI0qp6GsUKi55Vja+h+bsaKpBx], [org.hsqldb.types.TimestampData@4f973e80], [org.hsqldb.types.TimestampData@4f973e80], [H. Secombe], <:*:> [www.4444-4444-4444-4443.com], [4444-4444-4444-4441], [true]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Sir Harry Donald Secombe, CBE (8 September 1921 ? 11 April 2001) was a Welsh entertainer with a talent for comedy and a noted fine tenor singing voice.) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Andrew Timothy (1912?9 December 1990) was an Anglican priest and BBC Radio announcer, who is best remembered for being the original announcer of the comedy series The Goon Show., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Andrew Timothy (1912?9 December 1990) was an Anglican priest and BBC Radio announcer, who is best remembered for being the original announcer of the comedy series The Goon Show., dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Andrew Timothy (1912?9 December 1990) was an Anglican priest and BBC Radio announcer, who is best remembered for being the original announcer of the comedy series The Goon Show., column=7, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], [4444-4444-4444-4445], [DhkFj5EI0qp6GsUKi55Vja+h+bsaKpBx], [org.hsqldb.types.TimestampData@4f973e80], [org.hsqldb.types.TimestampData@4f973e80], [A. Timothy], <:*:> [www.4444-4444-4444-4444.com], [4444-4444-4444-4441], [false]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Andrew Timothy (1912?9 December 1990) was an Anglican priest and BBC Radio announcer, who is best remembered for being the original announcer of the comedy series The Goon Show.) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Client used to test the public OAuth process., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Client used to test the public OAuth process., dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Client used to test the public OAuth process., column=7, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], [4444-4444-4444-4498], [DhkFj5EI0qp6GsUKi55Vja+h+bsaKpBx], [org.hsqldb.types.TimestampData@53c31d80], [org.hsqldb.types.TimestampData@53c31d80], [U. Test], <:*:> [www.4444-4444-4444-4445.com], [4444-4444-4444-4441], [true]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Client used to test the public OAuth process.) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=ORCID source for issn record, column=7, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], [APP-1234567898765432], [null], [org.hsqldb.types.TimestampData@5cd8b380], [org.hsqldb.types.TimestampData@5cd8b380], [ORCID source], <:*:> [www.6666666666666666.com], [5555-5555-5555-5558], [true]]]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - getColumns(columnNames=[CLIENT_DETAILS_ID, EMAIL_TYPE], columns=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (EMAIL_TYPE, VARCHAR, noNulls), (CONTENT, CLOB, noNulls), (SENDER, VARCHAR, nullable), (SUBJECT, VARCHAR, nullable), (IS_HTML, BOOLEAN, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=custom_email, object=table=CUSTOM_EMAIL, cols=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (EMAIL_TYPE, VARCHAR, noNulls), (CONTENT, CLOB, noNulls), (SENDER, VARCHAR, nullable), (SUBJECT, VARCHAR, nullable), (IS_HTML, BOOLEAN, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], pk=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (EMAIL_TYPE, VARCHAR, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=This is <:*:> <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.BooleanDataType (BooleanDataType.java:143) - setSqlValue(value=true, column=6, <:*:> into CUSTOM_EMAIL (CLIENT_DETAILS_ID, EMAIL_TYPE, CONTENT, SENDER, SUBJECT, IS_HTML) values (?, ?, ?, ?, ?, ?)], parameters=[[4444-4444-4444-4441], [CLAIM], <:*:> [angel.montenegro.jimenez@gmail.com], [This is the subject], [null]]]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[oauth2_token_detail], _tableMap={OAUTH2_TOKEN_DETAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]}, _caseSensitiveTableNames=false]
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(TOKEN_VALUE, VARCHAR, nullable), (TOKEN_TYPE, VARCHAR, nullable), (TOKEN_EXPIRATION, TIMESTAMP, nullable), (USER_ORCID, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (IS_APPROVED, BOOLEAN, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (SCOPE_TYPE, VARCHAR, nullable), (RESOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (AUTHENTICATION_KEY, VARCHAR, nullable), (ID, BIGINT, noNulls), (REFRESH_TOKEN_EXPIRATION, TIMESTAMP, nullable), (REFRESH_TOKEN_VALUE, VARCHAR, nullable), (TOKEN_DISABLED, BOOLEAN, nullable), (PERSISTENT, BOOLEAN, nullable), (VERSION, BIGINT, nullable), (AUTHORIZATION_CODE, VARCHAR, nullable), (REVOCATION_DATE, TIMESTAMP, nullable), (REVOKE_REASON, VARCHAR, nullable), (OBO_CLIENT_DETAILS_ID, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=oauth2_token_detail, object=table=OAUTH2_TOKEN_DETAIL, cols=[(TOKEN_VALUE, VARCHAR, nullable), (TOKEN_TYPE, VARCHAR, nullable), (TOKEN_EXPIRATION, TIMESTAMP, nullable), (USER_ORCID, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (IS_APPROVED, BOOLEAN, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (SCOPE_TYPE, VARCHAR, nullable), (RESOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (AUTHENTICATION_KEY, VARCHAR, nullable), (ID, BIGINT, noNulls), (REFRESH_TOKEN_EXPIRATION, TIMESTAMP, nullable), (REFRESH_TOKEN_VALUE, VARCHAR, nullable), (TOKEN_DISABLED, BOOLEAN, nullable), (PERSISTENT, BOOLEAN, nullable), (VERSION, BIGINT, nullable), (AUTHORIZATION_CODE, VARCHAR, nullable), (REVOCATION_DATE, TIMESTAMP, nullable), (REVOKE_REASON, VARCHAR, nullable), (OBO_CLIENT_DETAILS_ID, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2014-09-12, column=4, <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=/orcid-profile/read-limited /orcid-profile/create, column=9, <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [90703acf-d80f-4afc-8f95-9b48d28aaadb], [bearer], [org.hsqldb.types.TimestampData@54123780], [4444-4444-4444-4443], [4444-4444-4444-4441], [true], [http://www.google.com], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], [org.hsqldb.types.TimestampData@54123780], <:*:> <:*:> [true], [http://www.google.com], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], [org.hsqldb.types.TimestampData@54123780], [4444-4444-4444-4443], <:*:> [true], [http://www.google.com], <:*:> <:*:> [orcid], <:*:> <:*:> <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], [org.hsqldb.types.TimestampData@54123780], <:*:> <:*:> [true], [http://www.google.com], <:*:> <:*:> [orcid], [org.hsqldb.types.TimestampData@500d0840], [org.hsqldb.types.TimestampData@500e68c0], <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], [org.hsqldb.types.TimestampData@54123780], [4444-4444-4444-4443], <:*:> [true], [http://www.google.com], <:*:> <:*:> [orcid], [org.hsqldb.types.TimestampData@500d0840], [org.hsqldb.types.TimestampData@500e68c0], <:*:> [false]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2014-09-12, column=4, <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], [org.hsqldb.types.TimestampData@54123780], [4444-4444-4444-4443], <:*:> [true], [http://www.google.com], <:*:> <:*:> [orcid], [org.hsqldb.types.TimestampData@500d0840], [org.hsqldb.types.TimestampData@500e68c0], <:*:> [false]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=/authenticate /orcid-profile/read-limited, column=9, <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [90703acf-d80f-4afc-8f95-9b48d28aaadc], [bearer], [org.hsqldb.types.TimestampData@54123780], [4444-4444-4444-4443], [4444-4444-4444-4445], [true], [http://www.google.com], [/orcid-profile/read-limited /orcid-profile/create], [orcid], [org.hsqldb.types.TimestampData@500d0840], [org.hsqldb.types.TimestampData@500e68c0], [85578468aafa19ed63a3de2f9eb11288], [false]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], [org.hsqldb.types.TimestampData@54123780], [4444-4444-4444-4444], [4444-4444-4444-4441], [true], [http://www.google.com], <:*:> [orcid], [org.hsqldb.types.TimestampData@500d0840], [org.hsqldb.types.TimestampData@500e68c0], <:*:> [false]]]) - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, IS_APPROVED, REDIRECT_URI, SCOPE_TYPE, RESOURCE_ID, DATE_CREATED, LAST_MODIFIED, AUTHENTICATION_KEY, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], [org.hsqldb.types.TimestampData@54123780], <:*:> [4444-4444-4444-4441], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[org_disambiguated, org], _tableMap={ORG=org.dbunit.dataset.DefaultTable[_metaData=tableName=org, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (city, UNKNOWN, nullableUnknown), (country, UNKNOWN, nullableUnknown), (region, UNKNOWN, nullableUnknown), (org_disambiguated_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], ORG_DISAMBIGUATED=org.dbunit.dataset.DefaultTable[_metaData=tableName=org_disambiguated, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (city, UNKNOWN, nullableUnknown), (country, UNKNOWN, nullableUnknown), (region, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (source_type, UNKNOWN, nullableUnknown), (popularity, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]}, _caseSensitiveTableNames=false]
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> cols=[(ID, BIGINT, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> column=8, <:*:> into ORG_DISAMBIGUATED (ID, NAME, CITY, COUNTRY, REGION, SOURCE_ID, SOURCE_TYPE, POPULARITY, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> Institution], [London], [GB], [], <:*:> [WDB], <:*:> [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - setSqlValue(value=2, column=1, <:*:> into ORG_DISAMBIGUATED (ID, NAME, CITY, COUNTRY, REGION, SOURCE_ID, SOURCE_TYPE, POPULARITY, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [An Institution], [London], [GB], [], [abc456], [WDB], [1], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Test Institution, column=2, <:*:> into ORG_DISAMBIGUATED (ID, NAME, CITY, COUNTRY, REGION, SOURCE_ID, SOURCE_TYPE, POPULARITY, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [An Institution], [London], [GB], [], [abc456], [WDB], [1], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2020-01-01 00:00:00.00, <:*:> <:*:> into ORG_DISAMBIGUATED (ID, NAME, CITY, COUNTRY, REGION, SOURCE_ID, SOURCE_TYPE, POPULARITY, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [Test Institution], [London], [GB], [], [def456], [WDB], [0], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into ORG (ID, NAME, CITY, COUNTRY, REGION, ORG_DISAMBIGUATED_ID) values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> [], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> Institution, column=2, <:*:> into ORG (ID, NAME, CITY, COUNTRY, REGION, ORG_DISAMBIGUATED_ID) values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [GB], [], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Yet Another Institution, column=2, <:*:> into ORG (ID, NAME, CITY, COUNTRY, REGION, ORG_DISAMBIGUATED_ID) values (?, ?, ?, ?, ?, ?)], parameters=[[4], [Eine Institution], [Berlin], [DE], [], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into ORG (ID, NAME, CITY, COUNTRY, REGION, ORG_DISAMBIGUATED_ID) values (?, ?, ?, ?, ?, ?)], parameters=[[4], [Yet Another Institution], <:*:> <:*:> [], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into ORG (ID, NAME, CITY, COUNTRY, REGION, ORG_DISAMBIGUATED_ID) values (?, ?, ?, ?, ?, ?)], parameters=[[4], [Yet Another Institution], [Slough], [GB], [], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Kleine Institution, column=2, <:*:> into ORG (ID, NAME, CITY, COUNTRY, REGION, ORG_DISAMBIGUATED_ID) values (?, ?, ?, ?, ?, ?)], parameters=[[5], [Yet Another Institution], [Slough], [GB], [], [1]]]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - startTable(metaData=tableName=profile_funding, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (type, UNKNOWN, nullableUnknown), (currency_code, UNKNOWN, nullableUnknown), (numeric_amount, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=profile_funding, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_funding, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (type, UNKNOWN, nullableUnknown), (currency_code, UNKNOWN, nullableUnknown), (numeric_amount, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=15]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[profile_funding], _tableMap={PROFILE_FUNDING=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_funding, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (type, UNKNOWN, nullableUnknown), (currency_code, UNKNOWN, nullableUnknown), (numeric_amount, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=15]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - createReplacementTable(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_funding, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (type, UNKNOWN, nullableUnknown), (currency_code, UNKNOWN, nullableUnknown), (numeric_amount, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=15]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_funding, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (type, UNKNOWN, nullableUnknown), (currency_code, UNKNOWN, nullableUnknown), (numeric_amount, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=15], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=profile_funding, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (type, UNKNOWN, nullableUnknown), (currency_code, UNKNOWN, nullableUnknown), (numeric_amount, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown)], keys=[]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_funding, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (type, UNKNOWN, nullableUnknown), (currency_code, UNKNOWN, nullableUnknown), (numeric_amount, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=15], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - getOperationData(metaData=tableName=PROFILE_FUNDING, columns=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (SOURCE_ID, VARCHAR, nullable), (ORG_ID, BIGINT, noNulls), (TITLE, VARCHAR, noNulls), (TYPE, VARCHAR, noNulls), (CURRENCY_CODE, VARCHAR, nullable), (NUMERIC_AMOUNT, NUMERIC, nullable), (VISIBILITY, VARCHAR, nullable), (CONTRIBUTORS_JSON, CLOB, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (DISPLAY_INDEX, BIGINT, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DESCRIPTION, VARCHAR, nullable), (EXTERNAL_IDENTIFIERS_JSON, CLOB, nullable), (URL, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.NumberDataType (NumberDataType.java:105) - <:*:> column=8, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null]]]) - start
datatype.NumberDataType (NumberDataType.java:60) - <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"contributor":[{"contributorOrcid":{"value":"0000-0003-0172-7925"},"creditName":{"content":"Jaylen Kessler"},"contributorEmail":null,"contributorAttributes":null},{"creditName":{"content":"John Smith"},"contributorEmail":null,"contributorAttributes":null},{"contributorOrcid":{"path":"0000-0000-0000-0003"},"creditName":{"content":"Not This Name"},"contributorEmail":null,"contributorAttributes":null},{"contributorOrcid":{"path":"1000-0000-0000-0001"},"creditName":{"content":"Not This Name"},"contributorEmail":null,"contributorAttributes":null}]}, column=10, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [4444-4444-4444-4443], [4444-4444-4444-4443], [1], [Grant # 1], [SALARY_AWARD], [USD], [2500], [LIMITED], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null]]]) - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile_funding, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (type, UNKNOWN, nullableUnknown), (currency_code, UNKNOWN, nullableUnknown), (numeric_amount, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (contributors_json, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (description, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=15], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Grant # <:*:> column=5, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [4444-4444-4444-4443], <:*:> <:*:> [Grant # <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@778ecbe8], [org.hsqldb.types.TimestampData@778ecbe8], <:*:> [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [1], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.NumberDataType (NumberDataType.java:105) - setSqlValue(value=2500, column=8, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [1], <:*:> <:*:> [SALARY_AWARD], [USD], <:*:> <:*:> [null], <:*:> <:*:> <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [1], <:*:> <:*:> [SALARY_AWARD], [USD], [2500], <:*:> [null], <:*:> <:*:> <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [1], <:*:> <:*:> [SALARY_AWARD], [USD], [2500], <:*:> [null], <:*:> <:*:> <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=5, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [1], <:*:> <:*:> [SALARY_AWARD], [USD], [2500], <:*:> [null], <:*:> <:*:> <:*:> <:*:> [null], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Public Funding # 1, column=5, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[6], [4444-4444-4444-4447], [null], [1], [Public Funding], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [SALARY_AWARD], [USD], [2500], <:*:> [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], <:*:> [null], [null], [null], [null]]]) - start
datatype.NumberDataType (NumberDataType.java:105) - setSqlValue(value=2500, column=8, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[6], [4444-4444-4444-4447], [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [null], [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2014-07-03 15:31:00.00, <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[6], [4444-4444-4444-4447], [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [null], [null], [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> <:*:> [null], [null], [null], [null]]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=This is the description for funding with id <:*:> dataType=VARCHAR) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=This is the description for funding with id <:*:> dataType=VARCHAR) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=This is the description for funding with id 6, column=15, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[6], [4444-4444-4444-4447], [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [null], [null], [null]]]) - start
datatype.DataType (DataType.java:177) - asString(value=This is the description for funding with id <:*:> - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=This is the description for funding with id <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"fundingExternalIdentifier":[{"type":"GRANT_NUMBER","value":"111","url":{"value":"http://111.com"},"relationship":"SELF"}]}, column=16, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[6], [4444-4444-4444-4447], [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 6], [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id <:*:> <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id <:*:> <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Public Funding # 1, column=5, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[7], [4444-4444-4444-4442], [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 6], <:*:> [null]]]) - start
datatype.NumberDataType (NumberDataType.java:105) - setSqlValue(value=2500, column=8, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[7], [4444-4444-4444-4442], [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 6], <:*:> [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2014-07-03 15:31:00.00, <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[7], [4444-4444-4444-4442], [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 6], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=This is the description for funding with id 7, column=15, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[7], [4444-4444-4444-4442], [null], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 6], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Limited Funding, column=5, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[8], [4444-4444-4444-4446], [4444-4444-4444-4446], [1], [Public Funding # 1], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 7], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[8], [4444-4444-4444-4446], [4444-4444-4444-4446], [1], [Limited Funding], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 7], [null], [null]]]) - start
datatype.NumberDataType (NumberDataType.java:105) - setSqlValue(value=2500, column=8, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[8], [4444-4444-4444-4446], [4444-4444-4444-4446], [1], [Limited Funding], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 7], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2014-07-03 15:31:00.00, <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[8], [4444-4444-4444-4446], [4444-4444-4444-4446], [1], [Limited Funding], [SALARY_AWARD], [USD], [2500], [LIMITED], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 7], [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - setSqlValue(value=3, column=13, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[8], [4444-4444-4444-4446], [4444-4444-4444-4446], [1], [Limited Funding], [SALARY_AWARD], [USD], [2500], [LIMITED], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [2], [APP-5555555555555555], [This is the description for funding with id 7], [null], [null]]]) - start
datatype.NumberDataType (NumberDataType.java:105) - setSqlValue(value=2500, column=8, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], [null], [1], <:*:> [SALARY_AWARD], [USD], [2500], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value={ "contributor": [{ "contributorOrcid": { "path": "0000-0000-0000-0000" }, "creditName": { "content": null }, "contributorEmail": null, "contributorAttributes": null }] }, dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value={ "contributor": [{ "contributorOrcid": { "path": "0000-0000-0000-0000" }, "creditName": { "content": null }, "contributorEmail": null, "contributorAttributes": null }] }, dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={ "contributor": [{ "contributorOrcid": { "path": "0000-0000-0000-0000" }, "creditName": { "content": null }, "contributorEmail": null, "contributorAttributes": null }] }, column=10, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[10], [0000-0000-0000-0003], [null], [1], [PUBLIC], [SALARY_AWARD], [USD], [2500], [PUBLIC], [null], [org.hsqldb.types.TimestampData@53b57734], [org.hsqldb.types.TimestampData@53b57734], [4], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value={ "contributor": [{ "contributorOrcid": { "path": "0000-0000-0000-0000" }, "creditName": { "content": null }, "contributorEmail": null, "contributorAttributes": null }] }) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2016-04-01 15:31:00.00, <:*:> <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], [null], [1], <:*:> [SALARY_AWARD], [USD], [2500], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> column=16, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], [null], [1], <:*:> [SALARY_AWARD], [USD], [2500], <:*:> <:*:> [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], <:*:> [APP-5555555555555555], [null], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=SELF LIMITED, column=5, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[13], [0000-0000-0000-0003], [0000-0000-0000-0003], [1], [PRIVATE], [SALARY_AWARD], [USD], [2500], [PRIVATE], [null], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [2], [APP-5555555555555555], [null], <:*:> [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> column=16, <:*:> into PROFILE_FUNDING (ID, ORCID, SOURCE_ID, ORG_ID, TITLE, TYPE, CURRENCY_CODE, NUMERIC_AMOUNT, VISIBILITY, CONTRIBUTORS_JSON, DATE_CREATED, LAST_MODIFIED, DISPLAY_INDEX, CLIENT_SOURCE_ID, DESCRIPTION, EXTERNAL_IDENTIFIERS_JSON, URL) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [1], [SELF <:*:> [SALARY_AWARD], [USD], [2500], <:*:> [null], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], <:*:> [null], [null], <:*:> [null]]]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[org_affiliation_relation], _tableMap={ORG_AFFILIATION_RELATION=org.dbunit.dataset.DefaultTable[_metaData=tableName=org_affiliation_relation, columns=[(id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (org_affiliation_relation_role, UNKNOWN, nullableUnknown), (org_affiliation_relation_title, UNKNOWN, nullableUnknown), (department, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (start_year, UNKNOWN, nullableUnknown), (start_month, UNKNOWN, nullableUnknown), (start_day, UNKNOWN, nullableUnknown), (end_year, UNKNOWN, nullableUnknown), (end_month, UNKNOWN, nullableUnknown), (end_day, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (external_ids_json, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=58]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> cols=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> INTEGER, nullable), <:*:> <:*:> nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - setSqlValue(value=1, <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2010-07-02 15:31:00.00, <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null]]]) - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> Department], [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> <:*:> [2], [2011], <:*:> [2], [PUBLIC], <:*:> <:*:> [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [APP-5555555555555555], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], [2011], [9], [22], [2012], [11], [7], [PRIVATE], <:*:> [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> 15:31:00.00, <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> Dept # <:*:> column=6, <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Researcher], <:*:> Dept # <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], [2011], [9], [22], [2012], [11], [7], <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=5, <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [1], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> column=18, <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [1], [0000-0000-0000-0003], <:*:> <:*:> <:*:> Department], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [2016], [4], [1], [2030], [1], [1], <:*:> [null], [APP-5555555555555555], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=SELF LIMITED Department, column=6, <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [1], [0000-0000-0000-0003], <:*:> [SELF LIMITED], [PRIVATE Department], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [2016], [4], [1], [2030], [1], [1], [PRIVATE], [null], [APP-5555555555555555], <:*:> [0]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"externalIdentifier":[{"type":"DOI","value":"001","url":null,"relationship":"SELF"}]}, column=18, <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [1], [0000-0000-0000-0003], <:*:> [SELF LIMITED], [SELF LIMITED Department], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [2016], [4], [1], [2030], [1], [1], [LIMITED], [0000-0000-0000-0003], [null], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=SELF <:*:> Department, column=6, <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [1], [0000-0000-0000-0003], <:*:> [SELF <:*:> [SELF <:*:> Department], [org.hsqldb.types.TimestampData@56fe9434], [org.hsqldb.types.TimestampData@56fe9434], [2016], [4], [1], [2030], [1], [1], <:*:> [0000-0000-0000-0003], [null], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into ORG_AFFILIATION_RELATION (ID, ORG_ID, ORCID, ORG_AFFILIATION_RELATION_ROLE, ORG_AFFILIATION_RELATION_TITLE, DEPARTMENT, DATE_CREATED, LAST_MODIFIED, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, VISIBILITY, SOURCE_ID, CLIENT_SOURCE_ID, EXTERNAL_IDS_JSON, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [1], <:*:> <:*:> <:*:> <:*:> <:*:> Department], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null]]]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=peer_review, object=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - startTable(metaData=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=peer_review, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=14]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[peer_review], _tableMap={PEER_REVIEW=org.dbunit.dataset.DefaultTable[_metaData=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=14]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - createReplacementTable(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=14]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=14], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (PEER_REVIEW_SUBJECT_ID, BIGINT, nullable), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (ORG_ID, BIGINT, noNulls), (PEER_REVIEW_ROLE, VARCHAR, noNulls), (PEER_REVIEW_TYPE, VARCHAR, noNulls), (COMPLETION_DAY, INTEGER, nullable), (COMPLETION_MONTH, INTEGER, nullable), (COMPLETION_YEAR, INTEGER, nullable), (SOURCE_ID, VARCHAR, nullable), (URL, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (DISPLAY_INDEX, BIGINT, nullable), (SUBJECT_EXTERNAL_IDENTIFIERS_JSON, CLOB, nullable), (SUBJECT_TYPE, VARCHAR, nullable), (SUBJECT_CONTAINER_NAME, VARCHAR, nullable), (SUBJECT_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, VARCHAR, nullable), (SUBJECT_URL, VARCHAR, nullable), (GROUP_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=peer_review, object=table=PEER_REVIEW, cols=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (PEER_REVIEW_SUBJECT_ID, BIGINT, nullable), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (ORG_ID, BIGINT, noNulls), (PEER_REVIEW_ROLE, VARCHAR, noNulls), (PEER_REVIEW_TYPE, VARCHAR, noNulls), (COMPLETION_DAY, INTEGER, nullable), (COMPLETION_MONTH, INTEGER, nullable), (COMPLETION_YEAR, INTEGER, nullable), (SOURCE_ID, VARCHAR, nullable), (URL, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (DISPLAY_INDEX, BIGINT, nullable), (SUBJECT_EXTERNAL_IDENTIFIERS_JSON, CLOB, nullable), (SUBJECT_TYPE, VARCHAR, nullable), (SUBJECT_CONTAINER_NAME, VARCHAR, nullable), (SUBJECT_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, VARCHAR, nullable), (SUBJECT_URL, VARCHAR, nullable), (GROUP_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=14], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - getOperationData(metaData=tableName=PEER_REVIEW, columns=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (ORG_ID, BIGINT, noNulls), (PEER_REVIEW_ROLE, VARCHAR, noNulls), (PEER_REVIEW_TYPE, VARCHAR, noNulls), (COMPLETION_DAY, INTEGER, nullable), (COMPLETION_MONTH, INTEGER, nullable), (COMPLETION_YEAR, INTEGER, nullable), (URL, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (GROUP_ID, VARCHAR, nullable), (SUBJECT_EXTERNAL_IDENTIFIERS_JSON, CLOB, nullable), (SUBJECT_NAME, VARCHAR, nullable), (SUBJECT_TYPE, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, VARCHAR, nullable), (SUBJECT_URL, VARCHAR, nullable), (SUBJECT_CONTAINER_NAME, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (SOURCE_ID, VARCHAR, nullable), (DISPLAY_INDEX, BIGINT, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - setSqlValue(value=1, <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [4444-4444-4444-4446], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [4444-4444-4444-4446], <:*:> [1], [REVIEWER], [REVIEW], <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [1], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Peer Review # 1 translated name, column=16, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [4444-4444-4444-4446], <:*:> [1], [REVIEWER], [REVIEW], [1], [1], [2015], [http://peer_review.com], [PUBLIC], [issn:0000-0001], <:*:> [Peer Review # 1], [ARTISTIC_PERFORMANCE], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [REVIEWER], [REVIEW], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [ARTISTIC_PERFORMANCE], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Peer Review # 1 container name, column=19, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [4444-4444-4444-4446], <:*:> [1], [REVIEWER], [REVIEW], [1], [1], [2015], [http://peer_review.com], [PUBLIC], [issn:0000-0001], <:*:> [Peer Review # 1], [ARTISTIC_PERFORMANCE], [Peer Review # 1 translated name], [es], [http://work.com], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [REVIEWER], [REVIEW], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [Peer Review # <:*:> [ARTISTIC_PERFORMANCE], [Peer Review # <:*:> translated name], [es], [http://work.com], [Peer Review # <:*:> container name], <:*:> <:*:> <:*:> <:*:> [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2015-01-01 00:00:00.00, <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [REVIEWER], [REVIEW], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [Peer Review # <:*:> [ARTISTIC_PERFORMANCE], [Peer Review # <:*:> translated name], [es], [http://work.com], [Peer Review # <:*:> container name], <:*:> <:*:> <:*:> <:*:> [null]]]) - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=peer_review, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (peer_review_role, UNKNOWN, nullableUnknown), (peer_review_type, UNKNOWN, nullableUnknown), (completion_day, UNKNOWN, nullableUnknown), (completion_month, UNKNOWN, nullableUnknown), (completion_year, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (group_id, UNKNOWN, nullableUnknown), (subject_external_identifiers_json, UNKNOWN, nullableUnknown), (subject_name, UNKNOWN, nullableUnknown), (subject_type, UNKNOWN, nullableUnknown), (subject_translated_name, UNKNOWN, nullableUnknown), (subject_translated_name_language_code, UNKNOWN, nullableUnknown), (subject_url, UNKNOWN, nullableUnknown), (subject_container_name, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=14], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [REVIEWER], [REVIEW], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [Peer Review # <:*:> [ARTISTIC_PERFORMANCE], [Peer Review # <:*:> translated name], [es], [http://work.com], [Peer Review # <:*:> container name], <:*:> [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], <:*:> [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [REVIEWER], [REVIEW], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [Peer Review # <:*:> [ARTISTIC_PERFORMANCE], [Peer Review # <:*:> translated name], [es], [http://work.com], [Peer Review # <:*:> container name], <:*:> [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], <:*:> [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [REVIEWER], [REVIEW], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [Peer Review # <:*:> [ARTISTIC_PERFORMANCE], [Peer Review # <:*:> translated name], [es], [http://work.com], [Peer Review # <:*:> container name], <:*:> [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Peer Review # <:*:> column=14, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [REVIEWER], [REVIEW], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [Peer Review # <:*:> [ARTISTIC_PERFORMANCE], [Peer Review # <:*:> translated name], [es], [http://work.com], [Peer Review # <:*:> container name], <:*:> [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Peer Review # <:*:> <:*:> name, <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [REVIEWER], [REVIEW], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [Peer Review # <:*:> [ARTISTIC_PERFORMANCE], [Peer Review # <:*:> translated name], [es], [http://work.com], [Peer Review # <:*:> container name], <:*:> [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], <:*:> [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=PUBLIC Peer Review, column=14, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[9], [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/9], [PUBLIC], [issn:0000-0009], <:*:> [Peer Review # 3], [ARTISTIC_PERFORMANCE], [Peer Review # 3 translated name], [es], [http://work.com], [Peer Review # 3 container name], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=ARTISTIC_PERFORMANCE, column=15, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[9], [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/9], [PUBLIC], [issn:0000-0009], <:*:> [PUBLIC Peer Review], [ARTISTIC_PERFORMANCE], [Peer Review # 3 translated name], [es], [http://work.com], [Peer Review # 3 container name], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=PUBLIC Peer Review, column=16, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[9], [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/9], [PUBLIC], [issn:0000-0009], <:*:> [PUBLIC Peer Review], [ARTISTIC_PERFORMANCE], [Peer Review # 3 translated name], [es], [http://work.com], [Peer Review # 3 container name], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=PUBLIC Peer Review, column=19, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[9], [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/9], [PUBLIC], [issn:0000-0009], <:*:> [PUBLIC Peer Review], [ARTISTIC_PERFORMANCE], [PUBLIC Peer Review], [es], [http://work.com/public], [Peer Review # 3 container name], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> <:*:> Peer Review], [ARTISTIC_PERFORMANCE], <:*:> Peer Review], [es], <:*:> <:*:> Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2015-01-01 00:00:00.00, <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> <:*:> Peer Review], [ARTISTIC_PERFORMANCE], <:*:> Peer Review], [es], <:*:> <:*:> Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> <:*:> Peer Review], [ARTISTIC_PERFORMANCE], <:*:> Peer Review], [es], <:*:> <:*:> Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> <:*:> Peer Review], [ARTISTIC_PERFORMANCE], <:*:> Peer Review], [es], <:*:> <:*:> Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], <:*:> - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> <:*:> Peer Review], [ARTISTIC_PERFORMANCE], <:*:> Peer Review], [es], <:*:> <:*:> Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> Peer Review, <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> <:*:> Peer Review], [ARTISTIC_PERFORMANCE], <:*:> Peer Review], [es], <:*:> <:*:> Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=SELF LIMITED Peer Review, column=14, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[12], [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/12], [LIMITED], [issn:0000-0012], <:*:> [PRIVATE Peer Review], [ARTISTIC_PERFORMANCE], [PRIVATE Peer Review], [es], [http://work.com/private], [PRIVATE Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], [2]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=ARTISTIC_PERFORMANCE, column=15, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[12], [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/12], [LIMITED], [issn:0000-0012], <:*:> [SELF LIMITED Peer Review], [ARTISTIC_PERFORMANCE], [PRIVATE Peer Review], [es], [http://work.com/private], [PRIVATE Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], [2]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=SELF LIMITED Peer Review, column=16, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[12], [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/12], [LIMITED], [issn:0000-0012], <:*:> [SELF LIMITED Peer Review], [ARTISTIC_PERFORMANCE], [PRIVATE Peer Review], [es], [http://work.com/private], [PRIVATE Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], [2]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=SELF LIMITED Peer Review, column=19, <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[12], [0000-0000-0000-0003], <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/12], [LIMITED], [issn:0000-0012], <:*:> [SELF LIMITED Peer Review], [ARTISTIC_PERFORMANCE], [SELF LIMITED Peer Review], [es], [http://work.com/self/limited], [PRIVATE Peer Review], [APP-5555555555555555], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [null], [2]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2015-01-01 00:00:00.00, <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> [SELF <:*:> Peer Review], [ARTISTIC_PERFORMANCE], [SELF <:*:> Peer Review], [es], <:*:> [SELF <:*:> Peer Review], [null], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> [SELF <:*:> Peer Review], [ARTISTIC_PERFORMANCE], [SELF <:*:> Peer Review], [es], <:*:> [SELF <:*:> Peer Review], [null], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], <:*:> <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> [SELF <:*:> Peer Review], [ARTISTIC_PERFORMANCE], [SELF <:*:> Peer Review], [es], <:*:> [SELF <:*:> Peer Review], [null], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [0000-0000-0000-0003], <:*:> - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], <:*:> <:*:> <:*:> <:*:> [SELF <:*:> Peer Review], [ARTISTIC_PERFORMANCE], [SELF <:*:> Peer Review], [es], <:*:> [SELF <:*:> Peer Review], [null], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [0000-0000-0000-0003], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=SELF PRIVATE Peer Review, <:*:> <:*:> into PEER_REVIEW (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, ORG_ID, PEER_REVIEW_ROLE, PEER_REVIEW_TYPE, COMPLETION_DAY, COMPLETION_MONTH, COMPLETION_YEAR, URL, VISIBILITY, GROUP_ID, SUBJECT_EXTERNAL_IDENTIFIERS_JSON, SUBJECT_NAME, SUBJECT_TYPE, SUBJECT_TRANSLATED_NAME, SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, SUBJECT_URL, SUBJECT_CONTAINER_NAME, CLIENT_SOURCE_ID, DATE_CREATED, LAST_MODIFIED, SOURCE_ID, DISPLAY_INDEX) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [2], [REVIEWER], [REVIEW], [2], [2], [2016], [http://peer_review.com/13], [PRIVATE], [issn:0000-0013], <:*:> [SELF <:*:> Peer Review], [ARTISTIC_PERFORMANCE], [SELF <:*:> Peer Review], [es], <:*:> [SELF <:*:> Peer Review], [null], [org.hsqldb.types.TimestampData@54a48e00], [org.hsqldb.types.TimestampData@54a48e00], [0000-0000-0000-0003], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: <:*:> <:*:> columns=[(id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _caseSensitiveTableNames=false]
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into <:*:> (ID, DATE_CREATED, LAST_MODIFIED, <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Credit Name, column=7, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[0], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [4444-4444-4444-4441], [One], [User], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2016-04-01 00:00:00.00, <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> [Given <:*:> [Family <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> [Given <:*:> [Family <:*:> [Credit <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2016-04-01 00:00:00.00, <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> [Given <:*:> [Family <:*:> [Credit <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> column=7, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> [PUBLIC]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2016-04-01 00:00:00.00, <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Multi Cred Name, column=7, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> [Multi Cred Name], [PUBLIC]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Given Names Deactivated, column=5, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[15], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [0000-0000-0000-0004], [Given Names], [Family Name], [Credit Name], [PUBLIC]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> Deactivated, <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> [Given Names Deactivated], [Family <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=, column=7, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[15], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [0000-0000-0000-0004], [Given Names Deactivated], [Family Name Deactivated], [Credit Name], [PUBLIC]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> [Given Names Deactivated], [Family Name Deactivated], [], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> [Given Names Deactivated], [Family Name Deactivated], [], [PRIVATE]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2016-04-01 00:00:00.00, <:*:> <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> [Given Names Deactivated], [Family Name Deactivated], [], [PRIVATE]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Given names, column=5, <:*:> into RECORD_NAME (ID, DATE_CREATED, LAST_MODIFIED, ORCID, GIVEN_NAMES, FAMILY_NAME, CREDIT_NAME, VISIBILITY) values (?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[17], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [0000-0000-0000-0006], [Given Names Deactivated], [Family Name Deactivated], [], [PRIVATE]]]) - start
datatype.DoubleDataType (DoubleDataType.java:82) - <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:129) - <:*:> <:*:> - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> columns=[(ID, <:*:> noNulls), (ORCID, VARCHAR, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> keys=[(ID, <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=delete from <:*:> where <:*:> = ?, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> column=1, <:*:> from <:*:> where <:*:> = ?], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:98) - <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable)], keys=[]], <:*:> - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable)], <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> from <:*:> where <:*:> = ?], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> VARCHAR, noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable)], keys=[]], <:*:> - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable)], <:*:> BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=oauth2_token_detail, columns=[(TOKEN_VALUE, VARCHAR, nullable), (TOKEN_TYPE, VARCHAR, nullable), (TOKEN_EXPIRATION, TIMESTAMP, nullable), (USER_ORCID, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (IS_APPROVED, BOOLEAN, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (SCOPE_TYPE, VARCHAR, nullable), (RESOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (AUTHENTICATION_KEY, VARCHAR, nullable), (ID, BIGINT, noNulls), (REFRESH_TOKEN_EXPIRATION, TIMESTAMP, nullable), (REFRESH_TOKEN_VALUE, VARCHAR, nullable), (TOKEN_DISABLED, BOOLEAN, nullable), (PERSISTENT, BOOLEAN, nullable), (VERSION, BIGINT, nullable), (AUTHORIZATION_CODE, VARCHAR, nullable), (REVOCATION_DATE, TIMESTAMP, nullable), (REVOKE_REASON, VARCHAR, nullable), (OBO_CLIENT_DETAILS_ID, VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=OAUTH2_TOKEN_DETAIL, columns=[(TOKEN_VALUE, VARCHAR, nullable), (TOKEN_TYPE, VARCHAR, nullable), (TOKEN_EXPIRATION, TIMESTAMP, nullable), (USER_ORCID, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (IS_APPROVED, BOOLEAN, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (SCOPE_TYPE, VARCHAR, nullable), (RESOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (AUTHENTICATION_KEY, VARCHAR, nullable), (ID, BIGINT, noNulls), (REFRESH_TOKEN_EXPIRATION, TIMESTAMP, nullable), (REFRESH_TOKEN_VALUE, VARCHAR, nullable), (TOKEN_DISABLED, BOOLEAN, nullable), (PERSISTENT, BOOLEAN, nullable), (VERSION, BIGINT, nullable), (AUTHORIZATION_CODE, VARCHAR, nullable), (REVOCATION_DATE, TIMESTAMP, nullable), (REVOKE_REASON, VARCHAR, nullable), (OBO_CLIENT_DETAILS_ID, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.IntegerDataType (IntegerDataType.java:89) - <:*:> <:*:> - start
datatype.ClobDataType (ClobDataType.java:55) - <:*:> <:*:> - start
datatype.NumberDataType (NumberDataType.java:91) - getSqlValue(column=23, <:*:> - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), (DESCRIPTION, VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (DISPLAY_INDEX, BIGINT, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> <:*:> BIGINT, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), (DESCRIPTION, VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (DISPLAY_INDEX, BIGINT, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], <:*:> BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=peer_review, columns=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (PEER_REVIEW_SUBJECT_ID, BIGINT, nullable), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (ORG_ID, BIGINT, noNulls), (PEER_REVIEW_ROLE, VARCHAR, noNulls), (PEER_REVIEW_TYPE, VARCHAR, noNulls), (COMPLETION_DAY, INTEGER, nullable), (COMPLETION_MONTH, INTEGER, nullable), (COMPLETION_YEAR, INTEGER, nullable), (SOURCE_ID, VARCHAR, nullable), (URL, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (DISPLAY_INDEX, BIGINT, nullable), (SUBJECT_EXTERNAL_IDENTIFIERS_JSON, CLOB, nullable), (SUBJECT_TYPE, VARCHAR, nullable), (SUBJECT_CONTAINER_NAME, VARCHAR, nullable), (SUBJECT_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, VARCHAR, nullable), (SUBJECT_URL, VARCHAR, nullable), (GROUP_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=PEER_REVIEW, columns=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (PEER_REVIEW_SUBJECT_ID, BIGINT, nullable), (EXTERNAL_IDENTIFIERS_JSON, CLOB, noNulls), (ORG_ID, BIGINT, noNulls), (PEER_REVIEW_ROLE, VARCHAR, noNulls), (PEER_REVIEW_TYPE, VARCHAR, noNulls), (COMPLETION_DAY, INTEGER, nullable), (COMPLETION_MONTH, INTEGER, nullable), (COMPLETION_YEAR, INTEGER, nullable), (SOURCE_ID, VARCHAR, nullable), (URL, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (DISPLAY_INDEX, BIGINT, nullable), (SUBJECT_EXTERNAL_IDENTIFIERS_JSON, CLOB, nullable), (SUBJECT_TYPE, VARCHAR, nullable), (SUBJECT_CONTAINER_NAME, VARCHAR, nullable), (SUBJECT_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME, VARCHAR, nullable), (SUBJECT_TRANSLATED_NAME_LANGUAGE_CODE, VARCHAR, nullable), (SUBJECT_URL, VARCHAR, nullable), (GROUP_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> INTEGER, nullable), <:*:> INTEGER, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> <:*:> columns=[(DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> columns=[(DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=RESEARCHER_URL, columns=[(URL, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (ID, BIGINT, noNulls), (URL_NAME, VARCHAR, nullable), (VISIBILITY, VARCHAR, nullable), (SOURCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DISPLAY_INDEX, BIGINT, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> TIMESTAMP, nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable)], keys=[]], <:*:> - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=profile, columns=[(ORCID, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ACCOUNT_EXPIRY, TIMESTAMP, nullable), (COMPLETED_DATE, TIMESTAMP, nullable), (CLAIMED, BOOLEAN, nullable), (CREATION_METHOD, VARCHAR, nullable), (ENABLED, BOOLEAN, nullable), (ENCRYPTED_PASSWORD, VARCHAR, nullable), (IS_SELECTABLE_SPONSOR, BOOLEAN, nullable), (SOURCE_ID, VARCHAR, nullable), (ORCID_TYPE, VARCHAR, nullable), (SUBMISSION_DATE, TIMESTAMP, noNulls), (INDEXING_STATUS, VARCHAR, noNulls), (PROFILE_DEACTIVATION_DATE, TIMESTAMP, nullable), (ACTIVITIES_VISIBILITY_DEFAULT, VARCHAR, noNulls), (LAST_INDEXED_DATE, TIMESTAMP, nullable), (LOCALE, VARCHAR, noNulls), (GROUP_TYPE, VARCHAR, nullable), (PRIMARY_RECORD, VARCHAR, nullable), (DEPRECATED_DATE, TIMESTAMP, nullable), (REFERRED_BY, VARCHAR, nullable), (ENABLE_DEVELOPER_TOOLS, BOOLEAN, nullable), (ENABLE_NOTIFICATIONS, BOOLEAN, noNulls), (SALESFORCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DEVELOPER_TOOLS_ENABLED_DATE, TIMESTAMP, nullable), (RECORD_LOCKED, BOOLEAN, noNulls), (USED_CAPTCHA_ON_REGISTRATION, BOOLEAN, nullable), (USER_LAST_IP, VARCHAR, nullable), (REVIEWED, BOOLEAN, noNulls), (REASON_LOCKED, VARCHAR, nullable), (REASON_LOCKED_DESCRIPTION, CLOB, nullable), (HASHED_ORCID, VARCHAR, nullable), (SECRET_FOR_2FA, VARCHAR, nullable), (USING_2FA, BOOLEAN, nullable), (LAST_LOGIN, TIMESTAMP, nullable), (DEPRECATING_ADMIN, VARCHAR, nullable), (DEPRECATED_METHOD, VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=PROFILE, columns=[(ORCID, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ACCOUNT_EXPIRY, TIMESTAMP, nullable), (COMPLETED_DATE, TIMESTAMP, nullable), (CLAIMED, BOOLEAN, nullable), (CREATION_METHOD, VARCHAR, nullable), (ENABLED, BOOLEAN, nullable), (ENCRYPTED_PASSWORD, VARCHAR, nullable), (IS_SELECTABLE_SPONSOR, BOOLEAN, nullable), (SOURCE_ID, VARCHAR, nullable), (ORCID_TYPE, VARCHAR, nullable), (SUBMISSION_DATE, TIMESTAMP, noNulls), (INDEXING_STATUS, VARCHAR, noNulls), (PROFILE_DEACTIVATION_DATE, TIMESTAMP, nullable), (ACTIVITIES_VISIBILITY_DEFAULT, VARCHAR, noNulls), (LAST_INDEXED_DATE, TIMESTAMP, nullable), (LOCALE, VARCHAR, noNulls), (GROUP_TYPE, VARCHAR, nullable), (PRIMARY_RECORD, VARCHAR, nullable), (DEPRECATED_DATE, TIMESTAMP, nullable), (REFERRED_BY, VARCHAR, nullable), (ENABLE_DEVELOPER_TOOLS, BOOLEAN, nullable), (ENABLE_NOTIFICATIONS, BOOLEAN, noNulls), (SALESFORCE_ID, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (DEVELOPER_TOOLS_ENABLED_DATE, TIMESTAMP, nullable), (RECORD_LOCKED, BOOLEAN, noNulls), (USED_CAPTCHA_ON_REGISTRATION, BOOLEAN, nullable), (USER_LAST_IP, VARCHAR, nullable), (REVIEWED, BOOLEAN, noNulls), (REASON_LOCKED, VARCHAR, nullable), (REASON_LOCKED_DESCRIPTION, CLOB, nullable), (HASHED_ORCID, VARCHAR, nullable), (SECRET_FOR_2FA, VARCHAR, nullable), (USING_2FA, BOOLEAN, nullable), (LAST_LOGIN, TIMESTAMP, nullable), (DEPRECATING_ADMIN, VARCHAR, nullable), (DEPRECATED_METHOD, VARCHAR, nullable)], keys=[(ORCID, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=CUSTOM_EMAIL, columns=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (EMAIL_TYPE, VARCHAR, noNulls), (CONTENT, CLOB, noNulls), (SENDER, VARCHAR, nullable), (SUBJECT, VARCHAR, nullable), (IS_HTML, BOOLEAN, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], keys=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (EMAIL_TYPE, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=delete from <:*:> where <:*:> = ? and <:*:> = ?, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> from <:*:> where <:*:> = <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.database.CachedResultSetTable[_metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=client_secret, columns=[(CLIENT_DETAILS_ID, VARCHAR, noNulls), (CLIENT_SECRET, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, noNulls), (LAST_MODIFIED, TIMESTAMP, noNulls), (IS_PRIMARY, BOOLEAN, nullable)], keys=[]], <:*:> - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=GRANTED_AUTHORITY, columns=[(AUTHORITY, VARCHAR, noNulls), (ORCID, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], keys=[(AUTHORITY, VARCHAR, noNulls), (ORCID, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> VARCHAR, nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable)], keys=[]], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: <:*:> <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _caseSensitiveTableNames=false]
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Biography for <:*:> column=5, <:*:> into BIOGRAPHY (ID, DATE_CREATED, LAST_MODIFIED, ORCID, BIOGRAPHY, VISIBILITY) values (?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Richard Henry Sellers, CBE (8 September 1925 ? 24 July 1980), known as Peter Sellers, was a British film actor, comedian and singer., column=5, <:*:> into BIOGRAPHY (ID, DATE_CREATED, LAST_MODIFIED, ORCID, BIOGRAPHY, VISIBILITY) values (?, ?, ?, ?, ?, ?)], parameters=[[2], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [4444-4444-4444-4443], <:*:> [PUBLIC]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Sir Harry Donald Secombe, CBE (8 September 1921 ? 11 April 2001) was a Welsh entertainer with a talent for comedy and a noted fine tenor singing voice., column=5, <:*:> into BIOGRAPHY (ID, DATE_CREATED, LAST_MODIFIED, ORCID, BIOGRAPHY, VISIBILITY) values (?, ?, ?, ?, ?, ?)], parameters=[[3], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [4444-4444-4444-4444], <:*:> [LIMITED]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Andrew Timothy (1912?9 December 1990) was an Anglican priest and BBC Radio announcer, who is best remembered for being the original announcer of the comedy series The Goon Show., column=5, <:*:> into BIOGRAPHY (ID, DATE_CREATED, LAST_MODIFIED, ORCID, BIOGRAPHY, VISIBILITY) values (?, ?, ?, ?, ?, ?)], parameters=[[4], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [4444-4444-4444-4445], <:*:> [PUBLIC]]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Billie Holiday (born Eleanora Harris[1][4] April 7, 1915 ? July 17, 1959) was an American jazz singer and songwriter., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Billie Holiday (born Eleanora Harris[1][4] April 7, 1915 ? July 17, 1959) was an American jazz singer and songwriter., dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Billie Holiday (born Eleanora Harris[1][4] April 7, 1915 ? July 17, 1959) was an American jazz singer and songwriter., column=5, <:*:> into BIOGRAPHY (ID, DATE_CREATED, LAST_MODIFIED, ORCID, BIOGRAPHY, VISIBILITY) values (?, ?, ?, ?, ?, ?)], parameters=[[5], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [4444-4444-4444-4446], <:*:> [PUBLIC]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Billie Holiday (born Eleanora Harris[1][4] April 7, 1915 ? July 17, 1959) was an American jazz singer and songwriter.) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Otis Ray Redding, Jr. (September 9, 1941 ? December 10, 1967) was an American soul singer-songwriter, record producer, arranger, and talent scout., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Otis Ray Redding, Jr. (September 9, 1941 ? December 10, 1967) was an American soul singer-songwriter, record producer, arranger, and talent scout., dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> column=5, <:*:> into BIOGRAPHY (ID, DATE_CREATED, LAST_MODIFIED, ORCID, BIOGRAPHY, VISIBILITY) values (?, ?, ?, ?, ?, ?)], <:*:> [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Otis Ray Redding, Jr. (September 9, 1941 ? December 10, 1967) was an American soul singer-songwriter, record producer, arranger, and talent scout.) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Admin user will be used to execute admin actions on controllers., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Admin user will be used to execute admin actions on controllers., dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Admin user will be used to execute admin actions on controllers., column=5, <:*:> into BIOGRAPHY (ID, DATE_CREATED, LAST_MODIFIED, ORCID, BIOGRAPHY, VISIBILITY) values (?, ?, ?, ?, ?, ?)], parameters=[[8], [org.hsqldb.types.TimestampData@56fdba00], [org.hsqldb.types.TimestampData@56fdba00], [4444-4444-4444-4440], <:*:> [PUBLIC]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Admin user will be used to execute admin actions on controllers.) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Michael Bentine CBE (26 January 1922[1] ? 26 November 1996[2]) was a British comedian, comic actor and founding member of the Goons., dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Michael Bentine CBE (26 January 1922[1] ? 26 November 1996[2]) was a British comedian, comic actor and founding member of the Goons., dataType=CLOB) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Michael Bentine CBE (26 January 1922[1] ? 26 November 1996[2]) was a British comedian, comic actor and founding member of the Goons.) - start
function.TemplateRenderer (TemplateRenderer.java:121) - HHH000174: Function template anticipated 4 arguments, but 1 arguments encountered
spi.SqlExceptionHelper$StandardWarningHandler (SqlExceptionHelper.java:232) - SQL Warning Code: -1100, SQLState: 02000
spi.SqlExceptionHelper$StandardWarningHandler (SqlExceptionHelper.java:233) - no data
impl.WebhookManagerImpl (WebhookManagerImpl.java:185) - Webhook <:*:> for Client: <:*:> With ORCID: <:*:> could not be processed because of response status code: 404
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[webhook], _tableMap={WEBHOOK=org.dbunit.dataset.DefaultTable[_metaData=tableName=webhook, columns=[(orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (profile_last_modified, UNKNOWN, nullableUnknown), (last_sent, UNKNOWN, nullableUnknown), (uri, UNKNOWN, nullableUnknown), (failed_attempt_count, UNKNOWN, nullableUnknown), (enabled, UNKNOWN, nullableUnknown), (disabled_date, UNKNOWN, nullableUnknown), (disabled_comments, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]}, _caseSensitiveTableNames=false]
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - getColumns(columnNames=[ORCID, URI], columns=[(ORCID, VARCHAR, noNulls), (CLIENT_DETAILS_ID, VARCHAR, noNulls), (URI, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (LAST_FAILED, TIMESTAMP, nullable), (FAILED_ATTEMPT_COUNT, INTEGER, noNulls), (ENABLED, BOOLEAN, noNulls), (DISABLED_DATE, TIMESTAMP, nullable), (DISABLED_COMMENTS, CLOB, nullable), (LAST_SENT, TIMESTAMP, nullable), (PROFILE_LAST_MODIFIED, TIMESTAMP, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ORCID, VARCHAR, noNulls), (CLIENT_DETAILS_ID, VARCHAR, noNulls), (URI, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (LAST_FAILED, TIMESTAMP, nullable), (FAILED_ATTEMPT_COUNT, INTEGER, noNulls), (ENABLED, BOOLEAN, noNulls), (DISABLED_DATE, TIMESTAMP, nullable), (DISABLED_COMMENTS, CLOB, nullable), (LAST_SENT, TIMESTAMP, nullable), (PROFILE_LAST_MODIFIED, TIMESTAMP, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=webhook, object=table=WEBHOOK, cols=[(ORCID, VARCHAR, noNulls), (CLIENT_DETAILS_ID, VARCHAR, noNulls), (URI, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (LAST_FAILED, TIMESTAMP, nullable), (FAILED_ATTEMPT_COUNT, INTEGER, noNulls), (ENABLED, BOOLEAN, noNulls), (DISABLED_DATE, TIMESTAMP, nullable), (DISABLED_COMMENTS, CLOB, nullable), (LAST_SENT, TIMESTAMP, nullable), (PROFILE_LAST_MODIFIED, TIMESTAMP, nullable)], pk=[(ORCID, VARCHAR, noNulls), (URI, VARCHAR, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> VARCHAR, noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> BOOLEAN, <:*:> <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - setSqlValue(value=0, column=8, statement=org.hsqldb.jdbc.JDBCPreparedStatement@75eec64f[sql=[insert into WEBHOOK (ORCID, CLIENT_DETAILS_ID, DATE_CREATED, LAST_MODIFIED, PROFILE_LAST_MODIFIED, LAST_SENT, URI, FAILED_ATTEMPT_COUNT, ENABLED, DISABLED_DATE, DISABLED_COMMENTS) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [4444-4444-4444-4445], <:*:> <:*:> [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Data broken at their end, column=11, statement=org.hsqldb.jdbc.JDBCPreparedStatement@75eec64f[sql=[insert into WEBHOOK (ORCID, CLIENT_DETAILS_ID, DATE_CREATED, LAST_MODIFIED, PROFILE_LAST_MODIFIED, LAST_SENT, URI, FAILED_ATTEMPT_COUNT, ENABLED, DISABLED_DATE, DISABLED_COMMENTS) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[4444-4444-4444-4444], [4444-4444-4444-4445], [org.hsqldb.types.TimestampData@4e0dbe04], [org.hsqldb.types.TimestampData@4e0de834], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0de834], [http://nowhere.com/orcid/4444-4444-4444-4444], [0], [false], [org.hsqldb.types.TimestampData@4e0de870], [null]]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=WEBHOOK, columns=[(ORCID, VARCHAR, noNulls), (CLIENT_DETAILS_ID, VARCHAR, noNulls), (URI, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (LAST_FAILED, TIMESTAMP, nullable), (FAILED_ATTEMPT_COUNT, INTEGER, noNulls), (ENABLED, BOOLEAN, noNulls), (DISABLED_DATE, TIMESTAMP, nullable), (DISABLED_COMMENTS, CLOB, nullable), (LAST_SENT, TIMESTAMP, nullable), (PROFILE_LAST_MODIFIED, TIMESTAMP, nullable)], keys=[(ORCID, VARCHAR, noNulls), (URI, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.hsqldb.jdbc.JDBCConnection@3a7b132d, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.orcid.test.CustomDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@38443867], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@6b9cf06e}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
mapping.RootClass <:*:> - <:*:> Composite-id class does not override <:*:> org.orcid.persistence.jpa.entities.OrcidSocialEntity
internal.EntityManagerFactoryRegistry (EntityManagerFactoryRegistry.java:80) - HHH000436: Entity manager factory name (orcid) is already registered. If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=subject, object=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - startTable(metaData=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=subject, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[subject], _tableMap={SUBJECT=org.dbunit.dataset.DefaultTable[_metaData=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - createReplacementTable(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=null], metaData=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - getOperationData(metaData=tableName=SUBJECT, columns=[(NAME, VARCHAR, noNulls)], keys=[(NAME, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into SUBJECT (NAME) values (?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> column=1, <:*:> into SUBJECT (NAME) values (?)], <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=subject, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=SUBJECT, columns=[(NAME, VARCHAR, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], keys=[(NAME, VARCHAR, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
impl.SourceNameCacheManagerImpl (SourceNameCacheManagerImpl.java:119) - Cannot find source name from profile matching 0000
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[profile, record_name, granted_authority, email, client_details, client_authorised_grant_type, client_granted_authority, client_redirect_uri, client_resource_id, client_scope, client_secret], _tableMap={CLIENT_SECRET=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_secret, columns=[(client_details_id, UNKNOWN, nullableUnknown), (client_secret, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], PROFILE=org.dbunit.dataset.DefaultTable[_metaData=tableName=profile, columns=[(orcid, UNKNOWN, nullableUnknown), (creation_method, UNKNOWN, nullableUnknown), (completed_date, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (submission_date, UNKNOWN, nullableUnknown), (last_indexed_date, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (claimed, UNKNOWN, nullableUnknown), (is_selectable_sponsor, UNKNOWN, nullableUnknown), (activities_visibility_default, UNKNOWN, nullableUnknown), (indexing_status, UNKNOWN, nullableUnknown), (orcid_type, UNKNOWN, nullableUnknown), (group_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], RECORD_NAME=org.dbunit.dataset.DefaultTable[_metaData=tableName=record_name, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (given_names, UNKNOWN, nullableUnknown), (family_name, UNKNOWN, nullableUnknown), (credit_name, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], GRANTED_AUTHORITY=org.dbunit.dataset.DefaultTable[_metaData=tableName=granted_authority, columns=[(authority, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], CLIENT_RESOURCE_ID=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_resource_id, columns=[(client_details_id, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], CLIENT_GRANTED_AUTHORITY=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_granted_authority, columns=[(client_details_id, UNKNOWN, nullableUnknown), (granted_authority, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], CLIENT_DETAILS=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_details, columns=[(client_type, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (client_secret, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (client_name, UNKNOWN, nullableUnknown), (client_description, UNKNOWN, nullableUnknown), (client_website, UNKNOWN, nullableUnknown), (group_orcid, UNKNOWN, nullableUnknown), (persistent_tokens_enabled, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], CLIENT_REDIRECT_URI=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_redirect_uri, columns=[(client_details_id, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (redirect_uri_type, UNKNOWN, nullableUnknown), (predefined_client_redirect_scope, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], CLIENT_SCOPE=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_scope, columns=[(client_details_id, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=51], EMAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=email, columns=[(orcid, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown), (email_hash, UNKNOWN, nullableUnknown), (is_primary, UNKNOWN, nullableUnknown), (is_current, UNKNOWN, nullableUnknown), (is_verified, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], CLIENT_AUTHORISED_GRANT_TYPE=org.dbunit.dataset.DefaultTable[_metaData=tableName=client_authorised_grant_type, columns=[(client_details_id, UNKNOWN, nullableUnknown), (grant_type, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - <:*:> <:*:> <:*:> noNulls), <:*:> VARCHAR, <:*:> <:*:> TIMESTAMP, nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> VARCHAR, nullable), <:*:> <:*:> nullable)], <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], <:*:> <:*:> <:*:> [null], [null], [null]]]) - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> statement=org.hsqldb.jdbc.JDBCPreparedStatement@29e28b12[sql=[insert into PROFILE (ORCID, CREATION_METHOD, COMPLETED_DATE, DATE_CREATED, SUBMISSION_DATE, LAST_INDEXED_DATE, LAST_MODIFIED, CLAIMED, IS_SELECTABLE_SPONSOR, ACTIVITIES_VISIBILITY_DEFAULT, INDEXING_STATUS, ORCID_TYPE, GROUP_TYPE) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[5555-5555-5555-0000], [WEB], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0b4534], [org.hsqldb.types.TimestampData@4e0b4534], [org.hsqldb.types.TimestampData@4e0f39b4], [org.hsqldb.types.TimestampData@4e0f39b4], <:*:> [null], [null], [null], [null], [null]]]) - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], <:*:> _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?)], parameters=[[1], <:*:> <:*:> <:*:> [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> <:*:> column=7, <:*:> into CLIENT_DETAILS (CLIENT_TYPE, CLIENT_DETAILS_ID, CLIENT_SECRET, DATE_CREATED, LAST_MODIFIED, CLIENT_NAME, CLIENT_DESCRIPTION, CLIENT_WEBSITE, GROUP_ORCID, PERSISTENT_TOKENS_ENABLED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[PREMIUM_CREATOR], <:*:> <:*:> [org.hsqldb.types.TimestampData@4f973e80], [org.hsqldb.types.TimestampData@4f973e80], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap <:*:> - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.Columns (Columns.java:71) - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[notification, notification_item], _tableMap={NOTIFICATION=org.dbunit.dataset.DefaultTable[_metaData=tableName=notification, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (notification_type, UNKNOWN, nullableUnknown), (subject, UNKNOWN, nullableUnknown), (body_text, UNKNOWN, nullableUnknown), (body_html, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown), (client_source_id, UNKNOWN, nullableUnknown), (sent_date, UNKNOWN, nullableUnknown), (notification_subject, UNKNOWN, nullableUnknown), (notification_intro, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=28], NOTIFICATION_ITEM=org.dbunit.dataset.DefaultTable[_metaData=tableName=notification_item, columns=[(id, UNKNOWN, nullableUnknown), (notification_id, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (item_type, UNKNOWN, nullableUnknown), (item_name, UNKNOWN, nullableUnknown), (external_id_type, UNKNOWN, nullableUnknown), (external_id_value, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]}, _caseSensitiveTableNames=false]
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (NOTIFICATION_TYPE, VARCHAR, noNulls), (SUBJECT, VARCHAR, nullable), (BODY_TEXT, CLOB, nullable), (BODY_HTML, CLOB, nullable), (SENT_DATE, TIMESTAMP, nullable), (READ_DATE, TIMESTAMP, nullable), (ARCHIVED_DATE, TIMESTAMP, nullable), (SENDABLE, BOOLEAN, noNulls), (SOURCE_ID, VARCHAR, nullable), (AUTHORIZATION_URL, VARCHAR, nullable), (LANG, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (AMENDED_SECTION, VARCHAR, nullable), (ACTIONED_DATE, TIMESTAMP, nullable), (NOTIFICATION_SUBJECT, CLOB, nullable), (NOTIFICATION_INTRO, VARCHAR, nullable), (AUTHENTICATION_PROVIDER_ID, VARCHAR, nullable), (RETRY_COUNT, INTEGER, nullable), (NOTIFICATION_FAMILY, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=notification, object=table=NOTIFICATION, cols=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (NOTIFICATION_TYPE, VARCHAR, noNulls), (SUBJECT, VARCHAR, nullable), (BODY_TEXT, CLOB, nullable), (BODY_HTML, CLOB, nullable), (SENT_DATE, TIMESTAMP, nullable), (READ_DATE, TIMESTAMP, nullable), (ARCHIVED_DATE, TIMESTAMP, nullable), (SENDABLE, BOOLEAN, noNulls), (SOURCE_ID, VARCHAR, nullable), (AUTHORIZATION_URL, VARCHAR, nullable), (LANG, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (AMENDED_SECTION, VARCHAR, nullable), (ACTIONED_DATE, TIMESTAMP, nullable), (NOTIFICATION_SUBJECT, CLOB, nullable), (NOTIFICATION_INTRO, VARCHAR, nullable), (AUTHENTICATION_PROVIDER_ID, VARCHAR, nullable), (RETRY_COUNT, INTEGER, nullable), (NOTIFICATION_FAMILY, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [null], [null], [null], <:*:> <:*:> <:*:> [null], [null], [null]]]) - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Your ORCID record was updated (Super Institution <:*:> dataType=VARCHAR) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Your ORCID record was updated (Super Institution <:*:> dataType=VARCHAR) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Your ORCID record was updated (Super Institution 1), column=5, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [null], [null], [null], <:*:> <:*:> <:*:> [null], [null], [null]]]) - start
datatype.DataType (DataType.java:177) - asString(value=Your ORCID record was updated (Super Institution <:*:> - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Your ORCID record was updated (Super Institution <:*:> - start
statement.AutomaticPreparedBatchStatement (AutomaticPreparedBatchStatement.java:61) - addValue(value=Your ORCID record was updated by Super Institution <:*:> regards,\n\nORCID, dataType=CLOB) - start
statement.SimplePreparedStatement (SimplePreparedStatement.java:64) - addValue(value=Your ORCID record was updated by Super Institution <:*:> regards,\n\nORCID, dataType=CLOB) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Your ORCID record was updated by Super Institution <:*:> regards,\n\nORCID, <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution 1)], <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:59) - typeCast(value=Your ORCID record was updated by Super Institution <:*:> regards,\n\nORCID) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution 1)], <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution 1)], <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> [null], [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [4444-4444-4444-4441], <:*:> <:*:> [Your ORCID record was updated (Super Institution 1)], <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Your ORCID record was updated (Super Institution 1), column=5, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [4444-4444-4444-4441], <:*:> <:*:> [Your ORCID record was updated (Super Institution 1)], <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> [null], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=This is the subject, column=11, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution 1)], <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=This is the intro, column=12, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution 1)], <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> <:*:> [null], [null]]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution <:*:> <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> <:*:> [This is the intro], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution <:*:> <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> <:*:> [This is the intro], <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution <:*:> <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> <:*:> [This is the intro], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Your ORCID record was updated (Super Institution <:*:> column=5, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution <:*:> <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> <:*:> [This is the intro], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=Your ORCID record was updated by Super Institution <:*:> regards,\n\nORCID, <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution <:*:> <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> <:*:> [This is the intro], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=This is the subject, column=11, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution <:*:> <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> <:*:> [This is the intro], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=This is the intro, column=12, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> [Your ORCID record was updated (Super Institution <:*:> <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], <:*:> <:*:> [This is the intro], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[5], [4444-4444-4444-4442], [org.hsqldb.types.TimestampData@542e1057], [PERMISSION], [null], [null], [null], [4444-4444-4444-4446], [4444-4444-4444-4445], [org.hsqldb.types.TimestampData@53d119bf], <:*:> [This is the intro], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2014-10-04 06:41:52.00, column=10, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[5], [4444-4444-4444-4442], [org.hsqldb.types.TimestampData@542e1057], [PERMISSION], [null], [null], [null], [4444-4444-4444-4446], [4444-4444-4444-4445], [org.hsqldb.types.TimestampData@53d119bf], <:*:> [This is the intro], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=1000 subject, column=5, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1000], [0000-0000-0000-0003], [org.hsqldb.types.TimestampData@5a497a00], [SERVICE_ANNOUNCEMENT], [Your ORCID record was updated (Super Institution 2)], <:*:> <:*:> [4444-4444-4444-4446], [4444-4444-4444-4445], [org.hsqldb.types.TimestampData@58684680], <:*:> [This is the intro], [org.hsqldb.types.TimestampData@53c7cf32]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> <:*:> <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> <:*:> <:*:> subject], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [This is the intro], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> <:*:> <:*:> subject], <:*:> <:*:> [null], <:*:> <:*:> <:*:> [This is the intro], <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> <:*:> <:*:> subject], <:*:> <:*:> [null], [4444-4444-4444-4441], <:*:> <:*:> [This is the intro], <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value=This is the subject, column=11, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> <:*:> <:*:> subject], <:*:> <:*:> [null], [4444-4444-4444-4441], <:*:> <:*:> [This is the intro], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=This is the intro, column=12, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> <:*:> <:*:> subject], <:*:> <:*:> [null], [4444-4444-4444-4441], <:*:> <:*:> [This is the intro], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> <:*:> <:*:> subject], <:*:> <:*:> [null], [4444-4444-4444-4441], <:*:> <:*:> [This is the intro], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> subject, column=5, <:*:> into NOTIFICATION (ID, ORCID, DATE_CREATED, NOTIFICATION_TYPE, SUBJECT, BODY_TEXT, BODY_HTML, SOURCE_ID, CLIENT_SOURCE_ID, SENT_DATE, NOTIFICATION_SUBJECT, NOTIFICATION_INTRO, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [0000-0000-0000-0003], <:*:> <:*:> <:*:> subject], <:*:> <:*:> [null], [4444-4444-4444-4441], <:*:> <:*:> [This is the intro], [null]]]) - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ID, BIGINT, noNulls), (NOTIFICATION_ID, BIGINT, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ITEM_TYPE, VARCHAR, nullable), (ITEM_NAME, VARCHAR, nullable), (EXTERNAL_ID_TYPE, VARCHAR, nullable), (EXTERNAL_ID_VALUE, VARCHAR, nullable), (ACTION_TYPE, VARCHAR, nullable), (ADDITIONAL_INFO, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=notification_item, object=table=NOTIFICATION_ITEM, cols=[(ID, BIGINT, noNulls), (NOTIFICATION_ID, BIGINT, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ITEM_TYPE, VARCHAR, nullable), (ITEM_NAME, VARCHAR, nullable), (EXTERNAL_ID_TYPE, VARCHAR, nullable), (EXTERNAL_ID_VALUE, VARCHAR, nullable), (ACTION_TYPE, VARCHAR, nullable), (ADDITIONAL_INFO, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into <:*:> (ID, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> values (?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [null], [null], [null], [null], [null]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2014-10-03 02:56:23.00, column=3, <:*:> into NOTIFICATION_ITEM (ID, NOTIFICATION_ID, DATE_CREATED, ITEM_TYPE, ITEM_NAME, EXTERNAL_ID_TYPE, EXTERNAL_ID_VALUE) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [5], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=WORK, column=4, <:*:> into NOTIFICATION_ITEM (ID, NOTIFICATION_ID, DATE_CREATED, ITEM_TYPE, ITEM_NAME, EXTERNAL_ID_TYPE, EXTERNAL_ID_VALUE) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [5], [org.hsqldb.types.TimestampData@542e1057], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=A research article about something amazing, column=5, <:*:> into NOTIFICATION_ITEM (ID, NOTIFICATION_ID, DATE_CREATED, ITEM_TYPE, ITEM_NAME, EXTERNAL_ID_TYPE, EXTERNAL_ID_VALUE) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [5], [org.hsqldb.types.TimestampData@542e1057], [WORK], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into NOTIFICATION_ITEM (ID, NOTIFICATION_ID, DATE_CREATED, ITEM_TYPE, ITEM_NAME, EXTERNAL_ID_TYPE, EXTERNAL_ID_VALUE) values (?, ?, ?, ?, ?, ?, ?)], <:*:> [5], [org.hsqldb.types.TimestampData@542e1057], [WORK], [A research article about something amazing], <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> columns=[(id, UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown), <:*:> UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into NOTIFICATION_ITEM (ID, NOTIFICATION_ID, DATE_CREATED, ITEM_TYPE, ITEM_NAME, EXTERNAL_ID_TYPE, EXTERNAL_ID_VALUE) values (?, ?, ?, ?, ?, ?, ?)], <:*:> [5], [org.hsqldb.types.TimestampData@542e1057], [WORK], [A research article about something amazing], [DOI], [1234/abc123]]]) - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2014-10-03 02:56:23.00, column=3, <:*:> into NOTIFICATION_ITEM (ID, NOTIFICATION_ID, DATE_CREATED, ITEM_TYPE, ITEM_NAME, EXTERNAL_ID_TYPE, EXTERNAL_ID_VALUE) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [5], [org.hsqldb.types.TimestampData@542e1057], [WORK], [A research article about something amazing], [DOI], [1234/abc123]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Super Cool University, column=5, <:*:> into NOTIFICATION_ITEM (ID, NOTIFICATION_ID, DATE_CREATED, ITEM_TYPE, ITEM_NAME, EXTERNAL_ID_TYPE, EXTERNAL_ID_VALUE) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [5], [org.hsqldb.types.TimestampData@542e1057], [EMPLOYMENT], [A research article about something amazing], [DOI], [1234/abc123]]]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=notification_item, columns=[(ID, BIGINT, noNulls), (NOTIFICATION_ID, BIGINT, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ITEM_TYPE, VARCHAR, nullable), (ITEM_NAME, VARCHAR, nullable), (EXTERNAL_ID_TYPE, VARCHAR, nullable), (EXTERNAL_ID_VALUE, VARCHAR, nullable), (ACTION_TYPE, VARCHAR, nullable), (ADDITIONAL_INFO, VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=NOTIFICATION_ITEM, columns=[(ID, BIGINT, noNulls), (NOTIFICATION_ID, BIGINT, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ITEM_TYPE, VARCHAR, nullable), (ITEM_NAME, VARCHAR, nullable), (EXTERNAL_ID_TYPE, VARCHAR, nullable), (EXTERNAL_ID_VALUE, VARCHAR, nullable), (ACTION_TYPE, VARCHAR, nullable), (ADDITIONAL_INFO, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=notification, columns=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (NOTIFICATION_TYPE, VARCHAR, noNulls), (SUBJECT, VARCHAR, nullable), (BODY_TEXT, CLOB, nullable), (BODY_HTML, CLOB, nullable), (SENT_DATE, TIMESTAMP, nullable), (READ_DATE, TIMESTAMP, nullable), (ARCHIVED_DATE, TIMESTAMP, nullable), (SENDABLE, BOOLEAN, noNulls), (SOURCE_ID, VARCHAR, nullable), (AUTHORIZATION_URL, VARCHAR, nullable), (LANG, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (AMENDED_SECTION, VARCHAR, nullable), (ACTIONED_DATE, TIMESTAMP, nullable), (NOTIFICATION_SUBJECT, CLOB, nullable), (NOTIFICATION_INTRO, VARCHAR, nullable), (AUTHENTICATION_PROVIDER_ID, VARCHAR, nullable), (RETRY_COUNT, INTEGER, nullable), (NOTIFICATION_FAMILY, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[]]) - start
operation.DeleteOperation (DeleteOperation.java:73) - getOperationData(metaData=tableName=NOTIFICATION, columns=[(ID, BIGINT, noNulls), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (ORCID, VARCHAR, noNulls), (NOTIFICATION_TYPE, VARCHAR, noNulls), (SUBJECT, VARCHAR, nullable), (BODY_TEXT, CLOB, nullable), (BODY_HTML, CLOB, nullable), (SENT_DATE, TIMESTAMP, nullable), (READ_DATE, TIMESTAMP, nullable), (ARCHIVED_DATE, TIMESTAMP, nullable), (SENDABLE, BOOLEAN, noNulls), (SOURCE_ID, VARCHAR, nullable), (AUTHORIZATION_URL, VARCHAR, nullable), (LANG, VARCHAR, nullable), (CLIENT_SOURCE_ID, VARCHAR, nullable), (AMENDED_SECTION, VARCHAR, nullable), (ACTIONED_DATE, TIMESTAMP, nullable), (NOTIFICATION_SUBJECT, CLOB, nullable), (NOTIFICATION_INTRO, VARCHAR, nullable), (AUTHENTICATION_PROVIDER_ID, VARCHAR, nullable), (RETRY_COUNT, INTEGER, nullable), (NOTIFICATION_FAMILY, VARCHAR, nullable), (ASSERTION_ORIGIN_SOURCE_ID, VARCHAR, nullable), (ASSERTION_ORIGIN_CLIENT_SOURCE_ID, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - <:*:> <:*:> UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (org_index, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - <:*:> <:*:> <:*:> UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (org_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[research_resource, research_resource_item, research_resource_org, research_resource_item_org], _tableMap={RESEARCH_RESOURCE_ITEM=org.dbunit.dataset.DefaultTable[_metaData=tableName=research_resource_item, columns=[(id, UNKNOWN, nullableUnknown), (item_index, UNKNOWN, nullableUnknown), (research_resource_id, UNKNOWN, nullableUnknown), (resource_name, UNKNOWN, nullableUnknown), (resource_type, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], RESEARCH_RESOURCE_ORG=org.dbunit.dataset.DefaultTable[_metaData=tableName=research_resource_org, columns=[(research_resource_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (org_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], RESEARCH_RESOURCE=org.dbunit.dataset.DefaultTable[_metaData=tableName=research_resource, columns=[(id, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (external_identifiers_json, UNKNOWN, nullableUnknown), (title, UNKNOWN, nullableUnknown), (translated_title, UNKNOWN, nullableUnknown), (translated_title_language_code, UNKNOWN, nullableUnknown), (proposal_type, UNKNOWN, nullableUnknown), (url, UNKNOWN, nullableUnknown), (display_index, UNKNOWN, nullableUnknown), (visibility, UNKNOWN, nullableUnknown), (start_year, UNKNOWN, nullableUnknown), (start_month, UNKNOWN, nullableUnknown), (start_day, UNKNOWN, nullableUnknown), (end_year, UNKNOWN, nullableUnknown), (end_month, UNKNOWN, nullableUnknown), (end_day, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (source_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=6], RESEARCH_RESOURCE_ITEM_ORG=org.dbunit.dataset.DefaultTable[_metaData=tableName=research_resource_item_org, columns=[(research_resource_item_id, UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (org_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]}, _caseSensitiveTableNames=false]
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"workExternalIdentifier":[{"workExternalIdentifierType":"AGR","workExternalIdentifierId":{"content":"work:external-identifier-id#1"}}]}, column=3, statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [4444-4444-4444-4446], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [the <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=the proposal type, column=7, statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [4444-4444-4444-4446], [org.hsqldb.jdbc.JDBCClob@6082fecf], [the title], [the translated title], [en], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - <:*:> <:*:> statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [the <:*:> [the translated <:*:> [en], [the proposal <:*:> [the <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2010-07-02 15:31:00.00, <:*:> statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [the <:*:> [the translated <:*:> [en], [the proposal <:*:> [the <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [the <:*:> [the translated <:*:> [en], [the proposal <:*:> [the <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [the <:*:> [the translated <:*:> [en], [the proposal <:*:> [the <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> - start
datatype.ClobDataType (ClobDataType.java:68) - <:*:> column=3, statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [the <:*:> [the translated <:*:> [en], [the proposal <:*:> [the <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=the <:*:> <:*:> statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [the <:*:> [the translated <:*:> [en], [the proposal <:*:> [the <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=the <:*:> <:*:> <:*:> statement=org.hsqldb.jdbc.JDBCPreparedStatement@34cc6146[sql=[insert into RESEARCH_RESOURCE (ID, ORCID, EXTERNAL_IDENTIFIERS_JSON, TITLE, TRANSLATED_TITLE, TRANSLATED_TITLE_LANGUAGE_CODE, PROPOSAL_TYPE, URL, DISPLAY_INDEX, VISIBILITY, START_YEAR, START_MONTH, START_DAY, END_YEAR, END_MONTH, END_DAY, DATE_CREATED, LAST_MODIFIED, SOURCE_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> [the <:*:> [the translated <:*:> [en], [the proposal <:*:> [the <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> [org.hsqldb.types.TimestampData@4c2e0634], [org.hsqldb.types.TimestampData@4c2e0634], <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> cols=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> pk=[(ID, BIGINT, noNulls)]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=the resource name1, column=4, statement=org.hsqldb.jdbc.JDBCPreparedStatement@46fc1be6[sql=[insert into RESEARCH_RESOURCE_ITEM (ID, ITEM_INDEX, RESEARCH_RESOURCE_ID, RESOURCE_NAME, RESOURCE_TYPE, URL, EXTERNAL_IDENTIFIERS_JSON) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [0], [1], [null], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=infrastructures, column=5, statement=org.hsqldb.jdbc.JDBCPreparedStatement@46fc1be6[sql=[insert into RESEARCH_RESOURCE_ITEM (ID, ITEM_INDEX, RESEARCH_RESOURCE_ID, RESOURCE_NAME, RESOURCE_TYPE, URL, EXTERNAL_IDENTIFIERS_JSON) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [0], [1], [the resource name1], [null], [null], [null]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=the url1, column=6, statement=org.hsqldb.jdbc.JDBCPreparedStatement@46fc1be6[sql=[insert into RESEARCH_RESOURCE_ITEM (ID, ITEM_INDEX, RESEARCH_RESOURCE_ID, RESOURCE_NAME, RESOURCE_TYPE, URL, EXTERNAL_IDENTIFIERS_JSON) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [0], [1], [the resource name1], [infrastructures], [null], [null]]]) - start
datatype.ClobDataType (ClobDataType.java:68) - setSqlValue(value={"workExternalIdentifier":[{"workExternalIdentifierType":"AGR","workExternalIdentifierId":{"content":"work:external-identifier-id#1"}}]}, column=7, statement=org.hsqldb.jdbc.JDBCPreparedStatement@46fc1be6[sql=[insert into RESEARCH_RESOURCE_ITEM (ID, ITEM_INDEX, RESEARCH_RESOURCE_ID, RESOURCE_NAME, RESOURCE_TYPE, URL, EXTERNAL_IDENTIFIERS_JSON) values (?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [1], [the resource <:*:> [infrastructures], [the <:*:> <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> statement=org.hsqldb.jdbc.JDBCPreparedStatement@46fc1be6[sql=[insert into RESEARCH_RESOURCE_ITEM (ID, ITEM_INDEX, RESEARCH_RESOURCE_ID, RESOURCE_NAME, RESOURCE_TYPE, URL, EXTERNAL_IDENTIFIERS_JSON) values (?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [1], [the resource name1], [infrastructures], [the url1], [org.hsqldb.types.ClobDataID@5e8]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=the resource name2, column=4, statement=org.hsqldb.jdbc.JDBCPreparedStatement@46fc1be6[sql=[insert into RESEARCH_RESOURCE_ITEM (ID, ITEM_INDEX, RESEARCH_RESOURCE_ID, RESOURCE_NAME, RESOURCE_TYPE, URL, EXTERNAL_IDENTIFIERS_JSON) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [1], [1], [the resource name1], [infrastructures], [the url1], [org.hsqldb.types.ClobDataID@5e8]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=infrastructures, column=5, statement=org.hsqldb.jdbc.JDBCPreparedStatement@46fc1be6[sql=[insert into RESEARCH_RESOURCE_ITEM (ID, ITEM_INDEX, RESEARCH_RESOURCE_ID, RESOURCE_NAME, RESOURCE_TYPE, URL, EXTERNAL_IDENTIFIERS_JSON) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [1], [1], [the resource name2], [infrastructures], [the url1], [org.hsqldb.types.ClobDataID@5e8]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=the url2, column=6, statement=org.hsqldb.jdbc.JDBCPreparedStatement@46fc1be6[sql=[insert into RESEARCH_RESOURCE_ITEM (ID, ITEM_INDEX, RESEARCH_RESOURCE_ID, RESOURCE_NAME, RESOURCE_TYPE, URL, EXTERNAL_IDENTIFIERS_JSON) values (?, ?, ?, ?, ?, ?, ?)], parameters=[[2], [1], [1], [the resource name2], [infrastructures], [the url1], [org.hsqldb.types.ClobDataID@5e8]]]) - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - <:*:> <:*:> UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (org_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (org_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> ORG_ID], <:*:> BIGINT, noNulls), (ORG_ID, BIGINT, noNulls), (ORG_INDEX, BIGINT, noNulls)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> <:*:> <:*:> BIGINT, noNulls), (ORG_ID, BIGINT, noNulls), (ORG_INDEX, BIGINT, noNulls)], <:*:> BIGINT, noNulls), (ORG_ID, BIGINT, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (org_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into <:*:> <:*:> ORG_ID, ORG_INDEX) values (?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.hsqldb.jdbc.JDBCConnection@249d0b3f, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.orcid.test.CustomDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1c279c44], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@4f09187}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> into <:*:> <:*:> ORG_ID, ORG_INDEX) values (?, ?, ?)], <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, <:*:> <:*:> UNKNOWN, nullableUnknown), (org_id, UNKNOWN, nullableUnknown), (org_index, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> <:*:> <:*:> from <:*:> where <:*:> = ? and ORG_ID = ?], <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> BIGINT, noNulls)], keys=[]], <:*:> - start
operation.DeleteOperation (DeleteOperation.java:73) - <:*:> columns=[(ID, BIGINT, noNulls), <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> VARCHAR, <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> <:*:> keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.IntegerDataType (IntegerDataType.java:103) - setSqlValue(value=1, column=4, statement=org.hsqldb.jdbc.JDBCPreparedStatement@14153dd0[sql=[insert into SPAM (ID, ORCID, SOURCE_TYPE, SPAM_COUNTER, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?)], <:*:> <:*:> [USER], <:*:> <:*:> <:*:> - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - <:*:> <:*:> <:*:> noNulls), <:*:> <:*:> <:*:> <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> <:*:> nullable), <:*:> TIMESTAMP, nullable), <:*:> <:*:> nullable)], keys=[]], <:*:> - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.hsqldb.jdbc.JDBCConnection@c338f0b, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.orcid.test.CustomDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@2426d5ab], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1fa9f56e}], _dataSet=null], metaData=org.dbunit.database.ResultSetTableMetaData[wrappedTableMetaData=tableName=spam, columns=[(ID, BIGINT, noNulls), (ORCID, VARCHAR, noNulls), (REPORTED_DATE, TIMESTAMP, nullable), (SOURCE_TYPE, VARCHAR, nullable), (SPAM_COUNTER, INTEGER, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], keys=[]]) - start
validator.PersonValidator <:*:> - Reference field must not be empty
validator.PersonValidator <:*:> - Relationship field should be self for person identifiers
validator.PersonValidator <:*:> - Common name field must not be empty
impl.ValidationManagerImpl (ValidationManagerImpl.java:302) - Message version is required
impl.ClientDetailsManagerReadOnlyImpl (ClientDetailsManagerReadOnlyImpl.java:91) - Error getting client by id:6444-4444-4444-4441
dataset.CachedDataSet (CachedDataSet.java:135) - startTable(metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (refresh_token_value, UNKNOWN, nullableUnknown), (refresh_token_expiration, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=oauth2_token_detail, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (refresh_token_value, UNKNOWN, nullableUnknown), (refresh_token_expiration, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start
dataset.CachedDataSet (CachedDataSet.java:135) - startTable(metaData=tableName=oauth2_authoriziation_code_detail, columns=[(authoriziation_code_value, UNKNOWN, nullableUnknown), (is_aproved, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (session_id, UNKNOWN, nullableUnknown), (is_authenticated, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:191) - add(tableName=oauth2_authoriziation_code_detail, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_authoriziation_code_detail, columns=[(authoriziation_code_value, UNKNOWN, nullableUnknown), (is_aproved, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (session_id, UNKNOWN, nullableUnknown), (is_authenticated, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3]) - start
dataset.CachedDataSet (CachedDataSet.java:130) - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[oauth2_token_detail, oauth2_authoriziation_code_detail], _tableMap={OAUTH2_AUTHORIZIATION_CODE_DETAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_authoriziation_code_detail, columns=[(authoriziation_code_value, UNKNOWN, nullableUnknown), (is_aproved, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (session_id, UNKNOWN, nullableUnknown), (is_authenticated, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], OAUTH2_TOKEN_DETAIL=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (refresh_token_value, UNKNOWN, nullableUnknown), (refresh_token_expiration, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]}, _caseSensitiveTableNames=false]
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - createReplacementTable(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (refresh_token_value, UNKNOWN, nullableUnknown), (refresh_token_expiration, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (refresh_token_value, UNKNOWN, nullableUnknown), (refresh_token_expiration, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (refresh_token_value, UNKNOWN, nullableUnknown), (refresh_token_expiration, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (refresh_token_value, UNKNOWN, nullableUnknown), (refresh_token_expiration, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
operation.InsertOperation (InsertOperation.java:65) - getOperationData(metaData=tableName=OAUTH2_TOKEN_DETAIL, columns=[(ID, BIGINT, noNulls), (TOKEN_VALUE, VARCHAR, nullable), (TOKEN_TYPE, VARCHAR, nullable), (TOKEN_EXPIRATION, TIMESTAMP, nullable), (USER_ORCID, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (REFRESH_TOKEN_VALUE, VARCHAR, nullable), (REFRESH_TOKEN_EXPIRATION, TIMESTAMP, nullable), (IS_APPROVED, BOOLEAN, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (SCOPE_TYPE, VARCHAR, nullable), (RESOURCE_ID, VARCHAR, nullable), (AUTHENTICATION_KEY, VARCHAR, nullable), (PERSISTENT, BOOLEAN, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, REFRESH_TOKEN_VALUE, REFRESH_TOKEN_EXPIRATION, IS_APPROVED, REDIRECT_URI, RESPONSE_TYPE, STATE, SCOPE_TYPE, RESOURCE_ID, AUTHENTICATION_KEY, PERSISTENT, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, REFRESH_TOKEN_VALUE, REFRESH_TOKEN_EXPIRATION, IS_APPROVED, REDIRECT_URI, RESPONSE_TYPE, STATE, SCOPE_TYPE, RESOURCE_ID, AUTHENTICATION_KEY, PERSISTENT, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], [org.hsqldb.types.TimestampData@70dbd880], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2020-01-01 00:00:00.00, <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, REFRESH_TOKEN_VALUE, REFRESH_TOKEN_EXPIRATION, IS_APPROVED, REDIRECT_URI, RESPONSE_TYPE, STATE, SCOPE_TYPE, RESOURCE_ID, AUTHENTICATION_KEY, PERSISTENT, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], parameters=[[1], [some-long-oauth2-token-value-1], [bearer], [org.hsqldb.types.TimestampData@70dbd880], [4444-4444-4444-4441], [4444-4444-4444-4441], [some-long-oauth2-refresh-value-1], [org.hsqldb.types.TimestampData@70dbd880], [true], [http://www.google.com/], [bearer], [a-state], [/orcid-profile/update], [orcid], [an-authentication-key-1], [false], <:*:> [null]]]) - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_token_detail, columns=[(id, UNKNOWN, nullableUnknown), (token_value, UNKNOWN, nullableUnknown), (token_type, UNKNOWN, nullableUnknown), (token_expiration, UNKNOWN, nullableUnknown), (user_orcid, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (refresh_token_value, UNKNOWN, nullableUnknown), (refresh_token_expiration, UNKNOWN, nullableUnknown), (is_approved, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (scope_type, UNKNOWN, nullableUnknown), (resource_id, UNKNOWN, nullableUnknown), (authentication_key, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=5], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
datatype.BigIntegerDataType (BigIntegerDataType.java:112) - <:*:> column=1, <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, REFRESH_TOKEN_VALUE, REFRESH_TOKEN_EXPIRATION, IS_APPROVED, REDIRECT_URI, RESPONSE_TYPE, STATE, SCOPE_TYPE, RESOURCE_ID, AUTHENTICATION_KEY, PERSISTENT, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, REFRESH_TOKEN_VALUE, REFRESH_TOKEN_EXPIRATION, IS_APPROVED, REDIRECT_URI, RESPONSE_TYPE, STATE, SCOPE_TYPE, RESOURCE_ID, AUTHENTICATION_KEY, PERSISTENT, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - <:*:> <:*:> <:*:> into OAUTH2_TOKEN_DETAIL (ID, TOKEN_VALUE, TOKEN_TYPE, TOKEN_EXPIRATION, USER_ORCID, CLIENT_DETAILS_ID, REFRESH_TOKEN_VALUE, REFRESH_TOKEN_EXPIRATION, IS_APPROVED, REDIRECT_URI, RESPONSE_TYPE, STATE, SCOPE_TYPE, RESOURCE_ID, AUTHENTICATION_KEY, PERSISTENT, DATE_CREATED, LAST_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> [bearer], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
dataset.ReplacementDataSet (ReplacementDataSet.java:139) - createReplacementTable(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_authoriziation_code_detail, columns=[(authoriziation_code_value, UNKNOWN, nullableUnknown), (is_aproved, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (session_id, UNKNOWN, nullableUnknown), (is_authenticated, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3]) - start
operation.AbstractBatchOperation (AbstractBatchOperation.java:64) - isEmpty(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_authoriziation_code_detail, columns=[(authoriziation_code_value, UNKNOWN, nullableUnknown), (is_aproved, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (session_id, UNKNOWN, nullableUnknown), (is_authenticated, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null]) - start
operation.AbstractOperation (AbstractOperation.java:75) - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=oauth2_authoriziation_code_detail, columns=[(authoriziation_code_value, UNKNOWN, nullableUnknown), (is_aproved, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (session_id, UNKNOWN, nullableUnknown), (is_authenticated, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - <:*:> columns=[(AUTHORIZIATION_CODE_VALUE, VARCHAR, noNulls), (IS_APROVED, BOOLEAN, nullable), (ORCID, VARCHAR, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (SESSION_ID, VARCHAR, nullable), (IS_AUTHENTICATED, BOOLEAN, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (PERSISTENT, BOOLEAN, nullable), (VERSION, BIGINT, nullable), (NONCE, VARCHAR, nullable)]) - start
dataset.OrderedTableNameMap (OrderedTableNameMap.java:234) - update(tableName=oauth2_authoriziation_code_detail, object=table=OAUTH2_AUTHORIZIATION_CODE_DETAIL, cols=[(AUTHORIZIATION_CODE_VALUE, VARCHAR, noNulls), (IS_APROVED, BOOLEAN, nullable), (ORCID, VARCHAR, nullable), (REDIRECT_URI, VARCHAR, nullable), (RESPONSE_TYPE, VARCHAR, nullable), (STATE, VARCHAR, nullable), (CLIENT_DETAILS_ID, VARCHAR, nullable), (SESSION_ID, VARCHAR, nullable), (IS_AUTHENTICATED, BOOLEAN, nullable), (DATE_CREATED, TIMESTAMP, nullable), (LAST_MODIFIED, TIMESTAMP, nullable), (PERSISTENT, BOOLEAN, nullable), (VERSION, BIGINT, nullable), (NONCE, VARCHAR, nullable)], pk=[(AUTHORIZIATION_CODE_VALUE, VARCHAR, noNulls)]) - start
operation.InsertOperation (InsertOperation.java:113) - getIgnoreMapping(table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_authoriziation_code_detail, columns=[(authoriziation_code_value, UNKNOWN, nullableUnknown), (is_aproved, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (session_id, UNKNOWN, nullableUnknown), (is_authenticated, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], row=0) - start
statement.PreparedStatementFactory (PreparedStatementFactory.java:66) - createPreparedBatchStatement(sql=insert into OAUTH2_AUTHORIZIATION_CODE_DETAIL (AUTHORIZIATION_CODE_VALUE, IS_APROVED, ORCID, REDIRECT_URI, RESPONSE_TYPE, STATE, CLIENT_DETAILS_ID, SESSION_ID, IS_AUTHENTICATED, DATE_CREATED, LAST_MODIFIED, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, <:*:> super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@69086b71, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a3fc762, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@5c9872b9, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, <:*:> <:*:> _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> into OAUTH2_AUTHORIZIATION_CODE_DETAIL (AUTHORIZIATION_CODE_VALUE, IS_APROVED, ORCID, REDIRECT_URI, RESPONSE_TYPE, STATE, CLIENT_DETAILS_ID, SESSION_ID, IS_AUTHENTICATED, DATE_CREATED, LAST_MODIFIED, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.BooleanDataType (BooleanDataType.java:143) - <:*:> <:*:> <:*:> into OAUTH2_AUTHORIZIATION_CODE_DETAIL (AUTHORIZIATION_CODE_VALUE, IS_APROVED, ORCID, REDIRECT_URI, RESPONSE_TYPE, STATE, CLIENT_DETAILS_ID, SESSION_ID, IS_AUTHENTICATED, DATE_CREATED, LAST_MODIFIED, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.TimestampDataType (TimestampDataType.java:145) - setSqlValue(value=2010-01-01, <:*:> <:*:> into OAUTH2_AUTHORIZIATION_CODE_DETAIL (AUTHORIZIATION_CODE_VALUE, IS_APROVED, ORCID, REDIRECT_URI, RESPONSE_TYPE, STATE, CLIENT_DETAILS_ID, SESSION_ID, IS_AUTHENTICATED, DATE_CREATED, LAST_MODIFIED, PERSISTENT) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)], <:*:> [true], [4444-4444-4444-4442], [http://www.4444-4444-4444-4442.com/redirect/oauth], [code], [], [4444-4444-4444-4442], [], [true], <:*:> <:*:> <:*:> - start
operation.InsertOperation (InsertOperation.java:134) - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.ReplacementTable[_strictReplacement=false, _table=org.dbunit.dataset.DefaultTable[_metaData=tableName=oauth2_authoriziation_code_detail, columns=[(authoriziation_code_value, UNKNOWN, nullableUnknown), (is_aproved, UNKNOWN, nullableUnknown), (orcid, UNKNOWN, nullableUnknown), (redirect_uri, UNKNOWN, nullableUnknown), (response_type, UNKNOWN, nullableUnknown), (state, UNKNOWN, nullableUnknown), (client_details_id, UNKNOWN, nullableUnknown), (session_id, UNKNOWN, nullableUnknown), (is_authenticated, UNKNOWN, nullableUnknown), (date_created, UNKNOWN, nullableUnknown), (last_modified, UNKNOWN, nullableUnknown), (persistent, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], _objectMap={}, _substringMap={}, _startDelim=null, _endDelim=null], <:*:> - start
io.FtpsFileDownloader (FtpsFileDownloader.java:65) - FTP download failed
io.FtpsFileDownloader (FtpsFileDownloader.java:69) - Error downloading file from FTP server
io.FtpsFileDownloader (FtpsFileDownloader.java:116) - FTP configuration:
io.OrgDataClient <:*:> - Unable to fetch file url: 403
impl.OrgLoadManagerImpl (OrgLoadManagerImpl.java:80) - No enabled org loader found for source name DISABLED
ringgold.RinggoldOrgLoadSource (RinggoldOrgLoadSource.java:255) - Couldn't find entity to be deleted with ringgold_id: '9'
ringgold.RinggoldOrgLoadSource (RinggoldOrgLoadSource.java:118) - Error importing RINGGOLD data
security.OrcidUserDetailsServiceImpl (OrcidUserDetailsServiceImpl.java:152) - User with orcid 0000-0000-0000-0000 have more than one primary email, so, we are setting the latest modified primary as the primary one
security.OrcidUserDetailsServiceImpl (OrcidUserDetailsServiceImpl.java:143) - User with orcid 0000-0000-0000-0000 have no primary email, so, we are setting the newest verified email, or, the newest email in case non is verified as the primary one
SpringJUnit4ClassRunner constructor called with [class org.orcid.core.SourceInActivitiesTest]
Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
Instantiating TestContextBootstrapper for test class [org.orcid.core.SourceInActivitiesTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[classpath:orcid-core-context.xml], classes=[], loader=interface org.springframework.test.context.ContextLoader, locations=[classpath:orcid-core-context.xml], inheritInitializers=true, initializers=[], inheritLocations=true)] for declaring class [org.orcid.core.BaseTest].
Resolved context configuration attributes: [ContextConfigurationAttributes@682b2fa declaringClass = 'org.orcid.core.BaseTest', classes = '{}', locations = '{classpath:orcid-core-context.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@682b2fa declaringClass = 'org.orcid.core.BaseTest', classes = '{}', locations = '{classpath:orcid-core-context.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [org.orcid.core.SourceInActivitiesTest]
Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@682b2fa declaringClass = 'org.orcid.core.BaseTest', classes = '{}', locations = '{classpath:orcid-core-context.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@682b2fa declaringClass = 'org.orcid.core.BaseTest', classes = '{}', locations = '{classpath:orcid-core-context.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
Processing context initializers for configuration attributes [ContextConfigurationAttributes@682b2fa declaringClass = 'org.orcid.core.BaseTest', classes = '{}', locations = '{classpath:orcid-core-context.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [org.orcid.core.SourceInActivitiesTest]
@TestExecutionListeners is not present for class [org.orcid.core.SourceInActivitiesTest]: using defaults.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@37271612, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@ed7f8b4, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4c309d4d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@38102d01, org.springframework.test.context.transaction.TransactionalTestExecutionListener@37883b97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ab778a]
Registering TestExecutionListener: <:*:>
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Urology & Nephrology, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Veterinary Sciences]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Science & Technology - Other , column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Social Issues]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Radiology, Nuclear Medicine & Medical Imaging, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Rehabilitation]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Public, Environmental & Occupational Health, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Radiology, Nuclear Medicine & Medical Imaging]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> & <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> & <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> & <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> <:*:> <:*:> <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Metallurgy & Metallurgical Engineering, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Meteorology & Atmospheric Sciences]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Mathematical & Computational Biology, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Mathematical Methods In Social Sciences]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Life Sciences & Biomedicine - Other , column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Linguistics]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Legal Medicine, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Life Sciences & Biomedicine - Other ]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Information Science & Library Science, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Instruments & Instrumentation]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=History & Philosophy of Science, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Imaging Science & Photographic Technology]]]) - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Government & Law, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Health Care Sciences & Services]]]) - start
datatype.StringDataType (StringDataType.java:157) - <:*:> & <:*:> <:*:> column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], <:*:> & <:*:> - start
datatype.StringDataType (StringDataType.java:157) - setSqlValue(value=Arts & Humanities - Other, column=1, statement=org.hsqldb.jdbc.JDBCPreparedStatement@601e2384[sql=[delete from SUBJECT where NAME = ?], parameters=[[Asian Studies]]]) - start
