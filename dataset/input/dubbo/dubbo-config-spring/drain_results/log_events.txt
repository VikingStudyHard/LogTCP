Initialized MockEnvironment with PropertySources []
Adding PropertySource <:*:> with lowest search precedence
Searching for key <:*:> in PropertySource <:*:>
Found key <:*:> in PropertySource <:*:> with value of type <:*:>
Resolved placeholder <:*:>
Field <:*:> has been removed from PropertyValues and will not be bound, because it has not been found in the list of allowed fields
SpringJUnit4ClassRunner constructor called with [class <:*:>
Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
Instantiating TestContextBootstrapper for test class <:*:> from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(locations=[], inheritInitializers=true, initializers=[], inheritLocations=true, name=, value=[], classes=[class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest], loader=interface org.springframework.test.context.ContextLoader)] for declaring class [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest].
Resolved context configuration attributes: [ContextConfigurationAttributes@1dc72380 declaringClass = 'com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@1dc72380 declaringClass = 'com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class <:*:>
Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@1dc72380 declaringClass = 'com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@1dc72380 declaringClass = 'com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
Loaded <:*:> names: <:*:>
Retrieved @TestPropertySource <:*:> = <:*:> <:*:> = <:*:> <:*:> = <:*:> locations=[], inheritProperties=true, inheritLocations=true, value=[])] for declaring class <:*:>
Resolved TestPropertySource attributes: <:*:> declaringClass = <:*:> locations = '{}', inheritLocations = true, properties = <:*:> = <:*:> <:*:> = <:*:> <:*:> = <:*:> inheritProperties = true]
Processing locations for TestPropertySource attributes <:*:> declaringClass = <:*:> locations = '{}', inheritLocations = true, properties = <:*:> = <:*:> <:*:> = <:*:> <:*:> = <:*:> inheritProperties = true]
Processing inlined properties for TestPropertySource attributes <:*:> declaringClass = <:*:> locations = '{}', inheritLocations = true, properties = <:*:> = <:*:> <:*:> = <:*:> <:*:> = <:*:> inheritProperties = true]
Processing <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> class <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class <:*:>
@TestExecutionListeners is not present for class <:*:> using defaults.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@31b0501a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2451c25, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@10481c77, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7bc1fd7e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@48c2429c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@624cdb95]
Registering TestExecutionListener: <:*:>
Retrieved @ProfileValueSourceConfiguration [null] for test class <:*:>
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class <:*:>
beforeTestClass(): class <:*:>
Before test class: context [DefaultTestContext@3237d80f testClass = DubboConfigBindingBeanPostProcessorTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4669e93a testClass = DubboConfigBindingBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{dubbo.application.id = dubbo-demo-application, dubbo.application.owner = mercyblitz, dubbo.application.organization = Apache}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
prepareTestInstance(): instance <:*:>
Performing dependency injection for test context [[DefaultTestContext@3237d80f testClass = DubboConfigBindingBeanPostProcessorTest, testInstance = com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest@1ce585c9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4669e93a testClass = DubboConfigBindingBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{dubbo.application.id = dubbo-demo-application, dubbo.application.owner = mercyblitz, dubbo.application.organization = Apache}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@4669e93a testClass = DubboConfigBindingBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{dubbo.application.id = dubbo-demo-application, dubbo.application.owner = mercyblitz, dubbo.application.organization = Apache}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@4669e93a testClass = DubboConfigBindingBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{dubbo.application.id = dubbo-demo-application, dubbo.application.owner = mercyblitz, dubbo.application.organization = Apache}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Initialized StandardEnvironment with PropertySources [MapPropertySource@<:NUM:> {name='systemProperties', properties={java.vendor=Oracle Corporation, localRepository=/root/.m2/repository, sun.java.launcher=SUN STANDARD, sun.management.compiler=HotSpot <:NUM:>-Bit Tiered Compilers, sun.nio.ch.bugLevel=, os.name=Linux, sun.boot.class.path=/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/resources.jar:/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/rt.jar:/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/sunrsasign.jar:/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/jsse.jar:/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/jce.jar:/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/charsets.jar:/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/jfr.jar:/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/classes, connections=, length=, onerror=, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=<:NUM:>.<:NUM:>.<:NUM:> <:NUM:>-b09, concurrent=, user.name=root, server=, transporter=, user.language=en, sun.boot.library.path=/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/amd64, serialization=, java.version=<:NUM:>.<:NUM:>.<:NUM:> <:NUM:>, user.timezone=Etc/GMT+<:NUM:>, java.net.preferIPv4Stack=true, sun.arch.data.model=<:NUM:>, base=, java.endorsed.dirs=/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/endorsed, sun.cpu.isalist=, port=, sun.jnu.encoding=ANSI X3.<:NUM:>-<:NUM:>, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=<:NUM:>.<:NUM:>, user.country=US, java.home=/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre, java.vm.info=mixed mode, os.version=<:NUM:>.<:NUM:>.<:NUM:>-<:NUM:>-generic, threadpool=, surefire.real.class.path=/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/surefire/surefirebooter1475772316410796326.jar:/root/.m2/repository/org/jacoco/org.jacoco.agent/<:NUM:>.<:NUM:>.<:NUM:>/org.jacoco.agent-<:NUM:>.<:NUM:>.<:NUM:>-runtime.jar, path.separator=:, java.vm.version=<:NUM:>.<:NUM:>-b09, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, sun.rmi.transport.tcp.responseTimeout=<:NUM:>, user.home=/root, java.specification.vendor=Oracle Corporation, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/surefire/surefirebooter1475772316410796326.jar /data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/surefire/surefire3126422979205770778tmp /data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/surefire/surefire 13528944985277064225tmp, java.class.path=/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes:/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/classes:/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-api/target/dubbo-config-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-common/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-common-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/commons-logging/commons-logging/<:NUM:>.<:NUM:>/commons-logging-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/javassist/javassist/<:NUM:>.<:NUM:>.<:NUM:>-GA/javassist-<:NUM:>.<:NUM:>.<:NUM:>-GA.jar:/root/.m2/repository/com/alibaba/fastjson/<:NUM:>.<:NUM:>.<:NUM:>/fastjson-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/esotericsoftware/kryo/<:NUM:>.<:NUM:>.<:NUM:>/kryo-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/esotericsoftware/reflectasm/<:NUM:>.<:NUM:>.<:NUM:>/reflectasm-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/ow2/asm/asm/<:NUM:>.<:NUM:>.<:NUM:>/asm-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/esotericsoftware/minlog/<:NUM:>.<:NUM:>.<:NUM:>/minlog-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/de/javakaffee/kryo-serializers/<:NUM:>.<:NUM:>/kryo-serializers-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/de/ruedigermoeller/fst/<:NUM:>.<:NUM:>-jdk-<:NUM:>/fst-<:NUM:>.<:NUM:>-jdk-<:NUM:>.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/<:NUM:>.<:NUM:>.<:NUM:>/jackson-core-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/cedarsoftware/java-util/<:NUM:>.<:NUM:>.<:NUM:>/java-util-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/cedarsoftware/json-io/<:NUM:>.<:NUM:>.<:NUM:>/json-io-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-registry-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-registry-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-cluster/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-cluster-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-monitor-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-monitor-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-remoting-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-remoting-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-filter-validation/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-filter-validation-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-filter-cache/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-filter-cache-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/javax/cache/cache-api/<:NUM:>.<:NUM:>.<:NUM:>/cache-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/springframework/spring-beans/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-beans-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-core-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-web-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-aop-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-context-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-expression-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/<:NUM:>.<:NUM:>.<:NUM:>/javax.servlet-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/io/netty/netty-all/<:NUM:>.<:NUM:>.<:NUM:>.Final/netty-all-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-jaxrs/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-jaxrs-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/spec/javax/ws/rs/jboss-jaxrs-api <:NUM:>.<:NUM:> spec/<:NUM:>.<:NUM:>.<:NUM:>.Final/jboss-jaxrs-api <:NUM:>.<:NUM:> spec-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api <:NUM:>.<:NUM:> spec/<:NUM:>.<:NUM:>.<:NUM:>.Final/jboss-annotations-api <:NUM:>.<:NUM:> spec-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/javax/activation/activation/<:NUM:>.<:NUM:>.<:NUM:>/activation-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/httpcomponents/httpclient/<:NUM:>.<:NUM:>.<:NUM:>/httpclient-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/httpcomponents/httpcore/<:NUM:>.<:NUM:>.<:NUM:>/httpcore-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/commons-codec/commons-codec/<:NUM:>.<:NUM:>/commons-codec-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/commons-io/commons-io/<:NUM:>.<:NUM:>/commons-io-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/net/jcip/jcip-annotations/<:NUM:>.<:NUM:>/jcip-annotations-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/jboss/logging/jboss-logging/<:NUM:>.<:NUM:>.<:NUM:>.GA/jboss-logging-<:NUM:>.<:NUM:>.<:NUM:>.GA.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-client/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-client-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-netty4/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-netty4-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/javax/validation/validation-api/<:NUM:>.<:NUM:>.<:NUM:>.Final/validation-api-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-jackson-provider/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-jackson-provider-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/<:NUM:>.<:NUM:>.<:NUM:>/jackson-core-asl-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/<:NUM:>.<:NUM:>.<:NUM:>/jackson-mapper-asl-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/codehaus/jackson/jackson-jaxrs/<:NUM:>.<:NUM:>.<:NUM:>/jackson-jaxrs-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/codehaus/jackson/jackson-xc/<:NUM:>.<:NUM:>.<:NUM:>/jackson-xc-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-jaxb-provider/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-jaxb-provider-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/com/sun/xml/bind/jaxb-impl/<:NUM:>.<:NUM:>.<:NUM:>/jaxb-impl-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/sun/xml/bind/jaxb-core/<:NUM:>.<:NUM:>.<:NUM:>/jaxb-core-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/javax/xml/bind/jaxb-api/<:NUM:>.<:NUM:>.<:NUM:>/jaxb-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/sun/istack/istack-commons-runtime/<:NUM:>.<:NUM:>/istack-commons-runtime-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/<:NUM:>.<:NUM:>.<:NUM:>/FastInfoset-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/javax/xml/bind/jsr173 api/<:NUM:>.<:NUM:>/jsr173 api-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-registry-default/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-registry-default-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-registry-zookeeper/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-registry-zookeeper-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-remoting-zookeeper/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-remoting-zookeeper-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/101tec/zkclient/<:NUM:>.<:NUM:>/zkclient-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-monitor-default/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-monitor-default-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-dubbo/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-dubbo-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-container-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-container-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-rest/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-rest-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-remoting-http/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-remoting-http-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/mortbay/jetty/jetty/<:NUM:>.<:NUM:>.<:NUM:>/jetty-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/mortbay/jetty/jetty-util/<:NUM:>.<:NUM:>.<:NUM:>/jetty-util-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-jdk-http/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-jdk-http-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-rmi/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-rmi-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-injvm/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-injvm-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-remoting-netty4/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-remoting-netty4-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-serialization-hessian2/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-serialization-hessian2-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-serialization-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-serialization-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/hessian-lite/<:NUM:>.<:NUM:>.<:NUM:>/hessian-lite-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/hibernate/hibernate-validator/<:NUM:>.<:NUM:>.<:NUM:>.Final/hibernate-validator-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/com/fasterxml/classmate/<:NUM:>.<:NUM:>.<:NUM:>/classmate-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/glassfish/javax.el/<:NUM:>.<:NUM:>.<:NUM:>-b08/javax.el-<:NUM:>.<:NUM:>.<:NUM:>-b08.jar:/root/.m2/repository/org/springframework/spring-tx/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-tx-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-test/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-test-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/<:NUM:>.<:NUM:>.<:NUM:>/tomcat-embed-core-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/tomcat/tomcat-annotations-api/<:NUM:>.<:NUM:>.<:NUM:>/tomcat-annotations-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/yaml/snakeyaml/<:NUM:>.<:NUM:>/snakeyaml-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/zookeeper/zookeeper/<:NUM:>.<:NUM:>.<:NUM:>/zookeeper-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/slf4j/slf4j-api/<:NUM:>.<:NUM:>.<:NUM:>/slf4j-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/<:NUM:>.<:NUM:>.<:NUM:>/slf4j-log4j12-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/log4j/log4j/<:NUM:>.<:NUM:>.<:NUM:>/log4j-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/jline/jline/<:NUM:>.<:NUM:>.<:NUM:>/jline-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/io/netty/netty/<:NUM:>.<:NUM:>.<:NUM:>.Final/netty-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/apache/curator/curator-framework/<:NUM:>.<:NUM:>.<:NUM:>/curator-framework-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/curator/curator-client/<:NUM:>.<:NUM:>.<:NUM:>/curator-client-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/google/guava/guava/<:NUM:>.<:NUM:>.<:NUM:>/guava-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/junit/junit/<:NUM:>.<:NUM:>/junit-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/<:NUM:>.<:NUM:>/hamcrest-core-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/hamcrest/hamcrest-all/<:NUM:>.<:NUM:>/hamcrest-all-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/mockito/mockito-core/<:NUM:>.<:NUM:>.<:NUM:>/mockito-core-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/net/bytebuddy/byte-buddy/<:NUM:>.<:NUM:>.<:NUM:>/byte-buddy-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/net/bytebuddy/byte-buddy-agent/<:NUM:>.<:NUM:>.<:NUM:>/byte-buddy-agent-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/objenesis/objenesis/<:NUM:>.<:NUM:>/objenesis-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/cglib/cglib-nodep/<:NUM:>.<:NUM:>/cglib-nodep-<:NUM:>.<:NUM:>.jar:, timeout=, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=<:NUM:>.<:NUM:>, sun.cpu.endian=little, sun.os.patch.level=unknown, surefire.test.class.path=/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes:/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/classes:/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-api/target/dubbo-config-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-common/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-common-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/commons-logging/commons-logging/<:NUM:>.<:NUM:>/commons-logging-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/javassist/javassist/<:NUM:>.<:NUM:>.<:NUM:>-GA/javassist-<:NUM:>.<:NUM:>.<:NUM:>-GA.jar:/root/.m2/repository/com/alibaba/fastjson/<:NUM:>.<:NUM:>.<:NUM:>/fastjson-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/esotericsoftware/kryo/<:NUM:>.<:NUM:>.<:NUM:>/kryo-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/esotericsoftware/reflectasm/<:NUM:>.<:NUM:>.<:NUM:>/reflectasm-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/ow2/asm/asm/<:NUM:>.<:NUM:>.<:NUM:>/asm-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/esotericsoftware/minlog/<:NUM:>.<:NUM:>.<:NUM:>/minlog-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/de/javakaffee/kryo-serializers/<:NUM:>.<:NUM:>/kryo-serializers-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/de/ruedigermoeller/fst/<:NUM:>.<:NUM:>-jdk-<:NUM:>/fst-<:NUM:>.<:NUM:>-jdk-<:NUM:>.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/<:NUM:>.<:NUM:>.<:NUM:>/jackson-core-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/cedarsoftware/java-util/<:NUM:>.<:NUM:>.<:NUM:>/java-util-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/cedarsoftware/json-io/<:NUM:>.<:NUM:>.<:NUM:>/json-io-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-registry-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-registry-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-cluster/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-cluster-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-monitor-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-monitor-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-remoting-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-remoting-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-filter-validation/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-filter-validation-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-filter-cache/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-filter-cache-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/javax/cache/cache-api/<:NUM:>.<:NUM:>.<:NUM:>/cache-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/springframework/spring-beans/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-beans-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-core-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-web-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-aop-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-context-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-expression-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/<:NUM:>.<:NUM:>.<:NUM:>/javax.servlet-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/io/netty/netty-all/<:NUM:>.<:NUM:>.<:NUM:>.Final/netty-all-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-jaxrs/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-jaxrs-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/spec/javax/ws/rs/jboss-jaxrs-api <:NUM:>.<:NUM:> spec/<:NUM:>.<:NUM:>.<:NUM:>.Final/jboss-jaxrs-api <:NUM:>.<:NUM:> spec-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api <:NUM:>.<:NUM:> spec/<:NUM:>.<:NUM:>.<:NUM:>.Final/jboss-annotations-api <:NUM:>.<:NUM:> spec-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/javax/activation/activation/<:NUM:>.<:NUM:>.<:NUM:>/activation-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/httpcomponents/httpclient/<:NUM:>.<:NUM:>.<:NUM:>/httpclient-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/httpcomponents/httpcore/<:NUM:>.<:NUM:>.<:NUM:>/httpcore-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/commons-codec/commons-codec/<:NUM:>.<:NUM:>/commons-codec-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/commons-io/commons-io/<:NUM:>.<:NUM:>/commons-io-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/net/jcip/jcip-annotations/<:NUM:>.<:NUM:>/jcip-annotations-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/jboss/logging/jboss-logging/<:NUM:>.<:NUM:>.<:NUM:>.GA/jboss-logging-<:NUM:>.<:NUM:>.<:NUM:>.GA.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-client/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-client-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-netty4/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-netty4-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/javax/validation/validation-api/<:NUM:>.<:NUM:>.<:NUM:>.Final/validation-api-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-jackson-provider/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-jackson-provider-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/<:NUM:>.<:NUM:>.<:NUM:>/jackson-core-asl-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/<:NUM:>.<:NUM:>.<:NUM:>/jackson-mapper-asl-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/codehaus/jackson/jackson-jaxrs/<:NUM:>.<:NUM:>.<:NUM:>/jackson-jaxrs-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/codehaus/jackson/jackson-xc/<:NUM:>.<:NUM:>.<:NUM:>/jackson-xc-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-jaxb-provider/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-jaxb-provider-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/com/sun/xml/bind/jaxb-impl/<:NUM:>.<:NUM:>.<:NUM:>/jaxb-impl-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/sun/xml/bind/jaxb-core/<:NUM:>.<:NUM:>.<:NUM:>/jaxb-core-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/javax/xml/bind/jaxb-api/<:NUM:>.<:NUM:>.<:NUM:>/jaxb-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/sun/istack/istack-commons-runtime/<:NUM:>.<:NUM:>/istack-commons-runtime-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/<:NUM:>.<:NUM:>.<:NUM:>/FastInfoset-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/javax/xml/bind/jsr173 api/<:NUM:>.<:NUM:>/jsr173 api-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-registry-default/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-registry-default-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-registry-zookeeper/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-registry-zookeeper-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-remoting-zookeeper/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-remoting-zookeeper-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/101tec/zkclient/<:NUM:>.<:NUM:>/zkclient-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-monitor-default/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-monitor-default-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-dubbo/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-dubbo-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-container-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-container-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-rest/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-rest-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-remoting-http/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-remoting-http-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/mortbay/jetty/jetty/<:NUM:>.<:NUM:>.<:NUM:>/jetty-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/mortbay/jetty/jetty-util/<:NUM:>.<:NUM:>.<:NUM:>/jetty-util-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/jboss/resteasy/resteasy-jdk-http/<:NUM:>.<:NUM:>.<:NUM:>.Final/resteasy-jdk-http-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-rmi/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-rmi-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-rpc-injvm/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-rpc-injvm-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-remoting-netty4/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-remoting-netty4-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-serialization-hessian2/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-serialization-hessian2-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/dubbo-serialization-api/<:NUM:>.<:NUM:>.<:NUM:>/dubbo-serialization-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/alibaba/hessian-lite/<:NUM:>.<:NUM:>.<:NUM:>/hessian-lite-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/hibernate/hibernate-validator/<:NUM:>.<:NUM:>.<:NUM:>.Final/hibernate-validator-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/com/fasterxml/classmate/<:NUM:>.<:NUM:>.<:NUM:>/classmate-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/glassfish/javax.el/<:NUM:>.<:NUM:>.<:NUM:>-b08/javax.el-<:NUM:>.<:NUM:>.<:NUM:>-b08.jar:/root/.m2/repository/org/springframework/spring-tx/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-tx-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/springframework/spring-test/<:NUM:>.<:NUM:>.<:NUM:>.RELEASE/spring-test-<:NUM:>.<:NUM:>.<:NUM:>.RELEASE.jar:/root/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/<:NUM:>.<:NUM:>.<:NUM:>/tomcat-embed-core-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/tomcat/tomcat-annotations-api/<:NUM:>.<:NUM:>.<:NUM:>/tomcat-annotations-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/yaml/snakeyaml/<:NUM:>.<:NUM:>/snakeyaml-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/zookeeper/zookeeper/<:NUM:>.<:NUM:>.<:NUM:>/zookeeper-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/slf4j/slf4j-api/<:NUM:>.<:NUM:>.<:NUM:>/slf4j-api-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/<:NUM:>.<:NUM:>.<:NUM:>/slf4j-log4j12-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/log4j/log4j/<:NUM:>.<:NUM:>.<:NUM:>/log4j-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/jline/jline/<:NUM:>.<:NUM:>.<:NUM:>/jline-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/io/netty/netty/<:NUM:>.<:NUM:>.<:NUM:>.Final/netty-<:NUM:>.<:NUM:>.<:NUM:>.Final.jar:/root/.m2/repository/org/apache/curator/curator-framework/<:NUM:>.<:NUM:>.<:NUM:>/curator-framework-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/apache/curator/curator-client/<:NUM:>.<:NUM:>.<:NUM:>/curator-client-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/com/google/guava/guava/<:NUM:>.<:NUM:>.<:NUM:>/guava-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/junit/junit/<:NUM:>.<:NUM:>/junit-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/<:NUM:>.<:NUM:>/hamcrest-core-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/hamcrest/hamcrest-all/<:NUM:>.<:NUM:>/hamcrest-all-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/mockito/mockito-core/<:NUM:>.<:NUM:>.<:NUM:>/mockito-core-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/net/bytebuddy/byte-buddy/<:NUM:>.<:NUM:>.<:NUM:>/byte-buddy-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/net/bytebuddy/byte-buddy-agent/<:NUM:>.<:NUM:>.<:NUM:>/byte-buddy-agent-<:NUM:>.<:NUM:>.<:NUM:>.jar:/root/.m2/repository/org/objenesis/objenesis/<:NUM:>.<:NUM:>/objenesis-<:NUM:>.<:NUM:>.jar:/root/.m2/repository/cglib/cglib-nodep/<:NUM:>.<:NUM:>/cglib-nodep-<:NUM:>.<:NUM:>.jar:, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, iothreads=, threads=, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring, line.separator=
Adding inlined properties to environment: <:*:> = <:*:> <:*:> = <:*:> <:*:> = <:*:>
Adding PropertySource 'Inlined Test Properties' with <:*:> search precedence
Registering annotated classes: {class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}
Refreshing <:*:> startup date [Tue Aug <:NUM:> <:NUM:>:<:NUM:>:<:NUM:> GMT-<:NUM:>:<:NUM:> <:NUM:>]; root of context hierarchy
Bean factory for <:*:> <:*:> defining beans <:*:> root of factory hierarchy
Creating shared instance of singleton bean <:*:>
Creating instance of bean <:*:>
Eagerly caching bean <:*:> to allow for resolving potential circular references
Finished creating instance of bean <:*:>
Registering bean definition for @Bean method <:*:>
Getting BeanInfo for class <:*:>
Caching PropertyDescriptors for class <:*:>
Found bean property <:*:> of type <:*:>
Registered injected element on class <:*:> <:*:> for <:*:> <:*:> <:*:>
Processing injected element of bean <:*:> <:*:> for <:*:> <:*:> <:*:>
Autowiring by type from bean name <:*:> to bean named <:*:>
Bean <:*:> of type <:*:> is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Invoking <:*:> on bean with name <:*:>
Unable to locate <:*:> with name <:*:> using default <:*:>
Pre-instantiating singletons in <:*:> defining beans <:*:> root of factory hierarchy
Returning cached instance of singleton bean <:*:>
Initialized with PropertySources []
The properties of bean [name : <:*:> have been binding by prefix of configuration properties : <:*:>
No @EventListener annotations found on bean class: <:*:>
[DUBBO] <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
Publishing event in <:*:> <:*:> startup date [Tue Aug <:NUM:> <:NUM:>:<:NUM:>:<:NUM:> GMT-<:NUM:>:<:NUM:> <:NUM:>]; root of context hierarchy]
Searching for key <:*:> in PropertySource 'Inlined Test Properties'
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
Storing ApplicationContext in cache under key [[MergedContextConfiguration@4669e93a testClass = DubboConfigBindingBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{dubbo.application.id = dubbo-demo-application, dubbo.application.owner = mercyblitz, dubbo.application.organization = Apache}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
Spring test ApplicationContext cache statistics: [DefaultContextCache@3e9fd11f size = <:NUM:>, maxSize = <:NUM:>, parentContextCount = <:NUM:>, hitCount = <:NUM:>, missCount = <:NUM:>]
beforeTestMethod(): instance <:*:> method [public void <:*:>
Before test method: context [DefaultTestContext@3237d80f testClass = DubboConfigBindingBeanPostProcessorTest, testInstance = com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest@1ce585c9, testMethod = test@DubboConfigBindingBeanPostProcessorTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4669e93a testClass = DubboConfigBindingBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{dubbo.application.id = dubbo-demo-application, dubbo.application.owner = mercyblitz, dubbo.application.organization = Apache}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
afterTestMethod(): instance <:*:> method [public void <:*:> exception [null]
After test method: context [DefaultTestContext@3237d80f testClass = DubboConfigBindingBeanPostProcessorTest, testInstance = com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest@1ce585c9, testMethod = test@DubboConfigBindingBeanPostProcessorTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4669e93a testClass = DubboConfigBindingBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{dubbo.application.id = dubbo-demo-application, dubbo.application.owner = mercyblitz, dubbo.application.organization = Apache}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
afterTestClass(): class <:*:>
After test class: context [DefaultTestContext@3237d80f testClass = DubboConfigBindingBeanPostProcessorTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4669e93a testClass = DubboConfigBindingBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinder, class com.alibaba.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer, class com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{dubbo.application.id = dubbo-demo-application, dubbo.application.owner = mercyblitz, dubbo.application.organization = Apache}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(locations=[], inheritInitializers=true, initializers=[], inheritLocations=true, name=, value=[], classes=[class <:*:> class <:*:> loader=interface org.springframework.test.context.ContextLoader)] for declaring class <:*:>
Resolved context configuration attributes: <:*:> declaringClass = <:*:> classes = '{class <:*:> class <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Resolving ContextLoader for context configuration attributes <:*:> declaringClass = <:*:> classes = '{class <:*:> class <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Delegating to AnnotationConfigContextLoader to process context configuration <:*:> declaringClass = <:*:> classes = '{class <:*:> class <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
Processing <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@8f65a66, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7dd12c34, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5d76140f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@<:NUM:>, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6e6852c5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1a2c73b0]
Before test <:*:> context <:*:> testClass = <:*:> testInstance = <:*:> testMethod = <:*:> testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> = <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> annotated with @DirtiesContext [false] with mode [null].
Performing dependency injection for test context [[DefaultTestContext@7797ca96 testClass = ReferenceAnnotationBeanPostProcessorTest, testInstance = <:*:> testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb6b61c testClass = ReferenceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{packagesToScan = com.alibaba.dubbo.config.spring.context.annotation.provider, consumer.version = ${demo.service.version}, consumer.url = dubbo://<:IP:>:<:NUM:>}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@1bb6b61c testClass = ReferenceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{packagesToScan = com.alibaba.dubbo.config.spring.context.annotation.provider, consumer.version = ${demo.service.version}, consumer.url = dubbo://<:IP:>:<:NUM:>}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1bb6b61c testClass = ReferenceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{packagesToScan = com.alibaba.dubbo.config.spring.context.annotation.provider, consumer.version = ${demo.service.version}, consumer.url = dubbo://<:IP:>:<:NUM:>}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Registering annotated classes: {class <:*:> class <:*:>
Adding PropertySource 'class path resource <:*:> with <:*:> search precedence
Converting String to <:*:> <:*:> using property editor <:*:>
Found key <:*:> in PropertySource 'Inlined Test Properties' with value of type String
[DUBBO] <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
[DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
Resolved classpath location <:*:> to resources [URL <:*:>
Looking for matching resources in directory tree <:*:>
Searching directory <:*:> for files matching pattern <:*:>
Resolved location pattern [classpath*:com/alibaba/dubbo/config/spring/context/annotation/provider/**/*.class] to resources [file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/provider/DefaultHelloService.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/provider/DemoServiceImpl.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/provider/HelloServiceImpl.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/provider/ProviderConfiguration$<:NUM:>.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/provider/ProviderConfiguration.class]]
Scanning file <:*:>
Identified candidate component class: file <:*:>
Ignored because not matching any filter: file <:*:>
[DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=<:NUM:>; dependencyCheck=<:NUM:>; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : <:*:> dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
Searching for key <:*:> in PropertySource 'class path resource <:*:>
Found key <:*:> in PropertySource 'class path resource <:*:> with value of type String
[DUBBO] The Duplicated BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=<:NUM:>; dependencyCheck=<:NUM:>; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean[ bean name : <:*:> was be found , Did @DubboComponentScan scan to same package in many times?, dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
[DUBBO] <:NUM:> annotated Dubbo's @Service Components { [Bean definition with name 'defaultHelloService': Generic bean: class [com.alibaba.dubbo.config.spring.context.annotation.provider.DefaultHelloService]; scope=; abstract=false; lazyInit=false; autowireMode=<:NUM:>; dependencyCheck=<:NUM:>; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/provider/DefaultHelloService.class], Bean definition with name 'demoServiceImpl': Generic bean: class [com.alibaba.dubbo.config.spring.context.annotation.provider.DemoServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=<:NUM:>; dependencyCheck=<:NUM:>; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/provider/DemoServiceImpl.class], Bean definition with name 'helloServiceImpl': Generic bean: class [com.alibaba.dubbo.config.spring.context.annotation.provider.HelloServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=<:NUM:>; dependencyCheck=<:NUM:>; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/provider/HelloServiceImpl.class]] } were scanned under package[com.alibaba.dubbo.config.spring.context.annotation.provider], dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
The bean[type:ReferenceBean] has been built.
[DUBBO] <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
[DUBBO] <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
Publishing event in <:*:> com.alibaba.dubbo.config.spring.context.event.ServiceBeanExportedEvent[source=<dubbo:service <:*:> generic="false" <:*:> <:*:> exported="true" unexported="false" <:*:> <:*:> <:*:> />]
Publishing event in <:*:> com.alibaba.dubbo.config.spring.context.event.ServiceBeanExportedEvent[source=<dubbo:service <:*:> <:*:> generic="false" interface="com.alibaba.dubbo.config.spring.api.DemoService" <:*:> exported="true" unexported="false" path="com.alibaba.dubbo.config.spring.api.DemoService" <:*:> <:*:> />]
[DUBBO] Already register the same consumer:com.alibaba.dubbo.config.spring.api.DemoService:<:NUM:>.<:NUM:>.<:NUM:>, dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
Storing ApplicationContext in cache under key [[MergedContextConfiguration@1bb6b61c testClass = ReferenceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{packagesToScan = com.alibaba.dubbo.config.spring.context.annotation.provider, consumer.version = ${demo.service.version}, consumer.url = dubbo://<:IP:>:<:NUM:>}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
Before test method: context [DefaultTestContext@7797ca96 testClass = ReferenceAnnotationBeanPostProcessorTest, testInstance = <:*:> testMethod = <:*:> testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb6b61c testClass = ReferenceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{packagesToScan = com.alibaba.dubbo.config.spring.context.annotation.provider, consumer.version = ${demo.service.version}, consumer.url = dubbo://<:IP:>:<:NUM:>}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
After test method: context [DefaultTestContext@7797ca96 testClass = ReferenceAnnotationBeanPostProcessorTest, testInstance = <:*:> testMethod = <:*:> testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb6b61c testClass = ReferenceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{packagesToScan = com.alibaba.dubbo.config.spring.context.annotation.provider, consumer.version = ${demo.service.version}, consumer.url = dubbo://<:IP:>:<:NUM:>}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1bb6b61c testClass = ReferenceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{packagesToScan = com.alibaba.dubbo.config.spring.context.annotation.provider, consumer.version = ${demo.service.version}, consumer.url = dubbo://<:IP:>:<:NUM:>}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
beforeTestMethod(): instance <:*:> method [public void <:*:> throws java.lang.Exception]
[DUBBO] <:*:> <:*:> <:*:> <:*:> dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
afterTestMethod(): instance <:*:> method [public void <:*:> throws java.lang.Exception], exception [null]
After test <:*:> context <:*:> testClass = <:*:> testInstance = <:*:> testMethod = <:*:> testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> = <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> annotated with @DirtiesContext [false] with mode [null].
Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(locations=[], inheritInitializers=true, initializers=[], inheritLocations=true, name=, value=[], classes=[class <:*:> loader=interface org.springframework.test.context.ContextLoader)] for declaring class <:*:>
Resolved context configuration attributes: <:*:> declaringClass = <:*:> classes = '{class <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Resolving ContextLoader for context configuration attributes <:*:> declaringClass = <:*:> classes = '{class <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Delegating to AnnotationConfigContextLoader to process context configuration <:*:> declaringClass = <:*:> classes = '{class <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
Processing context initializers for configuration attributes <:*:> declaringClass = <:*:> classes = '{class <:*:> locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@174af948, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1287f07e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7f4fbfb9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@11bc8a1a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@517ca1dc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c55bf8d]
Before test class: context <:*:> testClass = <:*:> testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
Performing dependency injection for test context <:*:> testClass = <:*:> testInstance = <:*:> testMethod = [null], testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
Delegating to AnnotationConfigContextLoader to load context from <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
Loading ApplicationContext for merged context configuration <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Registering annotated classes: {class <:*:>
Storing ApplicationContext in cache under key <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
Before test method: context <:*:> testClass = <:*:> testInstance = <:*:> testMethod = <:*:> testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
Converting String array to comma-delimited String <:*:>
After test method: context <:*:> testClass = <:*:> testInstance = <:*:> testMethod = <:*:> testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
After test class: context <:*:> testClass = <:*:> testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
Retrieved @TestPropertySource [@org.springframework.test.context.TestPropertySource(properties=[provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}], locations=[], inheritProperties=true, inheritLocations=true, value=[])] for declaring class [com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest].
Resolved TestPropertySource attributes: [TestPropertySourceAttributes@249887c3 declaringClass = 'com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest', locations = '{}', inheritLocations = true, properties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', inheritProperties = true]
Processing locations for TestPropertySource attributes [TestPropertySourceAttributes@249887c3 declaringClass = 'com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest', locations = '{}', inheritLocations = true, properties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', inheritProperties = true]
Processing inlined properties for TestPropertySource attributes [TestPropertySourceAttributes@249887c3 declaringClass = 'com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest', locations = '{}', inheritLocations = true, properties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', inheritProperties = true]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@35efb878, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@43e49626, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1e1f808c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4f45a09c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7a1ed74, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@60931e00]
Before test class: context [DefaultTestContext@26ae97e testClass = ServiceAnnotationBeanPostProcessorTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60c9f8ef testClass = ServiceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
Performing dependency injection for test context [[DefaultTestContext@26ae97e testClass = ServiceAnnotationBeanPostProcessorTest, testInstance = com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest@680b73cf, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60c9f8ef testClass = ServiceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@60c9f8ef testClass = ServiceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@60c9f8ef testClass = ServiceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Adding inlined properties to environment: {provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}
Storing ApplicationContext in cache under key [[MergedContextConfiguration@60c9f8ef testClass = ServiceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
Before test method: context [DefaultTestContext@26ae97e testClass = ServiceAnnotationBeanPostProcessorTest, testInstance = com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest@680b73cf, testMethod = test@ServiceAnnotationBeanPostProcessorTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60c9f8ef testClass = ServiceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
After test method: context [DefaultTestContext@26ae97e testClass = ServiceAnnotationBeanPostProcessorTest, testInstance = com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest@680b73cf, testMethod = test@ServiceAnnotationBeanPostProcessorTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60c9f8ef testClass = ServiceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
After test class: context [DefaultTestContext@26ae97e testClass = ServiceAnnotationBeanPostProcessorTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60c9f8ef testClass = ServiceAnnotationBeanPostProcessorTest, locations = '{}', classes = '{class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationTestConfiguration, class com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{provider.package = com.alibaba.dubbo.config.spring.context.annotation.provider, packagesToScan = ${provider.package}}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33176d2e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ac9dc56, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3ff0cbf1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@44a065f7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4c560e50, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@487950e0]
Loading from YAML: class path resource [META-INF/dubbo.yml]
Merging document (no matchers set): {dubbo={consumer={default=false, client=netty, threadpool=cached, corethreads=<:NUM:>, threads=<:NUM:>, queues=<:NUM:>}}}
Loaded <:NUM:> document from YAML resource: class path resource [META-INF/dubbo.yml]
Successfully enhanced <:*:> enhanced class name is: <:*:>
Replacing bean definition <:*:> existing class <:*:> with enhanced class <:*:>
JSR-<:NUM:> 'javax.annotation.ManagedBean' found and supported for component scanning
Registered bean definition for imported class <:*:>
Did not attempt to auto-proxy infrastructure class <:*:>
Registered injected element on class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee79c100]: AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
Processing injected element of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method <:*:> with attribute: PROPAGATION REQUIRED,ISOLATION DEFAULT; ''
Creating implicit proxy for bean 'demoServiceImpl' with <:NUM:> common interceptors and <:NUM:> specific interceptors
Creating JDK dynamic proxy: target source is SingletonTargetSource for target object <:*:>
Getting transaction for <:*:>
Resolved location pattern [classpath*:com/alibaba/dubbo/config/spring/context/annotation/consumer/**/*.class] to resources [file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/ConsumerConfiguration$Ancestor.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/ConsumerConfiguration$Child.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/ConsumerConfiguration$Parent.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/ConsumerConfiguration.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration$Ancestor.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration$Child.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration$Parent.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration.class]]
Returning eagerly cached instance of singleton bean 'consumerConfiguration' that is not fully initialized yet - a consequence of a circular reference
Closing <:*:> startup date [Tue Aug <:NUM:> <:NUM:>:<:NUM:>:<:NUM:> GMT-<:NUM:>:<:NUM:> <:NUM:>]; root of context hierarchy
Destroying singletons in <:*:> defining beans <:*:> root of factory hierarchy
class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
<:*:> was destroying!
[DUBBO] Got unchecked and undeclared exception which called by <:IP:>. service: com.alibaba.dubbo.config.spring.api.DemoService, method: getBox, exception: java.lang.UnsupportedOperationException: For Purposes!, dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
Initialized StandardEnvironment with PropertySources [MapPropertySource@<:NUM:> {name='systemProperties', properties={threadpool=, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/amd64, java.vm.version=<:NUM:>.<:NUM:>-b09, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, runs=, path.separator=:, serialization=, threads=, java.vm.name=Java HotSpot(TM) <:NUM:>-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN STANDARD, sun.os.patch.level=unknown, transporter=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring, java.runtime.version=<:NUM:>.<:NUM:>.<:NUM:> <:NUM:>-b09, basedir=/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/local/jdk1.<:NUM:>.<:NUM:> <:NUM:>/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/surefire/surefirebooter1475772316410796326.jar:/root/.m2/repository/org/jacoco/org.jacoco.agent/<:NUM:>.<:NUM:>.<:NUM:>/org.jacoco.agent-<:NUM:>.<:NUM:>.<:NUM:>-runtime.jar, java.io.tmpdir=/tmp, line.separator=
The dubbo config bean definition [name : <:*:> class : <:*:> has been registered.
The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : <:*:> has been registered.
DubboConfigBinder Bean can't be found in ApplicationContext.
There is no property for binding to dubbo config class <:*:> within prefix <:*:>
DefaultListableBeanFactory will register annotated classes : [class <:*:> .
Retrieved @TestPropertySource [@org.springframework.test.context.TestPropertySource(properties=[demo.service.version = <:NUM:>.<:NUM:>.<:NUM:>], locations=[classpath:/META-INF/dubbb-provider.properties], inheritProperties=true, inheritLocations=true, value=[classpath:/META-INF/dubbb-provider.properties])] for declaring class [com.alibaba.dubbo.config.spring.context.annotation.EnableDubboTest].
Resolved TestPropertySource attributes: [TestPropertySourceAttributes@44d7ea06 declaringClass = 'com.alibaba.dubbo.config.spring.context.annotation.EnableDubboTest', locations = '{classpath:/META-INF/dubbb-provider.properties}', inheritLocations = true, properties = '{demo.service.version = <:NUM:>.<:NUM:>.<:NUM:>}', inheritProperties = true]
Processing locations for TestPropertySource attributes [TestPropertySourceAttributes@44d7ea06 declaringClass = 'com.alibaba.dubbo.config.spring.context.annotation.EnableDubboTest', locations = '{classpath:/META-INF/dubbb-provider.properties}', inheritLocations = true, properties = '{demo.service.version = <:NUM:>.<:NUM:>.<:NUM:>}', inheritProperties = true]
Processing inlined properties for TestPropertySource attributes [TestPropertySourceAttributes@44d7ea06 declaringClass = 'com.alibaba.dubbo.config.spring.context.annotation.EnableDubboTest', locations = '{classpath:/META-INF/dubbb-provider.properties}', inheritLocations = true, properties = '{demo.service.version = <:NUM:>.<:NUM:>.<:NUM:>}', inheritProperties = true]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7cce8f93, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@39093a4a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6bbced25, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3b5811d3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3362b33c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@<:NUM:>]
Before test class: context [DefaultTestContext@<:NUM:> testClass = <:*:> testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> = <:*:> contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
Performing dependency injection for test context [[DefaultTestContext@<:NUM:> testClass = <:*:> testInstance = <:*:> testMethod = [null], testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> = <:*:> contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
Delegating to AnnotationConfigContextLoader to load context from <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> = <:*:> contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
Loading ApplicationContext for merged context configuration <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> = <:*:> contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Adding inlined properties to environment: {demo.service.version = <:NUM:>.<:NUM:>.<:NUM:>}
Overriding bean definition for bean <:*:> with an equivalent definition: replacing [Generic bean: class <:*:> scope=singleton; abstract=false; lazyInit=false; autowireMode=<:NUM:>; dependencyCheck=<:NUM:>; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class <:*:> scope=singleton; abstract=false; lazyInit=false; autowireMode=<:NUM:>; dependencyCheck=<:NUM:>; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
instrumented a special java.util.Set into: <:*:>
Storing ApplicationContext in cache under key <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> = <:*:> contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
Resolved location pattern [classpath*:com/alibaba/dubbo/config/spring/context/annotation/consumer/test/**/*.class] to resources [file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration$Ancestor.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration$Child.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration$Parent.class], file [/data/dubbo/dubbo-<:NUM:>.<:NUM:>.<:NUM:>-release-log-adjust/dubbo-config/dubbo-config-spring/target/test-classes/com/alibaba/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration.class]]
[DUBBO] Successed connect to server /<:IP:>:<:NUM:> from NettyClient <:IP:> using dubbo version <:NUM:>.<:NUM:>.<:NUM:>, channel is NettyChannel [channel=[id: <:HEX:>, L:/<:IP:>:<:NUM:> - R:/<:IP:>:<:NUM:>]], dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
-Dio.netty.recycler.maxCapacityPerThread: <:NUM:>
-Dio.netty.recycler.maxSharedCapacityFactor: <:NUM:>
-Dio.netty.recycler.linkCapacity: <:NUM:>
-Dio.netty.recycler.ratio: <:NUM:>
-Dio.netty.buffer.bytebuf.checkAccessible: true
Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@67fe6e27
After test class: context [DefaultTestContext@<:NUM:> testClass = <:*:> testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = <:*:> testClass = <:*:> locations = '{}', classes = '{class <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> <:*:> = <:*:> contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
Retrieved @TestPropertySource [@org.springframework.test.context.TestPropertySource(properties=[], locations=[classpath:/dubbo.properties], inheritProperties=true, inheritLocations=true, value=[classpath:/dubbo.properties])] for declaring class [com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinderTest].
Resolved TestPropertySource attributes: [TestPropertySourceAttributes@<:NUM:> declaringClass = 'com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinderTest', locations = '{classpath:/dubbo.properties}', inheritLocations = true, properties = '{}', inheritProperties = true]
Processing locations for TestPropertySource attributes [TestPropertySourceAttributes@<:NUM:> declaringClass = 'com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinderTest', locations = '{classpath:/dubbo.properties}', inheritLocations = true, properties = '{}', inheritProperties = true]
Processing inlined properties for TestPropertySource attributes [TestPropertySourceAttributes@<:NUM:> declaringClass = 'com.alibaba.dubbo.config.spring.context.properties.DefaultDubboConfigBinderTest', locations = '{classpath:/dubbo.properties}', inheritLocations = true, properties = '{}', inheritProperties = true]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@70224e31, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3771cad9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@14eb6c42, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5cb8009e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3e898efe, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@797bcf4]
[DUBBO] No spring extension (bean) <:*:> try to find an extension (bean) of type <:*:> dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
[DUBBO] Find more than <:NUM:> spring extensions (beans) of type com.alibaba.dubbo.config.spring.api.DemoService, will stop auto injection. Please make sure you have specified the concrete parameter type and there's only one extension of that type., dubbo version: <:NUM:>.<:NUM:>.<:NUM:>, current host: <:IP:>
Loading XML bean definitions from class path resource <:*:>
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Trying to resolve XML entity with public id [null] and system id <:*:>
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/cache/spring-cache-<:NUM:>.<:NUM:>.xsd=org/springframework/cache/config/spring-cache-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context-<:NUM:>.<:NUM:>.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context-<:NUM:>.<:NUM:>.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/cache/spring-cache-<:NUM:>.<:NUM:>.xsd=org/springframework/cache/config/spring-cache-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/task/spring-task-<:NUM:>.<:NUM:>.xsd=org/springframework/scheduling/config/spring-task-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/cache/spring-cache-<:NUM:>.<:NUM:>.xsd=org/springframework/cache/config/spring-cache-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context-<:NUM:>.<:NUM:>.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/cache/spring-cache-<:NUM:>.<:NUM:>.xsd=org/springframework/cache/config/spring-cache-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/task/spring-task-<:NUM:>.<:NUM:>.xsd=org/springframework/scheduling/config/spring-task-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/cache/spring-cache-<:NUM:>.<:NUM:>.xsd=org/springframework/cache/config/spring-cache-<:NUM:>.<:NUM:>.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/task/spring-task-<:NUM:>.<:NUM:>.xsd=org/springframework/scheduling/config/spring-task-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context-<:NUM:>.<:NUM:>.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context-<:NUM:>.<:NUM:>.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/task/spring-task-<:NUM:>.<:NUM:>.xsd=org/springframework/scheduling/config/spring-task-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/task/spring-task-<:NUM:>.<:NUM:>.xsd=org/springframework/scheduling/config/spring-task-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context-<:NUM:>.<:NUM:>.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/task/spring-task-<:NUM:>.<:NUM:>.xsd=org/springframework/scheduling/config/spring-task-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/cache/spring-cache-<:NUM:>.<:NUM:>.xsd=org/springframework/cache/config/spring-cache-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop-<:NUM:>.<:NUM:>.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context-<:NUM:>.<:NUM:>.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/util/spring-util-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-util-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/lang/spring-lang-<:NUM:>.<:NUM:>.xsd=org/springframework/scripting/config/spring-lang-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/context/spring-context-<:NUM:>.<:NUM:>.xsd=org/springframework/context/config/spring-context-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/beans/spring-beans-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-beans-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tool/spring-tool-<:NUM:>.<:NUM:>.xsd=org/springframework/beans/factory/xml/spring-tool-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/tx/spring-tx-<:NUM:>.<:NUM:>.xsd=org/springframework/transaction/config/spring-tx-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/jee/spring-jee-<:NUM:>.<:NUM:>.xsd=org/springframework/ejb/config/spring-jee-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/task/spring-task-<:NUM:>.<:NUM:>.xsd=org/springframework/scheduling/config/spring-task-<:NUM:>.<:NUM:>.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-<:NUM:>.<:NUM:>.xsd}
Found XML schema <:*:> in classpath: <:*:>
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Loaded <:NUM:> bean definitions from location pattern <:*:>
[DUBBO] package <:*:>
Using SLF4J as the default logging framework
-Dio.netty.eventLoopThreads: <:NUM:>
-Dio.netty.noKeySetOptimization: false
-Dio.netty.selectorAutoRebuildThreshold: <:NUM:>
-Dio.netty.noUnsafe: false
Java version: <:NUM:>
sun.misc.Unsafe.theUnsafe: available
sun.misc.Unsafe.copyMemory: available
java.nio.Buffer.address: available
direct buffer constructor: available
java.nio.Bits.unaligned: available, true
jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
java.nio.DirectByteBuffer.<init>(long, int): available
sun.misc.Unsafe: available
-Dio.netty.tmpdir: /tmp (java.io.tmpdir)
-Dio.netty.bitMode: <:NUM:> (sun.arch.data.model)
-Dio.netty.noPreferDirect: false
-Dio.netty.maxDirectMemory: <:NUM:> bytes
-Dio.netty.uninitializedArrayAllocationThreshold: <:NUM:>
java.nio.ByteBuffer.cleaner(): available
org.jctools-core.MpscChunkedArrayQueue: available
-Dio.netty.leakDetection.level: simple
-Dio.netty.leakDetection.targetRecords: <:NUM:>
-Dio.netty.allocator.numHeapArenas: <:NUM:>
-Dio.netty.allocator.numDirectArenas: <:NUM:>
-Dio.netty.allocator.pageSize: <:NUM:>
-Dio.netty.allocator.maxOrder: <:NUM:>
-Dio.netty.allocator.chunkSize: <:NUM:>
-Dio.netty.allocator.tinyCacheSize: <:NUM:>
-Dio.netty.allocator.smallCacheSize: <:NUM:>
-Dio.netty.allocator.normalCacheSize: <:NUM:>
-Dio.netty.allocator.maxCachedBufferCapacity: <:NUM:>
-Dio.netty.allocator.cacheTrimInterval: <:NUM:>
-Dio.netty.allocator.useCacheForAllThreads: true
-Dio.netty.threadLocalMap.stringBuilder.initialSize: <:NUM:>
-Dio.netty.threadLocalMap.stringBuilder.maxSize: <:NUM:>
-Dio.netty.processId: <:NUM:> (auto-detected)
-Djava.net.preferIPv4Stack: true
-Djava.net.preferIPv6Addresses: false
Loopback interface: lo (lo, <:IP:>)
/proc/sys/net/core/somaxconn: <:NUM:>
-Dio.netty.machineId: <:ID:> (auto-detected)
-Dio.netty.allocator.type: pooled
-Dio.netty.threadLocalDirectBufferSize: <:NUM:>
-Dio.netty.maxThreadLocalCharBufferSize: <:NUM:>
Publishing event in org.springframework.context.support.ClassPathXmlApplicationContext@60a44e4: com.alibaba.dubbo.config.spring.context.event.ServiceBeanExportedEvent[source=<dubbo:service beanName="com.alibaba.dubbo.config.spring.api.DemoService" interface="com.alibaba.dubbo.config.spring.api.DemoService" uniqueServiceName="com.alibaba.dubbo.config.spring.api.DemoService" exported="false" unexported="false" path="com.alibaba.dubbo.config.spring.api.DemoService" ref="com.alibaba.dubbo.config.spring.impl.DemoServiceImpl@11bf44c0" delay="<:NUM:>" id="com.alibaba.dubbo.config.spring.api.DemoService" />]
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceConfig': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Duplicate provider configs: <dubbo:provider timeout="<:NUM:>" id="com.alibaba.dubbo.config.ProviderConfig" /> and <dubbo:provider timeout="<:NUM:>" default="true" delay="<:NUM:>" id="com.alibaba.dubbo.config.ProviderConfig2" />
No bean named 'notify' found in org.springframework.beans.factory.support.DefaultListableBeanFactory@ab8d6a6: defining beans [demo-consumer,demoService]; root of factory hierarchy
Retrieved dependent beans for bean 'demoService.sayName': [demoService]
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': Cannot create inner bean 'demoService.sayName' of type [com.alibaba.dubbo.config.MethodConfig] while setting bean property 'methods' with key [<:NUM:>]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService.sayName': Cannot resolve reference to bean 'notify' while setting bean property 'onreturn'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'notify' available
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceConfig': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Duplicate monitor configs: <dubbo:monitor version="<:NUM:>.<:NUM:>" id="com.alibaba.dubbo.config.MonitorConfig" /> and <dubbo:monitor version="<:NUM:>.<:NUM:>" id="com.alibaba.dubbo.config.MonitorConfig2" />
logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
